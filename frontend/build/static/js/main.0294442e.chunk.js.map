{"version":3,"sources":["Context.js","utils/financeCalculations.js","ContextUI.js","utils/useViewport.js","utils/numFormatter.js","UserContext.js","portfolio/CurrentPriceRP.js","components/components/CustomCircularProgress.js","utils/datesUtils.js","portfolio/PurchaseDialog.js","portfolio/StockShop2.js","components/subNavigations/CompanyNav.js","utils/useMesure.js","utils/useDebounce.js","components/navSearch.js","components/Navbar.js","components/components/treeItem.js","Auth/ImageUploader.js","Auth/ContactDetails.js","Auth/UpdateInfoView.js","Auth/ProfileSidebar.js","components/Sidebar.js","charts/CustomAreaChart.js","views/principal/elements/GainersCarousel.js","utils/useFetchWithCors.js","views/principal/elements/Sectors.js","views/principal/elements/TickerBar2.js","components/Searcher4.js","views/principal/principal.js","utils/useFetch.js","components/Multioption.js","utils/useCurrentCompany.js","charts/KeymetricsChart.js","charts/CovidMap.js","views/covid/Sliders.js","views/covid/CovidSection2.js","views/covid/Draggable.js","components/NewsItem.js","views/principal/elements/News.js","views/company/FinancialOptions.js","utils/useCellWidth.js","views/company/Rows.js","views/company/FinancialStatements/CashFlow.js","views/company/FinancialStatements/IncomeStatement.js","views/company/FinancialStatements/TableUI2.js","views/company/Financials.js","utils/useChartReflow.js","charts/StackedColumn.js","views/company/PeerCarousel.js","views/company/PeersSquare.js","views/company/BottomSection.js","views/company/KeyMetrics.js","utils/Pipes.js","views/company/CompanyChart.js","views/company/CompanySection.js","charts/IndexesChart.js","utils/useFatch.js","views/indexes/ChartIndex.js","views/indexes/Constituents.js","views/indexes/BigIndex.js","charts/indexesChart2.js","charts/MiniatureChartIndex.js","components/TransitionComponent.js","charts/GeneralIndexDispatcher.js","views/indexes/IndexesGeneral.js","views/indexes/IndexesController.js","portfolio/portfolioGenerator2.js","portfolio/logicPruebasConAdd.js","portfolio/PortfolioPriceChart.js","utils/useRemoveCredits.js","portfolio/useCompaniesChange.js","charts/DonutChart.js","dashboard/AssetStructure.js","dashboard/PerformanceStructure.js","dashboard/PerformanceStructureB.js","dashboard/Sorter.js","dashboard/SearcherPositions.js","dashboard/Positions.js","dashboard/Middleware2.js","useTemporaryPossesions.js","views/company/ControllerCompany.js","utils/useMountApproval.js","components/Overlay.js","Personas/PortfolioChartPeople.js","Personas/useCompaniesChangePersona.js","Personas/charts/PositionsPersonas.js","Personas/charts/PerformanceStructurePeople.js","Personas/charts/PerformanceStructureBPersonas.js","Personas/charts/AssetStructurePeople.js","Personas/OperationList.js","Personas/ChartsSection.js","Personas/PeopleDetails.tsx","Personas/UserItem.js","Personas/PersonasList.tsx","Personas/PeopleRouter.tsx","views/seguidores/TextEditor.js","views/seguidores/FeedViews.tsx","Auth/SocialButtons.js","Auth/Login.js","Auth/ProtectedRoute.js","Auth/useIAuth.js","Auth/Register.js","views/seguidores/Post.js","views/seguidores/FollowingDispatcher.js","views/seguidores/PopulateOnScroll.js","App.js","portfolio/Engine.js","utils/useHandleProfileImage.js","serviceWorker.ts","index.js"],"names":["Context","createContext","checkLocalStorage","field","localStorage","getItem","JSON","parse","initialState","keymetrics","prices","metricsHistorical","generalData","indexList","currentCompany","name","ticker","financials","balance","income","cashflow","peers","indexes","visitedCompanies","portfolioHistory","portfolioHistoryByCompany","userActivity","currentPossesions","stocks","generatedSeries","data","dates","ready","companiesImpact","areHistoricPricesReady","setPruebaReady","stockLibrary","missingTicker","following","portfolioSeriesReady","simulation","quotes","companyReducer","state","action","console","log","payload","type","value","operationType","unitPrice","isFirstOperation","length","details","unitaryCost","priceSold","date","amount","isUserActivityReady","balance1","userCash","newAmount","updatedPosesions","unitaryPrice","assetType","newCash","cashNetOperation","alreadyOwned","find","item","filter","asset","map","posesions","getUnitaryCostMean","cash","stateCopy","includes","portfolioSeries","companiesChange","addFirstSerie","ContextProvider","children","useReducer","dispatch","Provider","useDataLayer","useContext","UIProvider","useState","sidebarOpen","setSidebarOpen","showOverlay","setShowOverlay","tickerMove","setTickerMove","mountApproval","setMountApproval","drawerWidth","setDrawerWidth","imageUrl","setImageUrl","useUILayer","useViewport","window","innerWidth","viewport","setViewport","updateViewport","useEffect","addEventListener","removeEventListener","formatter","Intl","NumberFormat","style","currency","rounder","num","Math","round","Number","EPSILON","context","React","isAuthenticated","token","Cookie","getJSON","err","getToken","info","email","config","staticImage","userReducer","removeItem","URL","createObjectURL","UserContext","userState","userDispatch","useUserLayer","UserContextt","CurrentPriceRP","currentPrice","loading","error","setCurrentPrice","a","prev","fetch","request","json","c","message","getCurrentPrice","useStyles","makeStyles","root","animationDuration","circle","strokeLinecap","defaultStyles","opacity","transition","transitionStyles","entering","entered","exiting","exited","CustomCircularProgress","adaptable","animState","styles","className","CircularProgress","disableShrink","thickness","classes","circular","convertHumanToUnixInit","actualDate","split","mongol","parseInt","Date","toString","getTime","convertUnixToHuman","unix","d","handleDoubleDigit","isMonth","monthNum","getMonth","dayNum","getDate","getFullYear","GrowTransition","forwardRef","props","ref","Grow","PurchaseDialog","modalOpen","setModalOpen","qty","orderTotal","submitOrder","handleClose","Dialog","open","onClose","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","format","DialogActions","Button","onClick","background","variant","color","autoFocus","now","LoginMessage","styled","div","height","display","flexDirection","justifyContent","alignItems","getStockPossesion","possesions","stock","StockShop","fundId","theme","useTheme","setQty","setOrderTotal","setOperationType","restartPortfolio","useRef","setOpen","msg","errorModal","setErrorModal","location","useLocation","enableRealtime","current","showErrorModal","text","handleType","e","checkIsValidOperation","aria-label","palette","success","main","size","startIcon","setItem","stringify","headers","Accept","method","body","user","order","price","then","catch","alert","marginBottom","to","pathname","StyledOp","span","Dialogo1","Transition","keepMounted","fullWidth","maxWidth","disableEnforceFocus","disableAutoFocus","ToggleButtonGroup","exclusive","onChange","orientation","primary","light","secondary","op","ToggleButton","List","ListItem","ListItemText","ListItemSecondaryAction","TextField","target","inputProps","min","width","Divider","disabled","ErrorDialog","appBarCompany","transitions","create","easing","sharp","duration","enteringScreen","transform","appBarCompanyShift","tab","marginLeft","breakpoints","down","white","borderColor","tabItem","fontSize","up","minWidth","scrollButtons","CompanyNav","menuCompaniesOpen","topNavigation","setDimensions","offsetHeight","offsetWidth","useMesure","history","useHistory","tabValue","setTabValue","a11yProps","index","menu2transitions","top","handleChange","val","navigate","url","push","setIsFollowing","_isFollowing","tag","in","timeout","onExited","animationState","AppBar","clsx","Tabs","Tab","label","firstLoad","useDebounce","fieldChanging","debounceTime","cancelTimeout","debouncedQuery","setDebouncedQuery","setTimeout","clearTimeout","search","position","borderRadius","shape","backgroundColor","fade","common","marginRight","spacing","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","isFocused","resultsList","left","listStyle","textDecoration","menuBody","overflow","menuHeight","NavSearch","setIsFocused","cancel","inputVal","setInputVal","debouncedField","useDebounceCancelable","useSearch","menu","setMenuHeight","getBoundingClientRect","InputBase","newVal","persist","placeholder","input","onFocus","onBlur","transformOrigin","Fade","mountOnEnter","unmountOnExit","LiItem","query","setRequest","fetchar","rawData","dataOnlyStocks","grow","flex","menuButton","title","flexGrow","appBar","zIndex","drawer","leavingScreen","appBarShift","hide","desktopActions","Navbar","setMenuCompaniesOpen","params","masterRoute","data-testid","Toolbar","IconButton","edge","Typography","noWrap","cb","remove","useTreeItemStyles","hover","grey","isTitle","content","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","expanded","selected","labelRoot","labelIcon","labelText","iconContainer","StyledTreeItem","LabelIcon","labelInfo","bgColor","ariaLabel","other","TreeItem","ImageUploader","margin","imageUpload","setImageUpload","setResponse","setLoading","loaded","setLoaded","provisionalImg","setProvisionalImg","image","handleSubmit","preventDefault","imageData","FormData","append","res","blob","onSubmit","htmlFor","src","onLoad","Skeleton","objectFit","files","LoadingButton","endIcon","ContactDetails","country","setCountry","gender","setGender","nacimiento","dateBirth","setDateBirth","firstName","lastName","setNames","fieldsToUpdate","Error","CountrySelect","FormControl","InputLabel","Select","labelId","onOpen","MenuItem","countries","countryName","Gender","DateOfBirth","focused","setFocused","defaultValue","InputLabelProps","shrink","Label","Names","focusedField","setFocusedField","handleFocus","UpdateInfoView","useFetchUser","AuthMiddleware","container","document","getElementById","ProfileSidebar","username","debounceLoad","TextSection","DialogUser","ReactDOM","createPortal","DialogText","userInfo","flexShrink","whiteSpace","drawerOpen","overflowX","drawerClose","toolbar","listItemText","textSpan","textOverflow","Sidebar","setExpanded","setSelected","closeSidebar","Drawer","paper","direction","TreeView","defaultEndIcon","onMouseEnter","onMouseLeave","onNodeToggle","nodeId","onNodeSelect","event","nodeIds","AssessmentIcon","onLabelClick","HistoryIcon","SearchIcon","MailIcon","SupervisorAccountIcon","InfoIcon","ForumIcon","LocalOfferIcon","DeleteIcon","company","button","ListItemIcon","CustomAreaChart","datos","setData","shortDatos","handleDatasetLength","dataset","sobras","slice","chartOptions","chart","borderWidth","crisp","animation","series","linearGradient","x1","x2","y1","y2","stops","xAxis","crosshair","lineWidth","gridLineWidth","lineColor","minorTickLength","tickLength","labels","enabled","minPadding","maxPadding","yAxis","tooltip","credits","legend","plotOptions","column","pointPadding","marker","states","highcharts","Highcharts","constructorType","options","containerProps","GainersCarousel","readyData","alldata","adjClose","chartItems","companyName","changes","disableDotsControls","infinite","items","autoWidth","useFetchWithCors","topic","fromOwnServer","dir","isInStore","isInState","isInLocalStorage","rawdata","fetcharb","Sectors","classnames","sector","textAlign","changesPercentage","re","TickerBar2","move","test","Searcher4","setSelection","spinnerReady","setSpinnerReady","setValue","opened","setOpened","isSelecting","setIsSelecting","hasExited","setHasExited","setWrapperHeight","listItems","wrapperHeigh","onTransitionEnd","onEntered","cursor","onMouseOver","onMouseOut","titleStyles","marginTop","Principal","useFetch","explicitUrl","formControl","chips","flexWrap","chip","noLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Multioption","fields","setChosenFields","chosenFields","selections","setSelections","multiselector","isOpen","setIsOpen","closeMultiselector","contains","multiple","Input","renderValue","Chip","clickable","onDelete","Object","keys","getStyles","indexOf","useCompanyGuard","useParams","KeymetricsChart","toUpperCase","setDataset","resa","masterObject","forEach","record","datasetBuilder","allowDecimals","layout","align","verticalAlign","connectorAllowed","pointStart","responsive","rules","condition","CovidMap","mode","worldMap","covidMap","reflow","mapOptions","events","load","this","colorAxis","mapNavigation","enableDoubleClickZoomTo","mapData","dataLabels","innerHeight","slider","valueLabel","Sliders","setDate","setMode","day","setDays","month","setMonth","year","setYear","lastChosenYear","sliderDay","childnum","recursivadorStyle","Array","from","itam","classList","dayc","monthc","dateBuider","Slider","max","marks","days","valueLabelDisplay","stopPropagation","marksYear","RadioGroup","FormControlLabel","control","Radio","CovidSection2","datosHuge","loadingHuge","errorHuge","blackList","populationNF","controller","population","findPopulation","register","toLowerCase","countrypop","fetcher","AbortController","signal","countryArr","nombre","pais","undefined","countryCode","code","today_confirmed","result","aborted","abort","elmnt","pos1","pos2","pos3","pos4","elementDrag","clientX","clientY","offsetTop","offsetLeft","closeDragElement","onmouseup","onmousemove","onmousedown","querySelector","dragElement","ErrorOverlay","appear","NewsItem","alt","headline","category","summary","NewsItemOver","GridComposition","chunk","NewsItemSmall","NewsItemNoStyled","backgroundImage","backgroundSize","News","principal","datosGrid","setDatosGrid","newsPerPage","setNewsPerPage","debounce","intersectionRef","intersection","useIntersection","rootMargin","threshold","gridArr","initialNum","finalNum","fill","arrangeDatos","debounceTimer","intersectionRatio","defaultProps","FinancialOptions","setField","campo","statement","lookUpField","assignStatement","handleGetFieldData","useCellWidth","medium","small","large","cellWidth","breakpoint","setCellWidth","cellSize","resizeCell","tableConatiner","iconButton","cell","borderBottom","sectionTitleCell","subtitles","TableCellSmall","withStyles","TableCell","TableCellXSmall","makeShortInt","replace","TableSectionChunk","lookupKey","TableRow","colSpan","_","TableSubtitleChunk","hackWidth","visibility","TableSubSubtitleChunk","Collapsible","renderTitleSection","TableBody","Collapse","Table","TableSectionAlone","cellWidthBreakpoints","CashFlow","anualdata","TableContainer","TableHead","fieldName","injectedOpen","setInjectedOpen","IncomeStatement","useStylos","TableUI2","Financials","annualReports","TableDataPrep","setReadyData","fiscalDateEnding","structuredData","useChartReflow","chartInstance","dataReducer","StackedColumn","getCurrentYear","arr","period","dataCurrentYear","reverse","categories","stackLabels","defaultOptions","shadow","headerFormat","pointFormat","stacking","PeerCarousel","peersData","Peer","symbol","pe","Paper","PeersSquare","peerTickers","fetching","setPeerTickers","pfetching","perror","setPeersData","fetchPeers","promiseArr","Promise","all","dota","cleanData","peersCombined","isArray","peer","fetchAllPeers","BottomSection","KeyMetrics","setListHeight","listo","setError","trim","CompanyChart","AdjustedPrices","notAdjustedPrices","theChart","setChart","formatedDate","prepareData","ohl","ohlNA","cleanRecord","cleanRecordNoAdjusted","high","low","close","zoomType","selection","candlestick","upColor","upLineColor","rangeSelector","allButtonsEnabled","navigator","dataGrouping","units","smoothed","CompanySection","clasi","setClasi","keyMetricsRef","Box","mb","IndexesChart","historical","datab","dateArr","useFatch","wasInState","ChartIndex","categorySan","Constituents","subCategory","constituents","setConstituents","BigIndex","sanitizedQuery","IndexesChart2","MiniatureChart","datus","Slide","setOpenChartModal","fullScreen","GeneralIndexDispatcher","setChartSelected","chartSelected","openChartModal","IndexesGeneral","allIndexPrices","error2","setAllIndexPrices","loading2","arri","provisionalData","indexPrincesCopy","getProvisionalData","change","SkeletonTable","IndexesController","usePortfolioGenerator","setProcessing","initialDate","fetchQuotes","tickers","generateSerie","worker","Worker","postMessage","_portfolioHistory","_generatedSeries","onmessage","companiesPerformanceImpact","storePortfolioDB","portfolio","getInitialDate","handleSimulatedSeries","useLogicPruebas","possesionGenerated","generateSerieFromBegining","generatedSerie","setOptions","global","useUTC","lang","rangeSelectorZoom","PortfolioPriceChart","availableTomorrow","setAvailableTomorrow","isLoaded","setIsLoaded","creditsComps","querySelectorAll","el","useRemoveCredits","firstOpTime","key","currentLiquidative","liquidativeValue","simulateSerie","firstDate","unixTime","dropdown","inputEnabled","useCompaniesChange","available","setAvailability","simulatedDataset","priceRightNow","priceInfo","priceInitialMoment","simulateSeries","unixDate","wasInPort","positions","prevDayPrice","generateSeries","DonutChart","pie","innerSize","AssetStructure","proportion","arrByCompany","totalMarketVal","poss","marketVal","stockHistory","getMarketValueByStock","PerformanceStructure","dataReady","setDataReady","_dataReady","prepareDataset","entries","point","abs","alignTicks","approximation","PerformanceStructureB","chartData","setChartData","readySeries","assetData","prepareForChart","isThereAndRelevant","performance","relevantOthers","Sorter","openSorter","setOpenSorter","handleSorting","handleSelected","firstRender","StyledMenuItem","anchorEl","Boolean","disableScrollLock","anchorOrigin","vertical","horizontal","list","SearcherPositions","setQuery","inputRef","focus","logoReducer","logos","successLogo","readyState","setReadyState","setQuotes","defaultData","openSearcher","setOpenSearcher","requestAdditionalInfo","tickars","stocksWithLogos","compChangeArr","getCompanyChange","theStockLogo","logourl","weburl","company_name","fundPrices","lastPrice","logo","theStockQuote","updatedList","what","sort","b","sortState","currentTarget","StockItem","ImageFund","fundid","reqe","kaka","getImageUrl","weigthed","Middleware","helperText","StyledContainer","Positions","TansitionGrow","NoUnitsDialog","StyledHeader","HeaderChart","Tooltip","enterDelay","leaveDelay","propsTypes","PropTypes","string","isRequired","ControllerCompany","path","useRouteMatch","useMountApproval","exact","Overlay","PortfolioChartPeople","setCurrentPerformance","getCurrentPerformance","floor","scrollbar","class","useCompaniesChangePersona","setCompaniesChange","PositionsPersonas","PerformanceStructurePeople","PerformanceStructureBPersonas","AssetStructurePeople","lastDate","OperationList","operations","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Gridi","rows","columns","headerName","headerHeight","hideFooter","autoHeight","density","onCellClick","accordeon","GridHeader","rowHeight","overlay","ChartsSection","chart1Wrapper","currentStocks","possesionsSeries","readyOperations","PeopleDetails","setState","getPortfolioPrice","shopProps","UserItem","person","currentPerformance","userId","chartWrapper","UserInfo","Portfolio","ImagePeople","imgLoaded","setImgLoaded","PerformanceStatus","reducer","PersonasList","parsedPortfolio","LinearProgress","PeopleRouter","Editor","Draft","EditorState","RichUtils","getDefaultKeyBinding","styleMap","Component","CODE","fontFamily","getBlockStyle","block","getType","CustomButton","StyleButton","onToggle","active","BLOCK_TYPES","BlockStyleControls","editorState","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","ButtonGroup","has","FacebookButton","href","formField","Login","setEmail","password","setPassword","setStatus","redirect","isSmallViewport","useMediaQuery","goBack","ok","required","ProtectedRoute","hasPermission","setHasPermission","useIAuth","textField","dialog","Register","setUsername","rpassword","setRpassword","serverError","setServerError","setSuccess","debouncedUsername","debouncedEmail","valid","validatedFields","setValidatedFields","handleRegister","paperWidthFalse","validation","visible","toggletVisibility","isPassword","endAdornment","InputAdornment","Visibility","VisibilityOff","CustomFormField","FilledInput","FormHelperText","VisibilityToggler","setVisible","Post","selectPost","selectImg","isSelected","conversationData","setConversationData","created_at","time","constructor","time_formats","seconds","list_choice","i","time_ago","entities","giphy","gifUrl","gifLoading","gifError","setGif","randomNum","random","GiphyFetch","gif","embed_url","errors","laoding","avatar_url","sentiment","basic","original","Badge","badgeContent","parent","conversation","replies","messages","Giff","frameBorder","allowFullScreen","param","Reply","memo","FollowingDispatcher","responseType","backdropOpen","selectedPost","rotatingIcon","imgSelected","post","unselectPost","unselectImg","valores","fetchInterests","prevProps","prevState","sortedData","previous","chunkData","postsXChunk","chunkNumber","setChunkCount","sobrantes","iteration","_setIsDataReadyScroll","currentChunk","ModalSelection","ModalImg","right","GsapFadeInStagger","chunkRef","timeline","gsap","childNodes","ease","stagger","PostChunk","PopulateOnScroll","chunkCount","isDataReadyScroll","setCurrentChunk","interestionRef","paddingTop","App","getPricesHistory","portfolioHistoryByDate","portfolioHistoryByCompanies","__init","initialData","useEngine","useIAuthh","static_image","useHandleProfileImage","userData","rest","interests","uniqueStocks","saveTokenInLocalstorage","CssBaseline","Consumer","values","hostname","match","render","StrictMode","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.0294442e.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'\r\nimport { getUnitaryCostMean } from './utils/financeCalculations'\r\nconst Context = createContext()\r\n\r\nconst checkLocalStorage = (field) => {\r\n    return (\r\n        localStorage.getItem(field) ?\r\n            JSON.parse(localStorage.getItem(field))\r\n            :\r\n            //mirar poque lo he cambia de imprevisto\r\n            \"\"\r\n    )\r\n}\r\n\r\n\r\nconst initialState = {\r\n    keymetrics: checkLocalStorage(\"keymetrics\"),\r\n    prices: checkLocalStorage(\"prices\"),\r\n    metricsHistorical: checkLocalStorage(\"metricsHistorical\"),\r\n    generalData: {\r\n        indexList: checkLocalStorage(\"indexList\"),\r\n\r\n    },\r\n    currentCompany: {\r\n        name: \"\",\r\n        ticker: \"\",\r\n    },\r\n    financials: {\r\n        balance: {},\r\n        income: {},\r\n        cashflow: {}\r\n    },\r\n    peers: {\r\n\r\n    },\r\n    indexes: {},\r\n    visitedCompanies: [],\r\n    portfolioHistory: {},\r\n    portfolioHistoryByCompany: {},\r\n    userActivity: checkLocalStorage(\"userActivity\") || [],\r\n    currentPossesions: {\r\n        //userCash: checkLocalStorage(\"userCash\") || 200000,\r\n        stocks: [\r\n            // {\r\n            //     ticker: \"amzn\",\r\n            //     amount: 20\r\n            // },\r\n            // {\r\n            //     ticker: \"aapl\",\r\n            //     amount: 50\r\n            // },\r\n            // {\r\n            //     ticker: \"tef\",\r\n            //     amount: 80\r\n            // },\r\n        ]\r\n    },\r\n    // currentPossesions: checkLocalStorage(\"stockCurrentPossesions\") || { tef: \"\", aapl: \"\", amzn: \"\" },\r\n    generatedSeries: {\r\n        data: {\r\n            dates: {}\r\n        },\r\n        ready: false\r\n    },\r\n    //acumulatedRendiments : ,\r\n    companiesImpact: {},\r\n    areHistoricPricesReady: false,\r\n    setPruebaReady: false,\r\n    stockLibrary: [],\r\n    missingTicker: \"\",\r\n    following: [],\r\n    portfolioSeriesReady: false,\r\n\r\n    simulation: {\r\n        quotes: null\r\n    }\r\n}\r\n\r\nconst companyReducer = (state, action) => {\r\n    console.log(action.payload, \"tiiiiipo\")\r\n    console.log(\"heeey\")\r\n    switch (action.type) {\r\n        case \"STORE_DATA\":\r\n            return {\r\n                ...state,\r\n                [action.payload.field]: {\r\n                    ...state[action.payload.field],\r\n                    [action.payload.ticker]: action.payload.value\r\n                }\r\n            }\r\n        case \"STORE_GENERAL_DATA\":\r\n            console.log(action.payload, \"tu putisima madre\")\r\n            return {\r\n                ...state,\r\n                generalData: {\r\n                    ...state.generalData,\r\n                    [action.payload.field]: action.payload.value\r\n                }\r\n            }\r\n        case \"SET_COMPANY\":\r\n            console.log(action, \"que puta\")\r\n            return {\r\n                ...state,\r\n                currentCompany: {\r\n                    ...state.currentCompany,\r\n                    name: action.payload.name,\r\n                    ticker: action.payload.ticker\r\n                }\r\n            }\r\n        //...state.financials.field de la penultima linea es erroneo muy posiblemente\r\n        case \"SET_FINANCIALS\":\r\n            return {\r\n                ...state,\r\n                financials: {\r\n                    ...state.financials,\r\n                    [action.payload.field]: {\r\n                        ...state.financials.field,\r\n                        [action.payload.ticker]: action.payload.value\r\n                    }\r\n                }\r\n            }\r\n        case \"SET_INDEXES\":\r\n            return {\r\n                ...state,\r\n                indexes: {\r\n                    ...state.indexes,\r\n                    [action.payload.field]: {\r\n                        ...state.indexes[action.payload.field],\r\n                        [action.payload.ticker]: action.payload.value\r\n                    }\r\n                }\r\n            }\r\n        case \"ADD_VISITED_COMPANY\":\r\n            return {\r\n                ...state,\r\n                visitedCompanies: [...state.visitedCompanies, action.payload]\r\n            }\r\n        //good as a helper to generate ready-portfolio-generatedseries\r\n        case \"STORE_PORTFOLIO_HISTORY_BY_DATE\":\r\n            return {\r\n                ...state,\r\n                portfolioHistory: action.payload\r\n            }\r\n        case \"STORE_PORTFOLIO_HISTORY_BY_COMPANY_CHART_READY\":\r\n            //by ready we mean this the data format array accepted by Highcharts\r\n            return {\r\n                ...state,\r\n                portfolioHistoryByCompany: action.payload\r\n            }\r\n        //para que necesitamos esto si no lo\r\n        case \"STOCK_OPERATION\":\r\n            const { operationType, unitPrice } = action.payload\r\n            let isFirstOperation = false\r\n            if (state.userActivity.length === 0) {\r\n                isFirstOperation = true\r\n            }\r\n            const details = operationType === \"buy\" ?\r\n                { unitaryCost: unitPrice } :\r\n                { priceSold: unitPrice }\r\n            return {\r\n                ...state,\r\n                userActivity: [\r\n                    ...state.userActivity,\r\n                    {\r\n                        date: action.payload.date,\r\n                        operationType,\r\n                        details: {\r\n                            ticker: action.payload.ticker,\r\n                            amount: action.payload.amount,\r\n                            ...details,\r\n                        },\r\n                        isFirstOperation\r\n                    }\r\n                ]\r\n            }\r\n        // case \"HANDLE_USER_CASH\":\r\n        //     return {\r\n        //         ...state,\r\n        //         userActivity: state.userActivity + action.payload\r\n        //     }\r\n        case \"ADD_DIRECT_HISTORY\":\r\n            return {\r\n                ...state,\r\n                userActivity: [...state.userActivity, ...action.payload],\r\n                isUserActivityReady: true\r\n            }\r\n        case \"SELL_STOCK\":\r\n            let balance1 = state.userCash + action.payload\r\n            return {\r\n                ...state,\r\n                userCash: balance1\r\n            }\r\n\r\n        case \"ADD_PORTFOLIO_CURRENT_POSSESIONS\":\r\n            //OJO ESTE LO TENEMOS QUE QITAR\r\n            //action.payload.cashNetOperation = 0\r\n            const { ticker, date, unitaryPrice, amount, assetType } = action.payload\r\n            let newAmount;\r\n            let updatedPosesions;\r\n            const newCash = action.payload.operationType === \"buy\" ?\r\n                state.currentPossesions.userCash - action.payload.cashNetOperation\r\n                :\r\n                state.currentPossesions.userCash + action.payload.cashNetOperation\r\n\r\n            const alreadyOwned = state.currentPossesions.stocks.find(item => item.ticker === ticker)\r\n            //ojo aqui que no nos de un empty object y sea evaluado como true\r\n            if (alreadyOwned) {\r\n                newAmount = action.payload.operationType === \"buy\" ?\r\n                    alreadyOwned.amount + action.payload.amount\r\n                    :\r\n                    alreadyOwned.amount - action.payload.amount\r\n                if (newAmount === 0) {\r\n                    updatedPosesions = state.currentPossesions.stocks.filter(asset => asset.ticker !== ticker)\r\n                } else {\r\n                    updatedPosesions = state.currentPossesions.stocks.map(asset => {\r\n                        if (asset.ticker === ticker) {\r\n                            asset.amount = newAmount\r\n                            if (action.payload.operationType === \"buy\") {\r\n                                asset.unitaryCost = getUnitaryCostMean(asset, amount, unitaryPrice)\r\n                            }\r\n                        }\r\n                        return asset\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                updatedPosesions = [\r\n                    ...state.currentPossesions.stocks,\r\n                    {\r\n                        ticker,\r\n                        amount: action.payload.amount,\r\n                        date,\r\n                        unitaryCost: unitaryPrice,\r\n                        assetType\r\n                    }\r\n                ]\r\n\r\n                return {\r\n                    ...state,\r\n                    currentPossesions: {\r\n\r\n                        userCash: newCash,\r\n                        stocks: updatedPosesions\r\n                    },\r\n                    missingTicker: ticker\r\n                }\r\n\r\n            }\r\n            // const posesionToAdd = newAmount === 0 ?\r\n            //     [...state.currentPossesions.stocks] :\r\n            //     [\r\n            //         ...state.currentPossesions.stocks,\r\n            //         { ticker, amount: newAmount }\r\n            //     ]\r\n\r\n            //tenemos que eliminarlo si hemos vendido todas las acciones de un ticker\r\n            return {\r\n                ...state,\r\n                currentPossesions: {\r\n                    userCash: newCash,\r\n                    stocks: updatedPosesions\r\n                }\r\n            }\r\n        // this one could be just temporal as is needed for creating chart (is the trans)\r\n        case \"SET_INITIAL_POSSESIONS\":\r\n            return {\r\n                ...state,\r\n                currentPossesions: {\r\n                    stocks: action.payload.stocks,\r\n                    userCash: action.payload.cash\r\n                }\r\n            }\r\n        case \"ADD_UNIQUE_STOCKS\":\r\n            let stateCopy = state.stockLibrary\r\n            if (!stateCopy.includes(action.payload.ticker)) {\r\n                stateCopy = [...stateCopy, action.payload.ticker]\r\n            }\r\n            return {\r\n                ...state,\r\n                stockLibrary: stateCopy,\r\n            }\r\n        case \"SET_INITIAL_UNIQUE_STOCKS\":\r\n            return {\r\n                ...state,\r\n                stockLibrary: action.payload\r\n            }\r\n        case \"STORE_GENERATED_SERIES\":\r\n            return {\r\n                ...state,\r\n                generatedSeries: {\r\n                    data: action.payload,\r\n                    ready: true\r\n                }\r\n            }\r\n        case \"RESTART_GENERATED_SERIES\":\r\n            //we could just add new to existing, but lets simplify logic\r\n            return {\r\n                ...state,\r\n                generatedSeries: {\r\n                    data: \"\",\r\n                    ready: false\r\n                }\r\n            }\r\n        case \"STORE_PORTFOLIO_SERIES\":\r\n            return {\r\n                ...state,\r\n                portfolioSeries: action.payload,\r\n                portfolioSeriesReady: true\r\n            }\r\n        case \"SET_PORTFOLIO_SERIES_AWAITING\":\r\n            return {\r\n                ...state,\r\n                portfolioSeries: null,\r\n                portfolioSeriesReady: true\r\n            }\r\n        case \"RESTART_PORTFOLIO_SERIES\":\r\n            return {\r\n                ...state,\r\n                portfolioSeries: null,\r\n                portfolioSeriesReady: false\r\n            }\r\n        case \"SET_ARE_HISTORIC_PRICES_READY\":\r\n            return {\r\n                ...state,\r\n                areHistoricPricesReady: action.payload\r\n            }\r\n        case \"ENABLE\":\r\n            console.log(\"eeenaaaabled\")\r\n            return { ...state, setPruebaReady: true }\r\n        case \"SET_MISSING_TICKER\":\r\n            return {\r\n                ...state,\r\n                missingTicker: [action.payload]\r\n            }\r\n        case \"RESTART_MISSING_TICKER\":\r\n            return {\r\n                ...state,\r\n                missingTicker: \"\"\r\n            }\r\n        case \"STORE_IMPACT_BY_COMPANY\":\r\n            return {\r\n                ...state,\r\n                companiesImpact: {\r\n                    data: action.payload,\r\n                    ready: true\r\n                }\r\n            }\r\n        case \"COMPANIES_IMPACT_AWAITING\":\r\n            return {\r\n                ...state,\r\n                companiesImpact: {\r\n                    data: null,\r\n                    ready: true\r\n                }\r\n            }\r\n        //ojo esto es formato gráfica\r\n        case \"STORE_COMPANIES_CHANGE\":\r\n            return {\r\n                ...state,\r\n                companiesChange: action.payload\r\n            }\r\n\r\n        case \"STORE_USER_INTEREST\":\r\n            return {\r\n                ...state,\r\n                following: action.payload\r\n            }\r\n        case \"SET_FIRST_SERIE\":\r\n            return {\r\n                ...state,\r\n                addFirstSerie: action.payload\r\n            }\r\n        case \"SET_SIMULATION_QUOTES\":\r\n            return {\r\n                ...state,\r\n                simulation: {\r\n                    ...state.simulation,\r\n                    quotes: action.payload\r\n                }\r\n            }\r\n        case \"REINITILIZE\":\r\n            return {\r\n                ...state,\r\n                setPruebaReady: false,\r\n                generatedSeries: {\r\n                    data: \"\",\r\n                    ready: false\r\n                },\r\n                areHistoricPricesReady: false,\r\n                portfolioSeriesReady: false,\r\n                userActivity: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(companyReducer, initialState)\r\n    return (\r\n        <Context.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport const useDataLayer = () => useContext(Context)","export const getUnitaryCostMean =(posesions, amount, unitaryCost)=>\r\n    (posesions.unitaryCost * posesions.amount) /\r\n    (posesions.amount + amount)\r\n    +\r\n    (unitaryCost * amount) /\r\n    (posesions.amount + amount)","import React, { createContext, useContext, useState, } from 'react'\r\nconst Context = createContext()\r\n\r\nconst UiReducer = (state, action) => {\r\n    switch (action) {\r\n        case \"CLOSE_SIDEBAR\":\r\n            return {\r\n                ...state,\r\n                sidebarOpen: false\r\n            }\r\n        case \"OPEN_SIDEBAR\":\r\n            return {\r\n                ...state,\r\n                sidebarOpen: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const UIProvider = ({ children }) => {\r\n\r\n    const [sidebarOpen, setSidebarOpen] = useState(false)\r\n    const [showOverlay, setShowOverlay] = useState(false)\r\n    const [tickerMove, setTickerMove] = useState(true)\r\n    const [mountApproval, setMountApproval] = useState(true)\r\n    const [drawerWidth, setDrawerWidth] = useState(240)\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            sidebarOpen,\r\n            setSidebarOpen,\r\n            showOverlay,\r\n            setShowOverlay,\r\n            tickerMove,\r\n            setTickerMove,\r\n            mountApproval,\r\n            setMountApproval,\r\n            drawerWidth,\r\n            setDrawerWidth,\r\n            imageUrl,\r\n            setImageUrl\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport const useUILayer = () => useContext(Context)\r\n// useReducer(UiReducer, {sidebarOpen: false}","import React, { useEffect, useState } from 'react'\r\n\r\nexport const useViewport = () => {\r\n    const [viewport, setViewport] = useState(window.innerWidth)\r\n    const updateViewport = () => {\r\n        setViewport(window.innerWidth)\r\n    }\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"resize\", updateViewport)\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateViewport)\r\n        }\r\n    }, [])\r\n    return { viewport }\r\n}\r\n","export const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  \r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n  });\r\n\r\n\r\n export const rounder =(num)=> Math.round((num + Number.EPSILON) * 100) / 100","import React, { useReducer, useContext } from 'react'\r\nimport Cookie from \"js-cookie\"\r\nconst context = React.createContext()\r\nconst getToken = () => {\r\n    const token = Cookie.getJSON(\"token\")\r\n    if (!token || token === \"undefined\") return \"\"\r\n    console.log(token, \"tokeeun\")\r\n    // return token\r\n    try {\r\n        const readyToken = JSON.parse(token)\r\n        return readyToken\r\n    }\r\n    catch (err) {\r\n        return token\r\n    }\r\n\r\n}\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    token: getToken(),\r\n    info: { email: null },\r\n    ready: false,\r\n    config: { staticImage: true }\r\n}\r\nconst userReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                info: action.payload,\r\n                ready: true\r\n            }\r\n        case \"SET_USER_NULL\":\r\n            localStorage.removeItem(\"token\")\r\n            console.log(\"user set nullllll\")\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                info: { email: null },\r\n                ready: true,\r\n                token: null\r\n            }\r\n        case \"SET_TOKEN\":\r\n            console.log(action.payload, \"setting user nulltokkenset\")\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            }\r\n        case \"ADD_USER_INFO\":\r\n\r\n            return {\r\n                ...state,\r\n                info: {\r\n                    ...state.info,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case \"SET_USER_AND_TOKEN\":\r\n            const { email, token } = action.payload\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                info: { email },\r\n                token: token\r\n            }\r\n        case \"UPDATE_IMAGE\":\r\n            console.log(\"mmaaariccon\")\r\n            console.log(action.payload, \"qe cojoeee\")\r\n            console.log(URL.createObjectURL(action.payload), \"qe cojoeee2\")\r\n            return {\r\n                ...state,\r\n                info: {\r\n                    ...state.info,\r\n                    imageUrl: URL.createObjectURL(action.payload)\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const UserContext = ({ children }) => {\r\n    const [userState, userDispatch] = useReducer(userReducer, initialState)\r\n    return (\r\n        <context.Provider value={{ userState, userDispatch }}>\r\n            {children}\r\n        </context.Provider>\r\n    )\r\n}\r\n\r\nexport const useUserLayer = () => useContext(context)\r\n//for class components\r\nexport const UserContextt = context\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nexport const CurrentPriceRP = ({ticker, children}) => {\r\n    const [{ currentPrice, loading, error }, setCurrentPrice] = useState({\r\n        currentPrice: \"\",\r\n        loading: false,\r\n        error: \"\"\r\n    })\r\n    useEffect(() => {\r\n\r\n        const getCurrentPrice = async (ticker) => {\r\n            setCurrentPrice(prev => ({ ...prev, loading: true }))\r\n            try {\r\n                const request = await fetch(`https://finnhub.io/api/v1/quote?symbol=${ticker}&token=btm6dp748v6ud360stcg`)\r\n                const data = await request.json()\r\n                setCurrentPrice(prev => ({ ...prev, loading: false, currentPrice: data.c }))\r\n            }\r\n            catch (err) {\r\n                setCurrentPrice(prev => ({ ...prev, loading: false, error: err.message }))\r\n            }\r\n        }\r\n        if (ticker) {\r\n\r\n            getCurrentPrice(ticker)\r\n        }\r\n    }, [ticker])\r\n    return (\r\n        <>\r\n            {children({currentPrice, loading, error})}\r\n        </>\r\n    )\r\n}\r\n","import { CircularProgress, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        animationDuration: \"550ms\",\r\n\r\n    },\r\n    circle: {\r\n        strokeLinecap: \"round\",\r\n\r\n    }\r\n})\r\n\r\nconst defaultStyles = {\r\n    opacity: 0,\r\n    transition: \"all 0.1s ease\"\r\n}\r\nconst transitionStyles = {\r\n    entering: { opacity: 1 },\r\n    entered: { opacity: 1 },\r\n    exiting: { opacity: 0 },\r\n    exited: { opacity: 0 },\r\n}\r\n\r\nexport const CustomCircularProgress = ({ adaptable = false, animState }) => {\r\n    const styles = useStyles()\r\n\r\n    console.log(\"loooader\")\r\n    if (adaptable) {\r\n        return (\r\n            <div className=\"wrapper-referencef\"\r\n                style={{...defaultStyles, ...transitionStyles[animState]}}\r\n            >\r\n            <div className=\"loader-wrapper\">\r\n                <CircularProgress\r\n                    disableShrink\r\n                    thickness={4}\r\n                    classes={{\r\n                        root: styles.root,\r\n                        circular: styles.circular\r\n                    }}\r\n                />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper-reference\">\r\n            <span className=\"loader-wrapper\">\r\n                <CircularProgress\r\n                    disableShrink\r\n                    thickness={4}\r\n                    classes={{\r\n                        root: styles.root,\r\n                        circular: styles.circular\r\n                    }}\r\n                />\r\n\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","// export const convertHumanToUnix = (date) => {\r\n//     const actualDate = date.split(\"-\")\r\n//     const mongol = parseInt(actualDate[1]) - 1\r\n//     const formatedDate = new Date(\r\n//         actualDate[0],\r\n//         actualDate[1],\r\n//         actualDate[2]\r\n//     );\r\n//     return formatedDate.getTime();\r\n// }\r\nexport const milisencondsInADay = 24 * 60 * 60 * 1000\r\n\r\nexport const convertHumanToUnixInit = (date) => {\r\n    const actualDate = date.split(\"-\")\r\n    const mongol = parseInt(actualDate[1]) - 1\r\n    const formatedDate = new Date(\r\n        actualDate[0],\r\n        mongol.toString(),\r\n        actualDate[2]\r\n    );\r\n    return formatedDate.getTime();\r\n}\r\n\r\nexport const convertUnixToHuman = (unix) => {\r\n    const d = new Date(unix)\r\n    const handleDoubleDigit = (num, isMonth = false) => {\r\n        //solve retard javascript month index starting at 0\r\n        if (isMonth) {\r\n            if (num === 11) {\r\n                return (num+1).toString()\r\n            }  \r\n            num++\r\n        }\r\n        return num.toString().length === 1 ?\r\n            `0${num.toString()}`\r\n            :\r\n            num.toString()\r\n    }\r\n    const monthNum = handleDoubleDigit(d.getMonth(), true)\r\n    const dayNum = handleDoubleDigit(d.getDate())\r\n    \r\n    return d.getFullYear() + '-' + (monthNum) + '-' + dayNum\r\n}\r\n\r\nexport function time_ago(time) {\r\n\r\n    switch (typeof time) {\r\n      case 'number':\r\n        break;\r\n      case 'string':\r\n        time = +new Date(time);\r\n        break;\r\n      case 'object':\r\n        if (time.constructor === Date) time = time.getTime();\r\n        break;\r\n      default:\r\n        time = +new Date();\r\n    }\r\n    var time_formats = [\r\n      [60, 'seconds', 1], // 60\r\n      [120, '1 minute ago', '1 minute from now'], // 60*2\r\n      [3600, 'minutes', 60], // 60*60, 60\r\n      [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n      [86400, 'hours', 3600], // 60*60*24, 60*60\r\n      [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n      [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n      [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n      [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n      [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n      [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n      [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n      [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n      [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n      [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n    ];\r\n    var seconds = (+new Date() - time) / 1000,\r\n      token = 'ago',\r\n      list_choice = 1;\r\n  \r\n    if (seconds == 0) {\r\n      return 'Just now'\r\n    }\r\n    if (seconds < 0) {\r\n      seconds = Math.abs(seconds);\r\n      token = 'from now';\r\n      list_choice = 2;\r\n    }\r\n    var i = 0,\r\n      format;\r\n    while (format = time_formats[i++])\r\n      if (seconds < format[0]) {\r\n        if (typeof format[2] == 'string')\r\n          return format[list_choice];\r\n        else\r\n          return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n      }\r\n    return time;\r\n  }\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { formatter } from '../utils/numFormatter';\r\nimport { Grow } from '@material-ui/core';\r\n\r\nconst GrowTransition = React.forwardRef((props, ref) => (\r\n    <Grow ref={ref} {...props} />\r\n))\r\n\r\nexport const PurchaseDialog = ({\r\n    modalOpen,\r\n    setModalOpen,\r\n    ticker,\r\n    qty,\r\n    orderTotal,\r\n    submitOrder,\r\n    operationType\r\n}) => {\r\n\r\n    const handleClose = () => {\r\n        setModalOpen(false);\r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalOpen}\r\n                onClose={handleClose}\r\n                TransitionComponent={GrowTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        You are going to {operationType} {qty} stocks of {ticker} for {formatter.format(orderTotal)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} style={{background: \"red\"}}\r\n                    variant=\"contained\"\r\n                    >\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={submitOrder} color=\"primary\"\r\n                    variant=\"contained\"\r\n                    autoFocus>\r\n                        Confirm\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, InputBase, List, ListItem, ListItemSecondaryAction, ListItemText, makeStyles, TextField, useTheme } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { CustomCircularProgress } from '../components/components/CustomCircularProgress'\r\nimport { useDataLayer } from '../Context'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { convertUnixToHuman } from '../utils/datesUtils'\r\nimport { formatter } from '../utils/numFormatter'\r\nimport { PurchaseDialog } from \"./PurchaseDialog\"\r\nimport styled from \"styled-components\"\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Link } from 'react-router-dom'\r\nimport { Transition } from 'react-transition-group'\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { useLocation } from 'react-use'\r\n\r\nconst date = convertUnixToHuman(Date.now())\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: \"white !Important\"\r\n    }\r\n})\r\n\r\nconst LoginMessage = styled.div({\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n})\r\n\r\nconst getStockPossesion = (ticker, possesions) => {\r\n    const alreadyOwned = possesions.stocks.find(stock => stock.ticker === ticker)\r\n    return alreadyOwned ? alreadyOwned.amount : 0\r\n}\r\n\r\nexport const StockShop = ({ ticker, currentPrice, loading, error, assetType, fundId = null }) => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const { setPruebaReady } = state\r\n    const theme = useTheme()\r\n\r\n    //const userInfo = useAuth()\r\n\r\n    const { userState } = useUserLayer()\r\n\r\n\r\n    console.log(currentPrice, \"preciooo\")\r\n    const [qty, setQty] = useState(1)\r\n    const [orderTotal, setOrderTotal] = useState(\"\")\r\n    const [modalOpen, setModalOpen] = React.useState(false);\r\n    const [operationType, setOperationType] = React.useState(\"buy\")\r\n    const restartPortfolio = useRef(false)\r\n    const [open, setOpen] = useState(false)\r\n    const [errorModal, setErrorModal] = useState({ open: false, msg: \"\" })\r\n    const location = useLocation()\r\n    const [tipo, setTipo] = useState(\"\")\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        if (currentPrice) {\r\n            setOrderTotal(currentPrice * qty)\r\n        }\r\n    }, [qty, currentPrice])\r\n\r\n    const enableRealtime = () => {\r\n        restartPortfolio.current = true\r\n        //because first day we make real time updates, in normal conditions this is false and portfolioSeries don't get recalculated \r\n        dispatch({ type: \"SET_ARE_HISTORIC_PRICES_READY\", payload: true })\r\n        dispatch({ type: \"SET_FIRST_SERIE\", payload: true })\r\n    }\r\n    const submitOrder = () => {\r\n        //this is to close the first modal\r\n        setOpen(false)\r\n        setModalOpen(false)\r\n        if (userState.info.email) {\r\n            let isFirstOperation = state.userActivity.length > 0 ? false : true\r\n            if (isFirstOperation) {\r\n                enableRealtime()\r\n                localStorage.setItem(\"firstDate\", JSON.stringify(Date.now()))\r\n            } else {\r\n                //check if it's still in the first day\r\n                const firstOp = state.userActivity.find(item => item.isFirstOperation)\r\n                if (firstOp.date === date) {\r\n                    enableRealtime()\r\n                }\r\n            }\r\n\r\n            fetch(\"http://localhost:8001/api/v1/operations/addoperation\", {\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    user: userState.info.email,\r\n                    order: {\r\n                        operationType,\r\n                        ticker: ticker,\r\n                        amount: qty,\r\n                        price: currentPrice,\r\n                        date,\r\n                        isFirstOperation,\r\n                        assetType,\r\n                        fundId\r\n                    }\r\n                })\r\n            })\r\n                .then(success => {\r\n                    //means we have stored it in database\r\n                    dispatch({\r\n                        type: \"ADD_PORTFOLIO_CURRENT_POSSESIONS\",\r\n                        payload: {\r\n                            ticker: ticker,\r\n                            amount: qty,\r\n                            operationType,\r\n                            cashNetOperation: orderTotal,\r\n                            date,\r\n                            unitaryPrice: currentPrice,\r\n                            fundId\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: \"ADD_UNIQUE_STOCKS\",\r\n                        payload: {\r\n                            ticker: ticker,\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: \"STOCK_OPERATION\",\r\n                        payload: {\r\n                            date,\r\n                            operationType,\r\n                            amount: qty,\r\n                            ticker: ticker,\r\n                            unitPrice: currentPrice\r\n                        }\r\n                    })\r\n                    dispatch({ type: \"RESTART_GENERATED_SERIES\" })\r\n                    if (restartPortfolio.current) {\r\n                        dispatch({ type: \"RESTART_PORTFOLIO_SERIES\" })\r\n                    }\r\n\r\n                })\r\n                .catch(err => { console.log(err, \"pputa falló\") })\r\n        } else {\r\n            alert(\"please log in\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n\r\n    const handleType = (e, value) => {\r\n        console.log(value, \"tiipu\")\r\n        setOperationType(value)\r\n    }\r\n\r\n    const showErrorModal = (text) => {\r\n        console.log(\"showww wrro modal\")\r\n        setErrorModal({ open: true, text })\r\n    }\r\n\r\n    const checkIsValidOperation = () => {\r\n        console.log(\"ejecuuuuuuua\")\r\n        if (operationType === \"buy\" &&\r\n            orderTotal > state.currentPossesions.userCash) {\r\n\r\n            return showErrorModal(\"Not enough cash to perform operation\");\r\n        }\r\n\r\n        console.log(getStockPossesion(ticker, state.currentPossesions), \"que cantidad teniamos\")\r\n        if (operationType === \"sell\" &&\r\n            getStockPossesion(ticker, state.currentPossesions) < qty) {\r\n\r\n            showErrorModal(\"You are selling more units than what you actually own\")\r\n            return\r\n        }\r\n\r\n        setModalOpen(true)\r\n    }\r\n\r\n    if (!userState.isAuthenticated) {\r\n        return (\r\n            <LoginMessage>\r\n                <p style={{ marginBottom: \"10px\" }}>\r\n                    <Link to={{\r\n                        pathname: \"/login\",\r\n                        state: { background: location }\r\n                    }}>\r\n                        Login</Link> to invest</p>\r\n                <LockIcon />\r\n            </LoginMessage>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"stock-shop\">\r\n            {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>}\r\n            {/* prueba momentanea */}\r\n            { !setPruebaReady ? <div>Loading initial data...</div>\r\n                : currentPrice &&\r\n                <div>\r\n                    <ErrorDialog {...{ errorModal, setErrorModal }} />\r\n                    <Dialogo1 {...{ open, handleClose, currentPrice, orderTotal, setQty, qty, operationType, handleType, checkIsValidOperation }} />\r\n\r\n                    <Button\r\n                        onClick={handleOpen}\r\n                        aria-label=\"buy or sell asset\"\r\n                        variant=\"contained\"\r\n                        style={{ background: theme.palette.success.main, color: \"white\" }}\r\n                        size=\"large\"\r\n                        startIcon={<AttachMoneyIcon />}\r\n                    >\r\n                        Operate\r\n                    </Button>\r\n                    <PurchaseDialog\r\n                        {...{ modalOpen, qty, orderTotal, ticker, submitOrder, operationType, setOpen, setModalOpen }}\r\n                    />\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StyledOp = styled.span(props => ({\r\n    color: props.operationType === \"buy\" ? \"#3f51b5\"\r\n        :\r\n        \"#f50057\"\r\n}))\r\n\r\nconst Dialogo1 = ({ open, handleClose, currentPrice, orderTotal, setQty, qty, operationType, handleType, checkIsValidOperation }) => {\r\n    const theme = useTheme()\r\n    return (\r\n\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n            disableEnforceFocus={true}\r\n            disableAutoFocus\r\n        //2hours lost. this was making chrome browser to magically disable the up arrow of the [input=\"number\"] \r\n        //onMouseMove={e => e.preventDefault()}\r\n\r\n        >\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n\r\n                    How much do you want to\r\n                 <StyledOp {...{ operationType }}> {operationType}</StyledOp>\r\n                 ?\r\n                </DialogTitle>\r\n                <DialogActions>\r\n                    <ToggleButtonGroup aria-label=\"buy or sell\"\r\n                        exclusive\r\n                        onChange={handleType}\r\n                        value={operationType}\r\n                        orientation=\"vertical\"\r\n                    >\r\n                        {\r\n                            [[\"buy\", theme.palette.primary.main, theme.palette.primary.light],\r\n                            [\"sell\", theme.palette.secondary.main, theme.palette.secondary.light]]\r\n                                .map((op) => (\r\n                                    <ToggleButton\r\n                                        key={op[0]}\r\n                                        value={op[0]}\r\n                                        //classes={{ root: classes.root }}\r\n                                        style={op[0] === operationType ? { background: op[1], color: \"white\" } : null}\r\n                                        variant=\"contained\"\r\n\r\n                                    >\r\n                                        {op[0]}\r\n                                    </ToggleButton>\r\n                                ))}\r\n                    </ToggleButtonGroup>\r\n                </DialogActions>\r\n            </div>\r\n\r\n            <DialogContent>\r\n\r\n                <List\r\n                    id=\"alert-dialog-slide-description\">\r\n                    <ListItem>\r\n                        <ListItemText primary=\"price/ud\" />\r\n                        <ListItemSecondaryAction>\r\n                            <p>{formatter.format((currentPrice))}</p>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText>\r\n                            Choose Quantity\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                            <TextField\r\n                                value={qty}\r\n                                onChange={(e) => { setQty(e.target.value) }}\r\n                                inputProps={{ type: 'number', min: 0 }}\r\n                                style={{ width: \"50px\" }}\r\n                            />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem>\r\n                        <ListItemText>\r\n                            Total Value\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                            {formatter.format(orderTotal)}\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    {/* <div\r\n                        className=\"total-price\">\r\n                        \r\n                    </div> */}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Cancel\r\n          </Button>\r\n                <Button onClick={checkIsValidOperation} color=\"primary\"\r\n                    disabled={!operationType}\r\n                    variant=\"outlined\"\r\n\r\n                >\r\n                    Submit\r\n          </Button>\r\n                {!operationType && <span>Please select operation type</span>}\r\n            </DialogActions>\r\n        </Dialog >\r\n    )\r\n}\r\n\r\nconst ErrorDialog = ({ errorModal, setErrorModal }) => {\r\n    return (\r\n        <Dialog\r\n            open={errorModal.open}\r\n            //TransitionComponent={Transition}\r\n            //keepMounted\r\n            onClose={() => { setErrorModal({ open: false }) }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle>Operation is not valid</DialogTitle>\r\n            <DialogContent>\r\n                {errorModal.text}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    onClick={() => { setErrorModal({ open: false }) }}\r\n                    color=\"secondary\">Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import { AppBar, Button, Chip, makeStyles, Tab, Tabs } from '@material-ui/core';\r\nimport React, { forwardRef, useEffect, useState } from 'react'\r\nimport { Transition } from 'react-transition-group';\r\nimport { useMesure } from '../../utils/useMesure';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport { useDataLayer } from '../../Context';\r\nimport { useUILayer } from '../../ContextUI';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { useUserLayer } from '../../UserContext';\r\nimport { CurrentPriceRP } from '../../portfolio/CurrentPriceRP';\r\nimport { StockShop } from '../../portfolio/StockShop2';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarCompany: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    transition: theme.transitions.create([\"top\", \"transform\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    transform: \"translateX(0px)\",\r\n  },\r\n  appBarCompanyShift: {\r\n    transform: `translateX(${drawerWidth}px)`\r\n  },\r\n  tab: {\r\n    marginLeft: \"60px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"0px\"\r\n    }\r\n  },\r\n  white: {\r\n    borderColor: \"white\"\r\n  },\r\n  tabItem: {\r\n    fontSize: \"12px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minWidth: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      minWidth: \"120px\",\r\n      fontSize: \"0.88rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      minWidth: \"160px\"\r\n    },\r\n  },\r\n  scrollButtons: {\r\n    width: \"30px\",\r\n    [theme.breakpoints.up(\"sm\")]:{\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport const CompanyNav = ({ menuCompaniesOpen, topNavigation }) => {\r\n\r\n  const { state: { currentCompany, following }, dispatch } = useDataLayer()\r\n  const { sidebarOpen, setMountApproval } = useUILayer()\r\n  const { userState: { info } } = useUserLayer()\r\n  const { height } = useMesure(topNavigation)\r\n  const history = useHistory()\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  console.log(currentCompany, following, \"muuuuwwww\")\r\n\r\n  const menu2transitions = {\r\n    entering: {\r\n      top: `${height}px`,\r\n    },\r\n    entered: {\r\n      top: `${height}px`,\r\n    },\r\n    exiting: {\r\n      top: \"0px\",\r\n    },\r\n    exited: {\r\n      top: \"0px\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, val) => {\r\n    setTabValue(val)\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const navigate = (url) => {\r\n    history.push(`${url}/${currentCompany.ticker}`)\r\n  }\r\n\r\n  const handleFollow = () => {\r\n    fetch(`http://localhost:8001/api/v1/interests/interests?email=${info.email}&interest=${currentCompany.ticker}`)\r\n      .then(res => res.json())\r\n      .then(interest => {\r\n        if (typeof interest === \"string\") {\r\n          interest = [interest]\r\n        }\r\n        dispatch({ type: \"STORE_USER_INTEREST\", payload: interest })\r\n      })\r\n      .catch(err => { console.log(err.message, \"can't update interest\") })\r\n  }\r\n\r\n  const [isFollowing, setIsFollowing] = useState(false)\r\n  useEffect(() => {\r\n    if (!following.length) {\r\n      setIsFollowing(false)\r\n      return\r\n    }\r\n    //hay que tener en cuenta si esta logeao o no\r\n    const _isFollowing = following.find(tag => tag === currentCompany.ticker)\r\n    setIsFollowing(!!_isFollowing)\r\n\r\n  }, [following])\r\n  return (\r\n    <Transition\r\n      in={menuCompaniesOpen}\r\n      timeout={300}\r\n      // mountOnEnter\r\n      // unmountOnExit\r\n      onExited={() => { setMountApproval(true) }}\r\n    >\r\n      {animationState => (\r\n        <AppBar\r\n          className={clsx(classes.appBarCompany, {\r\n            [classes.appBarCompanyShift]: sidebarOpen\r\n          })}\r\n          style={menu2transitions[animationState]}\r\n        >\r\n          <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\"\r\n            classes={{ root: classes.tab, scrollButtons: classes.scrollButtons }}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"on\"\r\n            //scroll auto not working as expected\r\n            \r\n          >\r\n            <Tab label=\"Overview\" {...a11yProps(0)} onClick={() => { navigate(\"/companies/overview\") }} classes={{ root: classes.tabItem }} />\r\n            <Tab label=\"Financials\" {...a11yProps(1)} onClick={() => { navigate(\"/companies/financials\") }} classes={{ root: classes.tabItem }} />\r\n            <Tab label=\"Key metrics\" {...a11yProps(2)} onClick={() => { navigate(\"/companies/keymetrics\") }} classes={{ root: classes.tabItem }} />\r\n            <Tab label=\"News\" {...a11yProps(2)} onClick={() => { history.push(`/news`) }} classes={{ root: classes.tabItem }} />\r\n          </Tabs>\r\n          {/* <FollowingControl {...{ handleFollow, isFollowing }} /> */}\r\n          {/* <Chip label=\"not owned\" size=\"small\" variant=\"outlined\" style={{ color: \"white\" }}\r\n            classes={{\r\n              outlined: classes.white\r\n            }}\r\n          /> */}\r\n        </AppBar>\r\n      )}\r\n    </Transition>\r\n  )\r\n}\r\n\r\nconst FollowingControl = ({ handleFollow, isFollowing }) => {\r\n  return isFollowing ?\r\n    <Button\r\n      startIcon={<LibraryAddCheckIcon />}\r\n      onClick={handleFollow}\r\n    >\r\n      Following\r\n    </Button>\r\n    :\r\n    <Button\r\n      startIcon={<BookmarksIcon />}\r\n      onClick={handleFollow}\r\n    >Follow</Button>\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useViewport } from './useViewport'\r\n\r\nexport const useMesure = (ref) => {\r\n    //we also make sure we respnond ref dimension change due to viewport changes\r\n    const {viewport} = useViewport()\r\n\r\n    const [{ height, width }, setDimensions] = useState({\r\n        height: 60,\r\n        width: 0\r\n    })\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            setDimensions({\r\n                height: ref.current.offsetHeight,\r\n                width: ref.current.offsetWidth,\r\n            })\r\n        }\r\n    }, [ref, viewport])\r\n\r\n    return (\r\n        { height, width }\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nlet firstLoad = true\r\n\r\nexport const useDebounce = (fieldChanging, debounceTime, cancelTimeout = false) => {\r\n    const [debouncedQuery, setDebouncedQuery] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (firstLoad) {\r\n            firstLoad = false\r\n            return\r\n        }\r\n\r\n        if (cancelTimeout) {\r\n            //hide resultList inmediately on blur\r\n            setDebouncedQuery(fieldChanging)\r\n            return\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n            setDebouncedQuery(fieldChanging)\r\n        }, debounceTime)\r\n\r\n        return () => clearTimeout(timeout)\r\n    }, [fieldChanging])\r\n\r\n    return debouncedQuery\r\n}\r\nexport const useDebounceCancelable = (fieldChanging, debounceTime) => {\r\n    const [debouncedQuery, setDebouncedQuery] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (firstLoad) {\r\n            console.log(firstLoad, \"firstlooo\")\r\n            firstLoad = false\r\n            return\r\n        }\r\n\r\n        if (fieldChanging.cancel) {\r\n            //hide resultList inmediately on blur\r\n            setDebouncedQuery(\"\")\r\n            return\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n            console.log(fieldChanging.value, \"vallllll\")\r\n            setDebouncedQuery(fieldChanging.value)\r\n        }, debounceTime)\r\n\r\n        return () => clearTimeout(timeout)\r\n    }, [fieldChanging])\r\n\r\n    return debouncedQuery\r\n}\r\n","import { CircularProgress, Fade, fade, InputBase, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useDebounce, useDebounceCancelable } from \"../utils/useDebounce\"\r\nimport \"./navSearch.scss\"\r\nimport { CustomCircularProgress } from './components/CustomCircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25)\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        //width: \"100%\",\r\n\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        //transition: theme.transitions.create('width'),\r\n        //width: \"100%\",\r\n        transition: theme.transitions.create([\"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(3),\r\n            //width: (props) => props.isFocused ? `calc(100% + 50px)` : \"80%\",\r\n            width: (props) => props.isFocused ? \"250px\" : \"180px\",\r\n        },\r\n    },\r\n    resultsList: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: \"100%\",\r\n        width: \"100%\",\r\n        padding: \"1rem\",\r\n        listStyle: \"none\",\r\n        textDecoration: \"none\",\r\n\r\n    },\r\n    menuBody: {\r\n        background: \"cornflowerblue\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        //height: \"1px\",\r\n        top: \"100%\",\r\n        overflow: \"hidden\",\r\n        height: props => props.isFocused ? props.menuHeight + \"px\" : \"0px\",\r\n        //transform: props => props.isFocused ? `scaleY(${props.menuHeight})` : \"scaleY(0)\",\r\n        transition: theme.transitions.create([\"height\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        })\r\n    }\r\n}));\r\n\r\nconst handleHeight = (props) => {\r\n\r\n}\r\n\r\n\r\nexport const NavSearch = () => {\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    const [inputVal, setInputVal] = useState({ value: \"\", cancel: false })\r\n    const debouncedField = useDebounceCancelable(inputVal, 300)\r\n    const { data, loading, error } = useSearch(debouncedField)\r\n\r\n    const handleInput = (e, newVal) => {\r\n        e.persist()\r\n        console.log(newVal, \"targggg\")\r\n        console.log(e.target.value, \"targggg\")\r\n        setInputVal(({ cancel: false, value: e.target.value }))\r\n    }\r\n\r\n    const handleBlur = () => {\r\n        setInputVal({ value: \"\", cancel: true })\r\n        setIsFocused(false);\r\n        setMenuHeight(0)\r\n    }\r\n\r\n    const menu = useRef(null)\r\n    const [menuHeight, setMenuHeight] = useState(0)\r\n    useEffect(() => {\r\n        if (menu.current) {\r\n            setMenuHeight(menu.current.getBoundingClientRect().height)\r\n        }\r\n    }, [data, loading])\r\n\r\n    const classes = useStyles({ isFocused, menuHeight });\r\n\r\n    return (\r\n        <div\r\n            className={classes.search}\r\n        >\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                // onChange={(e) => { setInputVal(prev => ({ ...prev, value: e.target.value })) }}\r\n                onChange={handleInput}\r\n                value={inputVal.value}\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput\r\n                }}\r\n                //inputProps={{ \"aria-label\": \"search\" }}\r\n                onFocus={() => {\r\n                    setIsFocused(true);\r\n                }}\r\n                onBlur={handleBlur}\r\n            //style={{ transformOrigin: \"180% 100%\" }}\r\n            />\r\n\r\n            <div\r\n                className={classes.menuBody}\r\n                style={{ transformOrigin: \"top\" }}\r\n            >\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Fade\r\n                        in={!!data || loading}\r\n                        timeout={300}\r\n                        mountOnEnter\r\n                        unmountOnExit\r\n                    >\r\n                        <ul\r\n                            ref={menu}\r\n                            className={classes.resultsList}\r\n\r\n                        > {loading ? <CircularProgress style={{ display: \"block\" }} />\r\n                            : data && data.map(stock => {\r\n                                return <LiItem key={stock.name}\r\n                                    info={stock}\r\n                                />\r\n                            })}\r\n                        </ul>\r\n                    </Fade>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LiItem = ({ info }) => {\r\n\r\n    return (\r\n        <li className=\"list-item-search\">\r\n            {info.name}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst useSearch = (query) => {\r\n    const [{ data, loading, error }, setRequest] = useState({ data: \"\", loading: false, error: null })\r\n    const fetchar = async (query) => {\r\n        console.log(\"quuuuery\")\r\n        if (!query) {\r\n            setRequest({ loading: false, data: \"\" })\r\n            return\r\n        }\r\n\r\n        try {\r\n            setRequest((prev) => ({ ...prev, loading: true }));\r\n            const rawData = await fetch(`http://localhost:8001/api/v1/recurringTasks/search/${query}`);\r\n            const { data } = await rawData.json();\r\n            const dataOnlyStocks = data.filter(item => item.assetType === \"Stock\")\r\n            setRequest((prev) => ({ ...prev, data: dataOnlyStocks, loading: false }));\r\n        } catch (err) {\r\n            setRequest((prev) => ({\r\n                ...prev,\r\n                loading: false,\r\n                error: err.message,\r\n            }));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchar(query)\r\n    }, [query])\r\n\r\n    return { data, loading, error }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport { Chip, Tab, Tabs, useTheme } from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { useDataLayer } from \"../Context\";\r\nimport { useUILayer } from \"../ContextUI\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMesure } from \"../utils/useMesure\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport { formatter } from \"../utils/numFormatter\";\r\nimport { CompanyNav } from \"./subNavigations/CompanyNav\";\r\nimport { useUserLayer } from \"../UserContext\";\r\nimport Cookie from \"js-cookie\"\r\nimport { NavSearch } from \"./navSearch\";\r\nimport { useViewport } from \"../utils/useViewport\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  grow: {\r\n    flex: \"1 1 auto\"\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexGrow: 1,\r\n      display: \"unset\"\r\n    }\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: ({ drawerWidth, viewport }) => viewport < 600 ? \"100%\" : `calc(100% - ${drawerWidth}px)`,\r\n\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  desktopActions: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginLeft: \"auto\",\r\n    }\r\n  }\r\n}));\r\n\r\nexport const Navbar = () => {\r\n  //const { authState, authService } = useOktaAuth();\r\n  const history = useHistory()\r\n  const { state, dispatch } = useDataLayer()\r\n  const { viewport } = useViewport()\r\n  const { sidebarOpen, drawerWidth, setSidebarOpen } = useUILayer()\r\n  const location = useLocation()\r\n  const topNavigation = useRef(null)\r\n  const [menuCompaniesOpen, setMenuCompaniesOpen] = useState(false)\r\n  console.log(history, \"hiiiii\")\r\n  const params = useLocation()\r\n  console.log(params, \"psspsp\")\r\n  useEffect(() => {\r\n    const masterRoute = location.pathname.split(\"/\").filter(item => item !== \"\")\r\n    console.log(masterRoute[0], \"first pathname query\")\r\n    if (masterRoute[0] === \"companies\") {\r\n      setMenuCompaniesOpen(true)\r\n    }\r\n    else {\r\n      console.log(\"ahora es falso\")\r\n      setMenuCompaniesOpen(false)\r\n    }\r\n\r\n  }, [location])\r\n\r\n  console.log(location, \"locationnnnnn\")\r\n\r\n\r\n  const classes = useStyles({ drawerWidth, viewport });\r\n\r\n\r\n\r\n  const { userDispatch, userState: { isAuthenticated } } = useUserLayer()\r\n  const logout = (cb) => {\r\n\r\n    dispatch({ type: \"REINITILIZE\" })\r\n    Cookie.remove(\"token\")\r\n    userDispatch({ type: \"SET_USER_NULL\" })\r\n    cb()\r\n  }\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        data-testid=\"navbar\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: sidebarOpen,\r\n        })}\r\n        ref={topNavigation}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => { setSidebarOpen(true) }}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: sidebarOpen,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap\r\n            className={classes.title}\r\n          >\r\n            {menuCompaniesOpen ? state.currentCompany.name : \"FinnTrack\"}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <NavSearch />\r\n          <div\r\n            className={classes.desktopActions}\r\n          >\r\n            <Button variant=\"contained\" color=\"primary\"\r\n              onClick={() => { history.push(\"/login\", { background: location }) }}\r\n            >login</Button>\r\n            {isAuthenticated && <Button variant=\"contained\" color=\"primary\"\r\n              onClick={() => { logout(() => history.push(\"/login\")) }}\r\n            >Logout</Button>}\r\n            { isAuthenticated && <Typography>\r\n              {formatter.format(state.currentPossesions.userCash)} $\r\n            </Typography>}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CompanyNav {...{ menuCompaniesOpen, topNavigation }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n","import TreeItem from '@material-ui/lab/TreeItem';\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Label from '@material-ui/icons/Label';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.text.primary,\r\n      '&:hover > $content': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      '&:focus > $content, &$selected > $content': {\r\n        backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n        color: 'var(--tree-view-color)',\r\n      },\r\n      '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      padding: props=>props.isTitle? \"0.5rem 0\":0 \r\n    },\r\n    content: {\r\n      color: theme.palette.text.secondary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      '$expanded > &': {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      '& $content': {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: 'inherit',\r\n      color: 'inherit',\r\n    },\r\n    labelRoot: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0.5, 0),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: 'inherit',\r\n      flexGrow: 1,\r\n      marginLeft: theme.spacing(4)\r\n    },\r\n    iconContainer: {\r\n      width: \"9px\"\r\n    }\r\n  }));\r\n\r\n  export const StyledTreeItem =(props)=>{\r\n    const classes = useTreeItemStyles({isTitle: props.isTitle});\r\n    const { labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, ariaLabel=\"\", ...other } = props;\r\n  \r\n    return (\r\n      <TreeItem\r\n      aria-label={ariaLabel}\r\n        label={\r\n          <div className={classes.labelRoot}>\r\n           \r\n            <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n            \r\n            <Typography variant=\"body1\" className={classes.labelText}>\r\n              {labelText}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"inherit\">\r\n              {labelInfo}\r\n            </Typography>\r\n          </div>\r\n        }\r\n        style={{\r\n          '--tree-view-color': color,\r\n          '--tree-view-bg-color': bgColor,\r\n        }}\r\n        classes={{\r\n          root: classes.root,\r\n          content: classes.content,\r\n          expanded: classes.expanded,\r\n          selected: classes.selected,\r\n          group: classes.group,\r\n          label: classes.label,\r\n          iconContainer: classes.iconContainer\r\n        }}\r\n      \r\n        {...other}\r\n      />\r\n    );\r\n  }\r\n  \r\n  StyledTreeItem.propTypes = {\r\n    bgColor: PropTypes.string,\r\n    color: PropTypes.string,\r\n    labelIcon: PropTypes.elementType.isRequired,\r\n    labelInfo: PropTypes.string,\r\n    labelText: PropTypes.string.isRequired,\r\n  };\r\n\r\n","import { InputLabel, MenuItem, Select, FormControl, Button, TextField, makeStyles, IconButton } from '@material-ui/core'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useUserLayer } from '../UserContext'\r\nimport countries from \"../utils/countries.json\"\r\nimport { CgGenderFemale, CgGenderMale } from \"react-icons/cg\"\r\nimport styled from \"styled-components\"\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport \"./imageUploader.scss\"\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\r\n\r\nconst Container = styled.div({\r\n    width: \"600px\",\r\n    margin: \"0 auto\"\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    label: {\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        display: \"block\",\r\n        \"&:hover\": {\r\n\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const ImageUploader = () => {\r\n    const [imageUpload, setImageUpload] = useState(\"\")\r\n    const [response, setResponse] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const { userState: { info }, userDispatch } = useUserLayer()\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    const [provisionalImg, setProvisionalImg] = useState(info.imageUrl ? info.imageUrl : \"\")\r\n\r\n    const handleImageUpload = (e) => {\r\n        setImageUpload(e.target.files[0])\r\n        setProvisionalImg(URL.createObjectURL(e.target.files[0]))\r\n    }\r\n\r\n    const image = provisionalImg || info.imageUrl\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!imageUpload) {\r\n            return\r\n        }\r\n        const imageData = new FormData()\r\n        imageData.append(\"image\", imageUpload)\r\n        imageData.append(\"email\", info.email)\r\n        setLoading(true)\r\n        fetch(\"http://localhost:8001/api/v1/users/upload\", {\r\n            body: imageData,\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.blob())\r\n            .then(image => {\r\n                userDispatch({ type: \"UPDATE_IMAGE\", payload: image })\r\n                setLoading(false)\r\n            })\r\n            .catch(err => { setResponse(JSON.stringify(err)) })\r\n    }\r\n    return (\r\n        <div className=\"contact-details\">\r\n            <form onSubmit={handleSubmit}\r\n            >\r\n\r\n                <label htmlFor=\"upload\"\r\n                    className=\"label-upload\"\r\n                >\r\n                    {image ?\r\n                        <Fragment>\r\n                            <img\r\n                                src={image}\r\n                                style={loaded ? { display: \"inline\" } : { display: \"none\" }}\r\n                                onLoad={() => { setLoaded(true) }}\r\n                            />\r\n                            <SwapVertIcon className=\"swap-icon\" />\r\n                            <div className=\"overlay\" />\r\n                            {!loaded && <Skeleton variant=\"rect\" width={210} height={118} />}\r\n\r\n                        </Fragment>\r\n                        :\r\n                        <img src=\"https://gamemakers.com/wp-content/uploads/2020/06/no-image.jpg\"\r\n\r\n                            style={{ objectFit: \"contain\", height: \"100%\", display: \"block\", marginBottom: \"1rem\" }}\r\n                        />\r\n                    }\r\n\r\n\r\n\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleImageUpload}\r\n                        style={{ display: \"none\" }}\r\n                        id=\"upload\"\r\n                    />\r\n\r\n                </label>\r\n\r\n                <LoadingButton\r\n                    {...{ loading, handleSubmit }}\r\n                >\r\n                    submit</LoadingButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoadingButton = ({ loading, handleSubmit }) => {\r\n\r\n    return (<Button\r\n        onClick={handleSubmit}\r\n        endIcon={loading ? <CircularProgress /> : null}\r\n        startIcon={<PublishIcon />}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n    >\r\n        {loading ? \"submiting..\" : \"submit\"}\r\n    </Button>\r\n    )\r\n}","import { InputLabel, MenuItem, Select, FormControl, Button, TextField, makeStyles } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useUserLayer } from '../UserContext'\r\nimport countries from \"../utils/countries.json\"\r\nimport { CgGenderFemale, CgGenderMale } from \"react-icons/cg\"\r\nimport styled from \"styled-components\"\r\nimport \"./contactDetails.scss\"\r\n\r\nconst Container = styled.div({\r\n    width: \"600px\",\r\n    margin: \"0 auto\"\r\n})\r\nconst cleanDate = (date) => {\r\n    return date.split(\"T\")[0]\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n///props come directly from ajax call\r\nexport const ContactDetails = () => {\r\n    const { userState: { info }, userDispatch } = useUserLayer()\r\n    const [country, setCountry] = useState(info.country ? info.country : \"\")\r\n    const [gender, setGender] = useState(info.gender ? info.gender : \"\")\r\n    const [dateBirth, setDateBirth] = useState(info.nacimiento ? cleanDate(info.nacimiento) : \"\")\r\n    const [{ firstName, lastName }, setNames] =\r\n        useState({\r\n            firstName: info.firstName ? info.firstName : \"\",\r\n            lastName: info.lastName ? info.lastName : \"\"\r\n        })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const body = {\r\n            country, gender, dateBirth, firstName, lastName,\r\n            email: info.email\r\n        }\r\n        fetch(\"http://localhost:8001/api/v1/users/complete\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => { console.log(res); return res })\r\n            .then(res => res.json())\r\n            .then(({ fieldsToUpdate }) => {\r\n                userDispatch({ type: \"ADD_USER_INFO\", payload: fieldsToUpdate })\r\n            })\r\n            .catch(err => { throw new Error(err) })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-details\">\r\n            {/* {generatedUrl && <img src={generatedUrl} />} */}\r\n            <form onSubmit={handleSubmit}\r\n                className=\"form\"\r\n            >\r\n                <Names {...{ firstName, lastName, setNames }} />\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <DateOfBirth {...{ dateBirth, setDateBirth }} />\r\n                    <Gender {...{ gender, setGender }} />\r\n                </div>\r\n                <CountrySelect {...{ country, setCountry }} />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CountrySelect = ({ country, setCountry }) => {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <FormControl\r\n            style={{ width: \"100%\" }}\r\n        >\r\n            <InputLabel id=\"select-country\">Country</InputLabel>\r\n            <Select\r\n                labelId=\"select-country\"\r\n                open={open}\r\n                onClose={() => { setOpen(false) }}\r\n                onOpen={() => { setOpen(true) }}\r\n                value={country}\r\n                onChange={(e) => { setCountry(e.target.value) }}\r\n            >\r\n                <MenuItem value=\"\">\r\n                </MenuItem>\r\n                {countries.map(countryName => (\r\n                    <MenuItem value={countryName}>{countryName}</MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst Gender = ({ gender, setGender }) => {\r\n\r\n    // const GenderContainer = styled.div({\r\n    //     display: \"flex\"\r\n    // })\r\n    return (\r\n        <div className=\"form-group\">\r\n            <Label>gender:</Label>\r\n            <Button\r\n                variant={gender === \"female\" ? \"contained\" : \"outlined\"}\r\n                color=\"secondary\"\r\n                onClick={() => { setGender(\"female\") }}\r\n            >\r\n                <CgGenderFemale style={{ fontSize: \"20px\" }} />\r\n            </Button>\r\n            <Button\r\n                variant={gender === \"male\" ? \"contained\" : \"outlined\"}\r\n                color=\"primary\"\r\n                onClick={() => { setGender(\"male\") }}\r\n            ><CgGenderMale style={{ fontSize: \"20px\" }} />\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DateOfBirth = ({ setDateBirth, dateBirth }) => {\r\n    const [focused, setFocused] = useState(false)\r\n    return (\r\n        <div className=\"form-group\">\r\n            <Label {...{ focused }}>Birthdate</Label>\r\n            <TextField\r\n                type=\"date\"\r\n                defaultValue={dateBirth}\r\n                onChange={(e) => { setDateBirth(e.target.value) }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onFocus={() => { setFocused(true) }}\r\n                onBlur={() => { setFocused(false) }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Label = styled.label(props => ({\r\n    display: \"block\",\r\n    color: props.focused ? \"#3f51b5\" : \"unset\",\r\n}))\r\nconst FormGroup = styled.div({\r\n\r\n})\r\nconst Names = ({ firstName, lastName, setNames }) => {\r\n\r\n    const [focusedField, setFocusedField] = useState(\"\")\r\n\r\n    const handleFocus = (e) => {\r\n        setFocusedField(e.target.name)\r\n    }\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setNames(prev => ({ ...prev, [name]: value }))\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"form-group\"\r\n            >\r\n                <Label htmlFor=\"firstName\"\r\n                    focused={\"firstName\" === focusedField}\r\n                >First name</Label>\r\n                <TextField\r\n                    id=\"firstName\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    onFocus={handleFocus}\r\n                    onChange={handleChange}\r\n                    size=\"small\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\"\r\n            >\r\n                <Label htmlFor=\"lastName\"\r\n                    focused={\"lastName\" === focusedField}\r\n                >Last name</Label>\r\n                <TextField\r\n                    id=\"lastName\"\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    name=\"lastName\"\r\n                    variant=\"outlined\"\r\n                    onFocus={handleFocus}\r\n                    onChange={handleChange}\r\n                    size=\"small\"\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { ContactDetails } from './ContactDetails'\r\nimport { ImageUploader } from './ImageUploader'\r\n\r\n//the user has to signin to access this route\r\nexport const UpdateInfoView = () => {\r\n    \r\n    const userInfo = useFetchUser(\"populate\")\r\n    //const image = useFetchUser(\"image\") \r\n\r\n    return (\r\n        <div>\r\n\r\n             <ImageUploader />\r\n           <ContactDetails/> \r\n           \r\n            {/* <StatusHandler\r\n                loading={userInfo.loading}\r\n                error={userInfo.error}\r\n                data={userInfo.data}\r\n            >\r\n                {(userInfo) => {\r\n                    return <ContactDetails {...{ userInfo }} />\r\n                }}\r\n            </StatusHandler> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StatusHandler = ({ loading, error, data, children }) => {\r\n\r\n    if (loading) {\r\n        return <p>fetching user data...</p>\r\n    }\r\n    if (error) {\r\n        return <p>{error}</p>\r\n    }\r\n    if (data) {\r\n        return <>{children(data)}</>\r\n    }\r\n    else {\r\n        return <h3>WATAFAK</h3>\r\n    }\r\n}\r\n\r\nexport const useFetchUser = (query) => {\r\n    const { userState } = useUserLayer()\r\n    const [{ data, loading, error }, setRequest] = useState({ data: \"\", loading: true, error: null })\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8001/api/v1/users/${query}`, {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email: userState.info.email }),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => query === \"image\" ? res.blob() : res.json())\r\n            .then(res => { setRequest(prev => ({ ...prev, loading: false, data: res })) })\r\n            .catch(err => { setRequest(prev => ({ ...prev, loading: false, error: err.message })) })\r\n    }, [])\r\n\r\n    return { data, loading, error }\r\n}\r\n\r\n\r\nexport const AuthMiddleware = ({ children }) => {\r\n    const { userState } = useUserLayer()\r\n\r\n    if (!userState.isAuthenticated) {\r\n        return <Redirect to={{ pathname: \"/pruebaLogin\" }} />\r\n    }\r\n    //children wont render useIAuth gives laoding=false \r\n    return <>{children}</>\r\n}\r\n","import { Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, Grow, IconButton } from '@material-ui/core'\r\nimport React, { Fragment, useCallback, useEffect, useState } from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport { ImageUploader } from './ImageUploader'\r\nimport \"./profileSidebar.scss\"\r\nimport { useFetchUser } from './UpdateInfoView'\r\nimport styled from \"styled-components\"\r\nimport { useUILayer } from '../ContextUI'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { ContactDetails } from './ContactDetails'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\n\r\nconst container = document.getElementById(\"portal\")\r\nconst Placeholder = styled.div({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"grey\"\r\n})\r\n\r\n\r\nexport const ProfileSidebar = () => {\r\n    console.log(container, \"conteine\")\r\n    const { userState } = useUserLayer()\r\n    console.log(userState, \"q putopasa\")\r\n    const { info } = userState\r\n    const [open, setOpen] = useState(\"\")\r\n    const handleClose = () => {\r\n        setOpen(\"\")\r\n    }\r\n    const handleLoad = () => {\r\n        let debounceLoad = setTimeout(() => {\r\n            setLoaded(true)\r\n            clearTimeout(debounceLoad)\r\n        }, 500)\r\n    }\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n\r\n    if (!info.imageUrl && !info.username) {\r\n        return <div className=\"profile-sidebar\"></div>\r\n    }\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"profile-sidebar\"\r\n\r\n            >\r\n                <div className=\"section-image\"\r\n                    onClick={() => { setOpen(\"image\") }}\r\n                >\r\n\r\n\r\n                    {info.imageUrl ?\r\n\r\n                        <>\r\n                            {info.imageUrl &&\r\n                                <img src={info.imageUrl}\r\n                                    onLoad={handleLoad}\r\n                                    style={loaded ? { display: \"inline\" } : { display: \"none\" }}\r\n                                />\r\n                            }\r\n\r\n                            {info.imageUrl && !loaded &&\r\n\r\n\r\n                                <Skeleton variant=\"rect\"\r\n                                    height=\"100%\"\r\n                                //  style={{ display: \"inline-block\", minWidth: \"65%\" }}\r\n                                >\r\n                                    <img src={info.imageUrl} />\r\n                                </Skeleton>\r\n\r\n                            }\r\n                        </>\r\n                        :\r\n                        <Fragment>\r\n                            <p>\r\n                                Add photo\r\n                            </p>\r\n                            <IconButton>\r\n                                <AddAPhotoIcon />\r\n                            </IconButton>\r\n                        </Fragment>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"section-text\"\r\n                    onClick={() => { setOpen(\"text\") }}\r\n                >\r\n                    {info ?\r\n\r\n                        <TextSection {...{ info }}\r\n                        />\r\n                        :\r\n                        <Skeleton variant=\"rect\" height=\"100%\" style={{ display: \"inline-block\", minWidth: \"65%\" }}>\r\n                            <TextSection info={{ username: \"benitocam\" }} />\r\n                        </Skeleton>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <DialogUser\r\n                title=\"Update profile Picture\"\r\n                {...{ open, handleClose }} />\r\n            <DialogText {...{ open, handleClose, info }}\r\n                title=\"Update profile information\"\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst skeletonRelleno = { username: \"benitocame\" }\r\nconst TextSection = ({ info }) => {\r\n\r\n    if (!info.firstName) {\r\n\r\n        return (\r\n            <>\r\n                <h3>{info.username}</h3>\r\n                <Button>edit profile</Button>\r\n            </>)\r\n    }\r\n    return (\r\n        <>\r\n            <h3>{info.firstName}</h3>\r\n            {info.lastName && <p>{info.lastName}</p>}\r\n\r\n            <Button>\r\n                edit profile\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\nconst ImageHandler = ({ image, children }) => {\r\n    if (image.loading) {\r\n        return <p>cargando...</p>\r\n    }\r\n    if (image.error) {\r\n        return <p>{image.error}</p>\r\n    }\r\n    if (image.data) {\r\n        return <>{children}</>\r\n    }\r\n    else {\r\n        return <p>que cojones</p>\r\n    }\r\n    return <>\r\n\r\n    </>\r\n}\r\nconst GrowTransition = React.forwardRef((props, ref) => (\r\n    <Grow ref={ref} {...props} />\r\n))\r\n\r\n\r\n\r\nconst DialogUser = ({ handleClose, open, title }) => {\r\n\r\n    return (ReactDOM.createPortal(<Dialog\r\n        open={open === \"image\"}\r\n        onClose={handleClose}\r\n        TransitionComponent={GrowTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n\r\n\r\n        <DialogTitle>\r\n            {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <ImageUploader />\r\n\r\n        </DialogContent>\r\n\r\n\r\n        <DialogActions>\r\n            <Button\r\n                onClick={handleClose}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >Close</Button>\r\n            <Button\r\n                onClick={handleClose}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >Cancel</Button>\r\n        </DialogActions>\r\n    </Dialog>,\r\n        container)\r\n    )\r\n}\r\nconst DialogText = ({ handleClose, open, info, title }) => {\r\n\r\n\r\n    return (ReactDOM.createPortal(<Dialog\r\n        open={open === \"text\"}\r\n        onClose={handleClose}\r\n        TransitionComponent={GrowTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n\r\n\r\n        <DialogTitle\r\n            style={{ background: \"#3f51b5\", color: \"white\", marginBottom: \"10px\" }}\r\n        >\r\n            {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <ContactDetails userInfo={info} />\r\n        </DialogContent>\r\n\r\n\r\n        <DialogActions>\r\n            <Button\r\n                onClick={handleClose}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >Close</Button>\r\n        </DialogActions>\r\n    </Dialog>,\r\n        container)\r\n    )\r\n}\r\n","/* tslint:disable */\r\n\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\r\nimport { StyledTreeItem } from \"./components/treeItem\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Label from '@material-ui/icons/Label';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useUILayer } from \"../ContextUI\";\r\nimport { useDataLayer } from \"../Context\";\r\nimport { useViewport } from \"../utils/useViewport\";\r\nimport { ProfileSidebar } from \"../Auth/ProfileSidebar\";\r\nimport { useLocation } from \"react-use\";\r\nimport { useUserLayer } from \"../UserContext\";\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    // width: ({ drawerWidth }) => drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    position: \"static\",\r\n  },\r\n  drawerOpen: {\r\n    width: ({ drawerWidth }) => drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: \"hidden\"\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 0\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n\r\n      width: ({ info }) => !info.isAuthenticated ? theme.spacing(9) + 1 : \"auto \",\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    height: \"100px\",\r\n    flexShrink: 0,\r\n  },\r\n  listItemText: {\r\n    width: \"100%\",\r\n    overflow: \"hidden\"\r\n    //necesary to make textOverflow work\r\n  },\r\n  textSpan: {\r\n    display: \"block\",\r\n    whiteSpace: \"nowrap\",\r\n    width: \"100%\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\"\r\n  },\r\n  // drawerDashboard: {\r\n  //   width: 300\r\n  // },\r\n}));\r\n\r\n//ad open if not works\r\nexport const Sidebar = () => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const theme = useTheme();\r\n  const { viewport } = useViewport()\r\n  const { sidebarOpen, setSidebarOpen, drawerWidth } = useUILayer()\r\n  const { state } = useDataLayer()\r\n  const { userState: { isAuthenticated, info } } = useUserLayer()\r\n  const classes = useStyles({ viewport, drawerWidth, info });\r\n  const [dashboardMode, setDashboardMode] = useState(false)\r\n  const [expanded, setExpanded] = React.useState([]);\r\n\r\n  const [selected, setSelected] = React.useState(\"\");\r\n\r\n  const handleSelect = (event, nodeIds) => {\r\n    setSelected(nodeIds);\r\n  };\r\n\r\n  const closeSidebar = () => {\r\n    setExpanded([])\r\n    setSidebarOpen(false)\r\n  }\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true)\r\n  }\r\n\r\n  const handleSidebarToggle = (e, nodeId) => {\r\n    setExpanded(nodeId)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if (!location.pathname) return;\r\n\r\n    // const isInDashboard = location.pathname.split(\"/\").find(route => route === \"portfoliof\")\r\n    if (isAuthenticated) {\r\n      setSidebarOpen(true)\r\n      //setDrawerWidth(300)\r\n    }\r\n    // else {\r\n    //   setDrawerWidth(240)\r\n    // }\r\n  }, [isAuthenticated])\r\n\r\n  console.log(location, \"localizacioone\")\r\n\r\n\r\n  return (\r\n    <Drawer\r\n      variant={viewport > 600 ? \"permanent\" : \"temporary\"}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: sidebarOpen,\r\n        [classes.drawerClose]: !sidebarOpen,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: sidebarOpen,\r\n          [classes.drawerClose]: !sidebarOpen,\r\n          // [classes.drawerDashboard]: dashboardMode\r\n        }),\r\n      }}\r\n      //this is for the movile version\r\n      open={sidebarOpen}\r\n      onClose={closeSidebar}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        {!isAuthenticated && <IconButton onClick={closeSidebar}>\r\n          {theme.direction === \"rtl\" ? (\r\n            <ChevronRightIcon />\r\n          ) : (\r\n            <ChevronLeftIcon />\r\n          )}\r\n        </IconButton>}\r\n      </div>\r\n      {isAuthenticated && info.username && <ProfileSidebar />}\r\n      <Divider />\r\n      <TreeView\r\n        style={{ margin: \"1rem 0\" }}\r\n\r\n        // defaultCollapseIcon={<ArrowDropDownIcon />}\r\n        // defaultExpandIcon={<ArrowRightIcon />}\r\n        defaultEndIcon={<div style={{ width: 24 }} />}\r\n        expanded={expanded}\r\n        selected={selected}\r\n        onMouseEnter={!isAuthenticated && openSidebar}\r\n        onMouseLeave={!isAuthenticated && closeSidebar}\r\n        onNodeToggle={handleSidebarToggle}\r\n        onNodeSelect={handleSelect}\r\n      >\r\n        {isAuthenticated &&\r\n          <>\r\n            <StyledTreeItem nodeId=\"20\" labelText=\"portfolio\" labelIcon={AssessmentIcon} isTitle\r\n              ariaLabel=\"portfolio\"\r\n              onLabelClick={() => { history.push(\"/portfolio\") }}\r\n            />\r\n            <StyledTreeItem nodeId=\"21\" labelText=\"Operation History\" labelIcon={HistoryIcon} isTitle\r\n              ariaLabel=\"Operation History\"\r\n              onLabelClick={() => { history.push(\"/operations\") }}\r\n            />\r\n            <Divider />\r\n          </>\r\n        }\r\n        <StyledTreeItem nodeId=\"22\" labelText=\"Home\" labelIcon={SearchIcon} isTitle\r\n          ariaLabel=\"Home\"\r\n          onLabelClick={() => { history.push(\"/\") }}\r\n        />\r\n        <StyledTreeItem nodeId=\"23\" labelText=\"Feed\" labelIcon={SearchIcon} isTitle\r\n          ariaLabel=\"Feed\"\r\n          onLabelClick={() => { history.push(\"/feed\") }}\r\n        />\r\n\r\n        <StyledTreeItem nodeId=\"15\" labelText=\"People\" labelIcon={SearchIcon} isTitle\r\n          ariaLabel=\"People\"\r\n          onLabelClick={() => { history.push(\"/people\") }}\r\n        />\r\n\r\n\r\n        <StyledTreeItem nodeId=\"1\" labelText=\"Indexes\" labelIcon={MailIcon} isTitle\r\n        >\r\n          <StyledTreeItem\r\n            nodeId=\"2\"\r\n            labelText=\"S&P 500\"\r\n            labelIcon={SupervisorAccountIcon}\r\n            labelInfo=\"90\"\r\n            color=\"#1a73e8\"\r\n            bgColor=\"#e8f0fe\"\r\n            onLabelClick={() => { history.push(\"/indexes/sp500\") }}\r\n\r\n          />\r\n          <StyledTreeItem\r\n            nodeId=\"3\"\r\n            labelText=\"NASDAQ\"\r\n            labelIcon={InfoIcon}\r\n            labelInfo=\"2,294\"\r\n            color=\"#e3742f\"\r\n            bgColor=\"#fcefe3\"\r\n            onLabelClick={() => { history.push(\"/indexes/nasdaq\") }}\r\n\r\n          />\r\n          <StyledTreeItem\r\n            nodeId=\"4\"\r\n            labelText=\"Major INDEXES\"\r\n            labelIcon={ForumIcon}\r\n            labelInfo=\"3,566\"\r\n            color=\"#a250f5\"\r\n            bgColor=\"#f3e8fd\"\r\n            onLabelClick={() => { history.push(\"/indexes/general\") }}\r\n          />\r\n        </StyledTreeItem>\r\n\r\n        {/* <StyledTreeItem nodeId=\"7\" labelText=\"Sectors\" labelIcon={DeleteIcon} isTitle /> */}\r\n        <StyledTreeItem nodeId=\"8\" labelText=\"News\" labelIcon={Label} isTitle>\r\n          <StyledTreeItem\r\n            nodeId=\"9\"\r\n            labelText=\"General\"\r\n            labelIcon={SupervisorAccountIcon}\r\n            labelInfo=\"90\"\r\n            color=\"#1a73e8\"\r\n            bgColor=\"#e8f0fe\"\r\n            onLabelClick={() => { history.push(\"/news/general\") }}\r\n          />\r\n          <StyledTreeItem\r\n            nodeId=\"10\"\r\n            labelText=\"Forex\"\r\n            labelIcon={InfoIcon}\r\n            labelInfo=\"2,294\"\r\n            color=\"#e3742f\"\r\n            bgColor=\"#fcefe3\"\r\n            onLabelClick={() => { history.push(\"/news/forex\") }}\r\n          />\r\n          <StyledTreeItem\r\n            nodeId=\"11\"\r\n            labelText=\"Crypto\"\r\n            labelIcon={ForumIcon}\r\n            labelInfo=\"3,566\"\r\n            color=\"#a250f5\"\r\n            bgColor=\"#f3e8fd\"\r\n            onLabelClick={() => { history.push(\"/news/crypto\") }}\r\n          />\r\n          <StyledTreeItem\r\n            nodeId=\"12\"\r\n            labelText=\"Merger\"\r\n            labelIcon={LocalOfferIcon}\r\n            labelInfo=\"733\"\r\n            color=\"#3c8039\"\r\n            bgColor=\"#e6f4ea\"\r\n            onLabelClick={() => { history.push(\"/news/merger\") }}\r\n          />\r\n        </StyledTreeItem>\r\n        <StyledTreeItem nodeId=\"14\" labelText=\"Covid-19\" labelIcon={DeleteIcon}\r\n          isTitle\r\n          onClick={(e) => { history.push(\"/covid19\") }}\r\n        />\r\n      </TreeView>\r\n      <Divider />\r\n      <List\r\n      >\r\n\r\n        {state.visitedCompanies.length > 0 && state.visitedCompanies.map((company, index) => (\r\n          <ListItem button key={company.ticker}\r\n          >\r\n            {/* <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon> */}\r\n            <ListItemIcon>\r\n              <Typography>{company.ticker}</Typography>\r\n            </ListItemIcon>\r\n\r\n            <ListItemText\r\n              primary={company.name}\r\n              classes={{\r\n                root: classes.listItemText,\r\n                primary: classes.textSpan\r\n              }}\r\n            />\r\n          </ListItem>\r\n\r\n        ))}\r\n\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n// Import Highcharts\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useDataLayer } from \"../Context\";\r\n\r\n\r\n//very similar to MiniatureChartIndex\r\n\r\nexport const CustomAreaChart = ({ datos, ticker }) => {\r\n    const {state, dispatch} = useDataLayer()\r\n    const [data, setData] = useState(\"\")\r\n    useEffect(() => {\r\n        if (datos.length > 0) {\r\n            // dispatch({type: \"ADD_READY_PORTFOLIO_COMPANY_HISTORICAL_PRICE\", payload: datos})\r\n            const shortDatos = handleDatasetLength(datos)\r\n            console.log(shortDatos, \"shortdatos\")\r\n            setData(shortDatos)\r\n        }\r\n    }, [datos])\r\n\r\n    console.log(data, \"dataaau\")\r\n\r\n    const handleDatasetLength = (dataset) => {\r\n        const sobras = dataset.length - 365\r\n        console.log(sobras, \"sobras\")\r\n        if (sobras <= 0) {\r\n            return dataset\r\n        }\r\n        return dataset.slice(dataset.length - 365, dataset.length)\r\n    }\r\n\r\n    const chartOptions = {\r\n        chart: {\r\n            margin: [0, 0, 0, 0],\r\n            height: '100%',\r\n            spacing: [0, 0, 0, 0],\r\n            borderWidth: 0,\r\n            crisp: false,\r\n            type: \"areaspline\",\r\n            animation: false\r\n            //width: 50 \r\n        },\r\n        title: {\r\n            //enabled: false,\r\n            text: ticker\r\n        },\r\n        series: [{\r\n            name: ticker,\r\n            //we display just the last year\r\n            data: data,\r\n            //color: 'linear-gradient(to top, #c6ffdd, #fbd786, #f7797d);',\r\n            color: {\r\n                linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },\r\n                stops: [\r\n                    [0, '#FF0080'],\r\n                    [1, '#FFFFFF']\r\n                ]\r\n            }\r\n            \r\n        }],\r\n        xAxis: {\r\n\r\n            crosshair: false, //hover effect of column\r\n            lineWidth: 0, //removes axis line\r\n            gridLineWidth: 0, //removes charts background line\r\n            lineColor: 'transparent',\r\n            minorTickLength: 0, //removes minor axis ticks \r\n            tickLength: 0, //removes  axis ticks \r\n            \r\n            labels: {\r\n                enabled: false\r\n            },\r\n            //this remove little padding between highhcarts container and chart\r\n            minPadding: 0,\r\n            maxPadding: 0\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: ''\r\n            },\r\n            lineWidth: 0,\r\n            gridLineWidth: 0,\r\n            lineColor: 'transparent',\r\n            minorTickLength: 0,\r\n            tickLength: 0,\r\n            labels: {\r\n                enabled: false\r\n            },\r\n            minPadding: 0,\r\n            maxPadding: 0\r\n            // endOnTick: false,\r\n            // startOnTick: false,\r\n            // visible: false\r\n        },\r\n        tooltip: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n\r\n        plotOptions: {\r\n            column: {\r\n                pointPadding: 0.2,\r\n                borderWidth: 0\r\n            },\r\n            series: {\r\n                animation: false,\r\n                marker: {\r\n                    enabled: false,\r\n                    states: {\r\n                        hover: {\r\n                            enabled: false\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    constructorType=\"chart\"\r\n                    options={chartOptions}\r\n                    containerProps={{style:{overflow: \"hidden\"}}}\r\n                />\r\n            }\r\n        </>)\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport { CustomAreaChart } from '../../../charts/CustomAreaChart';\r\n\r\n\r\n\r\nconst responsive = {\r\n  0: { items: 1 },\r\n  568: { items: 2 },\r\n  1024: { items: 5 },\r\n};\r\n\r\n\r\nexport const GainersCarousel = () => {\r\n  const [data, setData] = useState(\"\")\r\n  const allData = useRef(null)\r\n  useEffect(() => {\r\n    const fechar = () => {\r\n      fetch(\"http://localhost:8001/api/v1/recurringTasks/direct_json?field=gainers_losers\")\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          console.log(res, \"respaaa\")\r\n          const readyData =\r\n            JSON.parse(res.alldata).map(item => {\r\n              console.log(item, \"itom\")\r\n              item.prices = item.prices.map(prices => prices.adjClose)\r\n              return item\r\n            })\r\n          console.log(readyData, \"respaaa2\")\r\n          setData(readyData.slice(1, 7))\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n\r\n      // //if there's error,won't show\r\n      //.then(res => { console.log(res, \"alldauta\") })\r\n      //.catch(err => { throw new Error(err) })\r\n    }\r\n    fechar()\r\n  }, [])\r\n\r\n  console.log(data, \"la duuuura\")\r\n  const chartItems = data && data.map(item =>\r\n    <div className=\"spacer\">\r\n      <div className=\"gl-wrapper\">\r\n        <div className=\"info\">\r\n          <h6>{item.companyName}</h6>\r\n          <p>{item.changes}</p>\r\n          <p>{item.price}</p>\r\n        </div>\r\n        <div className=\"chart\">\r\n          <CustomAreaChart ticker={item.ticker} datos={item.prices} />\r\n        </div>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n\r\n  return (\r\n    <>\r\n      {data && <AliceCarousel\r\n      animationDuration={800}\r\n       // mouseTracking\r\n        disableDotsControls\r\n        infinite\r\n        //responsive={responsive}\r\n        items={chartItems}\r\n        // onSlideChanged={() => { }}\r\n        autoWidth\r\n      />}\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDataLayer } from '../Context'\r\n\r\n//esto es para fechar data general, (no por ticker)\r\n//tenemos ue renombrarlo a fetchGeneralData\r\nexport const useFetchWithCors = (url, topic, fromOwnServer = false) => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const [{ data, loading, error }, setRequest] = useState({ data: [], loading: false, error: \"\" })\r\n\r\n    useEffect(() => {\r\n        const fetcharb = async (dir) => {\r\n            // const isInStore = isInLocalStorage(topic)\r\n            const isInStore = isInState(topic)\r\n            console.log(isInLocalStorage(topic), topic, \"esta o no\")\r\n            if (!isInStore) {\r\n                try {\r\n                    setRequest(prev => ({\r\n                        ...prev,\r\n                        loading: true\r\n                    }))\r\n                    console.log(dir, \"fetch start\")\r\n                    const rawdata = await fetch(dir)\r\n                    const data = await rawdata.json()\r\n                    console.log(data, \"fooooooooo\")\r\n                    console.log(dir, \"fetch finished\")\r\n                    setRequest(prev => ({\r\n                        ...prev,\r\n                        loading: false,\r\n                        data: fromOwnServer? data.data : data\r\n                    }))\r\n                    console.log(fromOwnServer, \"sevidor propi\")\r\n                    dispatch({ type: \"STORE_GENERAL_DATA\", payload: { field: topic, value: fromOwnServer? data.data : data } })\r\n                }\r\n                catch (err) {\r\n                    setRequest(prev => ({\r\n                        ...prev,\r\n                        loading: false,\r\n                        error: err.message\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n        if (url) {\r\n            fetcharb(url)\r\n        }\r\n    }, [])\r\n\r\n    const isInState =(field)=>{\r\n        //here field will be inside generalData\r\n        if(state.generalData[field]){\r\n            setRequest(prev=>({\r\n                ...prev, \r\n                loading: false,\r\n                data: state.generalData[field]\r\n            }))\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    const isInLocalStorage = (item) => {\r\n        //check if we have this data already in localStorage\r\n        if (localStorage.getItem(item)) {\r\n            setRequest(prev => ({\r\n                ...prev,\r\n                loading: false,\r\n                data: JSON.parse(localStorage.getItem(item))\r\n            }))\r\n            //we won't make additional request\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    return { data, loading, error }\r\n}\r\n\r\n//posible topics:{\r\n// sectors\r\n// index-overview\r\n// gainers\r\n//}","import { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useFetchWithCors } from '../../../utils/useFetchWithCors'\r\n\r\n\r\n\r\nexport const Sectors = ({classnames}) => {\r\n    const url = \"https://financialmodelingprep.com/api/v3/sectors-performance?apikey=651d720ba0c42b094186aa9906e307b4\"\r\n    const { data, loading, error } = useFetchWithCors(url, \"sectors\")\r\n\r\n    return (\r\n        <div className={classnames}>\r\n            <List>\r\n                {loading && <p>loading...</p>}\r\n                {error && <p>{error}</p>}\r\n                {data.length > 0 && data.map(item =>\r\n                    <ListItem key={item.sector}>\r\n                        <ListItemText>{item.sector}</ListItemText>\r\n                        <ListItemText style={{ textAlign: \"right\" }}>{item.changesPercentage}</ListItemText>\r\n                    </ListItem>)}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Ticker from \"react-ticker\";\r\nimport { useUILayer } from \"../../../ContextUI\";\r\n\r\nconst re = /^-/g\r\n//most active companies\r\nexport const TickerBar2 = () => {\r\n    const [data, setData] = useState(\"\")\r\n    const {tickerMove} = useUILayer()\r\n    useEffect(() => {\r\n        const fechar = () => {\r\n            fetch(\"http://localhost:8001/api/v1/recurringTasks/direct_json?field=topactives\")\r\n                .then(res => res.json())\r\n                .then(res => { setData(JSON.parse(res.alldata)) })\r\n                // //if there's error,won't show\r\n                .catch(err => { console.log(err) })\r\n        }\r\n        fechar()\r\n    }, [])\r\n\r\n    console.log(\"reeerendeeel\")\r\n\r\n    return (\r\n        <div className=\"ticker\">\r\n            {\r\n                data &&\r\n                <Ticker\r\n                move={tickerMove}\r\n                >\r\n                    {({ index }) => (\r\n                        <>{\r\n                            data.map(item => (\r\n                                <span key={item.ticker} style={{ marginRight: \"15px\", whiteSpace: \"nowrap\" }}>{item.ticker} {item.price}\r\n                                    <span\r\n                                        style={re.test(item.changes) ? { color: \"red\" } : { color: \"green\" }}\r\n                                    >{item.changes} {item.changesPercentage}</span>\r\n                                </span>\r\n                            ))\r\n                        }\r\n                        </>\r\n                    )}\r\n                </Ticker>}\r\n        </div >\r\n    )\r\n\r\n}","import { Button, Chip, Divider, List, ListItem, ListItemText, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDataLayer } from \"../Context\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport { useUILayer } from \"../ContextUI\";\r\nimport { CustomCircularProgress } from \"./components/CustomCircularProgress\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\n\r\nexport const Searcher4 = ({ setSelection }) => {\r\n\r\n    const [spinnerReady, setSpinnerReady] = useState(false)\r\n\r\n    const { setShowOverlay, setTickerMove } = useUILayer()\r\n    const [{ data, loading, error }, setRequest] = useState({\r\n        data: [],\r\n        loading: false,\r\n        error: \"\",\r\n    });\r\n\r\n    const fetchar = async (query) => {\r\n        try {\r\n            setRequest((prev) => ({ ...prev, loading: true }));\r\n            const rawData = await fetch(`http://localhost:8001/api/v1/recurringTasks/search/${query}`);\r\n            const { data } = await rawData.json();\r\n            const dataOnlyStocks = data.filter(item => item.assetType === \"Stock\")\r\n            setRequest((prev) => ({ ...prev, data: dataOnlyStocks, loading: false }));\r\n        } catch (err) {\r\n            setRequest((prev) => ({\r\n                ...prev,\r\n                loading: false,\r\n                error: err.message,\r\n            }));\r\n        }\r\n    };\r\n\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [opened, setOpened] = useState(false)\r\n    const [isSelecting, setIsSelecting] = useState(false)\r\n    const [hasExited, setHasExited] = useState(true)\r\n\r\n \r\n    useEffect(() => {\r\n\r\n        if (data.length > 0) {\r\n            setWrapperHeight(listItems.current.offsetHeight)\r\n            setTickerMove(false)\r\n            \r\n        } else {\r\n            if (isSelecting) {\r\n                return\r\n            }\r\n            if (opened) {\r\n                setShowOverlay(false)\r\n                setWrapperHeight(0)\r\n            }\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            setShowOverlay(true)\r\n            setOpened(true)\r\n            fetchar(value)\r\n        }\r\n    }, [value])\r\n\r\n    const listItems = useRef(null)\r\n    const [wrapperHeigh, setWrapperHeight] = useState(0)\r\n    const defaultStyles = {\r\n        opacity: 0,\r\n        transition: \"all 0.25s ease\"\r\n    }\r\n    const transitionStyles = {\r\n        entering: { opacity: 1 },\r\n        entered: { opacity: 1 },\r\n        exiting: { opacity: 0 },\r\n        exited: { opacity: 0 },\r\n    }\r\n    console.log(wrapperHeigh, \"hiiight\")\r\n    const cleanUp = () => {\r\n        console.log(\"bblurrring ejecutao\")\r\n        \r\n        setShowOverlay(false)\r\n        setOpened(false);\r\n        setWrapperHeight(0)\r\n        setTickerMove(true)\r\n        setRequest(prev => ({ ...prev, data: [] }))\r\n    }\r\n\r\n    const getStyles = () => {\r\n        //in initial animation spinner waits for search to be expanded  \r\n        if (loading && data.length === 0) {\r\n            //setSpinnerReady(false)\r\n            return \"150px\"\r\n        }\r\n        return wrapperHeigh > 0 ? wrapperHeigh + 40 + \"px\" : \"50px\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(isSelecting, \"selec\")\r\n    })\r\n\r\n    return (\r\n\r\n        <div\r\n            style={{ height: getStyles() }}\r\n            className={clsx(\"searcher4\", {\r\n                \"open\": opened\r\n            })}\r\n            onTransitionEnd={() => { setSpinnerReady(true) }}\r\n\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    console.log(\"bblurrring\")\r\n                    setSpinnerReady(false)\r\n                    !isSelecting && cleanUp()\r\n                }}\r\n\r\n            />\r\n\r\n\r\n            <Transition\r\n                in={data.length > 0 && !loading}\r\n                timeout={300}\r\n                onEntered={() => { setHasExited(false) }}\r\n                onExited={() => { setHasExited(true) }}\r\n\r\n            >\r\n                {(state) => (\r\n                    <List\r\n                        className=\"lista-search\"\r\n                        style={{ ...defaultStyles, ...transitionStyles[state] }}\r\n                        ref={listItems}\r\n                    >\r\n\r\n                        {data.length > 0 && data.map((item, index) =>\r\n                            <>\r\n                                { index > 0 && <Divider />}\r\n                                <ListItemText\r\n                                    key={item.ticker}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={() => {\r\n                                        console.log(\"estas clickando\")\r\n                                        setShowOverlay(false)\r\n                                        setSelection(item)\r\n                                    }}\r\n                                    onMouseOver={() => { setIsSelecting(true) }}\r\n                                    onMouseOut={() => { setIsSelecting(false) }}\r\n                                >\r\n                                    {item.name}\r\n                                </ListItemText>\r\n                            </>)}\r\n                    </List>\r\n                )}\r\n            </Transition>\r\n\r\n            <Transition\r\n                in={loading && hasExited && spinnerReady}\r\n                mountOnEnter\r\n                unmountOnExit\r\n            >\r\n                {state => (\r\n                    <CustomCircularProgress\r\n                        adaptable={true}\r\n                        animState={state} />\r\n                )}\r\n            </Transition>\r\n\r\n        </div>\r\n    )\r\n};\r\n","//last news, market sentiment, principal indexes\r\n\r\nimport React from 'react'\r\nimport { GainersCarousel } from './elements/GainersCarousel'\r\nimport { Sectors } from './elements/Sectors'\r\nimport { TickerBar2 } from './elements/TickerBar2'\r\nimport { Searcher4 } from \"../../components/Searcher4\"\r\nimport { useUILayer } from '../../ContextUI'\r\nconst titleStyles = {\r\n    marginTop: 0,\r\n    marginBottom: \"10px\"\r\n}\r\n\r\nexport const Principal = ({ setSelection }) => {\r\n    const { mountApproval } = useUILayer()\r\n    // if (!mountApproval) {\r\n    //     return null\r\n    // }\r\n    console.log(\"rerendel\")\r\n    return (\r\n        <>{\r\n            mountApproval &&\r\n            <>\r\n                    <TickerBar2 />\r\n                <div style={{marginBottom: \"200px\"}}>\r\n                <GainersCarousel />\r\n                </div>\r\n                <Searcher4 setSelection={setSelection} />\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-left radius\">\r\n                        <h3 style={titleStyles}>destacated News</h3>\r\n                        {/* <News classnames=\"principal-section\" /> */}\r\n                    </div>\r\n                    <div className=\"p-right-top radius\">\r\n                        <h3 style={titleStyles}>Sector Performance</h3>\r\n                        <Sectors classnames=\"principal-section\" />\r\n                    </div>\r\n                    {/* <div className=\"p-right-bottom\">\r\n                <Indices/>\r\n            </div> */}\r\n                </div>\r\n                    \r\n              \r\n            </>}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDataLayer } from \"../Context\";\r\n\r\n//ticker can refer as a category\r\nexport const useFetch = (url, ticker, field, options) => {\r\n\r\n  const { state, dispatch } = useDataLayer()\r\n\r\n  const [{ datos, loading, error }, setRequest] = useState({\r\n    datos: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(datos, \"daaaatooos\")\r\n    const fetchar = async (query) => {\r\n      console.log(isInState(field), \"ceeeeeeee\")\r\n      if (!isInState(field)) {\r\n        try {\r\n          setRequest((prev) => ({ ...prev, loading: true }));\r\n          let dir;\r\n          if(options.explicitUrl){\r\n            dir = url\r\n          }else{\r\n            query === null ?\r\n            dir = url\r\n            :\r\n            dir = `${url}/${query}`\r\n          }\r\n          const rawData = await fetch(dir);\r\n          const data = await rawData.json();\r\n          dispatch({ type: \"STORE_DATA\", payload: { ticker: ticker, field: field, value: data } })\r\n\r\n        } catch (err) {\r\n          setRequest((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n            error: err.message,\r\n          }));\r\n        }\r\n      }\r\n      else{\r\n        setRequest(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          datos: state[field][ticker]\r\n        }))\r\n      }\r\n    }\r\n    fetchar(ticker);\r\n\r\n  }, [ticker]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"ahora\", state)\r\n    if ( state[field] && state[field][ticker]) {\r\n      setRequest(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        datos: state[field][ticker]\r\n      }))\r\n      if (field !== \"prices\") {\r\n        try {\r\n          localStorage.setItem(field, JSON.stringify(state[field]))\r\n        }\r\n        catch (e) {\r\n          console.log(e, \"eeeee\")\r\n        }\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n\r\n  const isInState = (field) => {\r\n    //check if we have this data already in localStorage\r\n    console.log(field, \"campo\")\r\n    if (state[field]) {\r\n      console.log(field, ticker, \"esta en mayuscula o que\")\r\n      if (state[field][ticker]) {\r\n        //we won't make additional request\r\n        return true\r\n      }\r\n      return false\r\n    }\r\n    else {\r\n\r\n      return false\r\n    }\r\n  }\r\n\r\n  return { datos, loading, error };\r\n};\r\n","import { Chip, ClickAwayListener, FormControl, Input, InputLabel, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport const Multioption = ({ fields, setChosenFields, chosenFields }) => {\r\n    const [selections, setSelections] = useState(chosenFields)\r\n    const classes = useStyles()\r\n    const multiselector = useRef(null)\r\n    const theme = useTheme()\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        const closeMultiselector =(e)=>{\r\n            if(!multiselector.current.contains(e.target)){\r\n                setIsOpen(false)\r\n            }\r\n        }\r\n        window.addEventListener(\"click\", closeMultiselector)\r\n        return ()=>{\r\n            window.removeEventListener(\"click\", closeMultiselector)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        setChosenFields(selections)\r\n    }, [selections])\r\n\r\n    const handleChipDelete =(val)=>{\r\n        setSelections(prev=>prev.filter(item=>item!==val))\r\n    }\r\n\r\n    return (\r\n        \r\n        <FormControl className={classes.formControl}\r\n        ref={multiselector}\r\n        >\r\n            <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\r\n            \r\n            <Select\r\n                labelId=\"demo-mutiple-chip-label\"\r\n                id=\"demo-mutiple-chip\"\r\n                open={isOpen}\r\n                onClick={(e)=>{ !isOpen && setIsOpen(true)}}\r\n                multiple\r\n                value={selections}\r\n                onChange={(e) => { setSelections(e.target.value) }}\r\n                input={<Input id=\"select-multiple-chip\" />}\r\n                renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                        {selected.map((value) => (\r\n                            <Chip\r\n                                key={value}\r\n                                label={value}\r\n                                className={classes.chip}\r\n                                clickable\r\n                                onDelete={()=>{handleChipDelete(value)}}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n            >\r\n                {Object.keys(fields).map((name) => (\r\n                    <MenuItem key={name} value={name} style={getStyles(name, fields, theme)}>\r\n                        {name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n            \r\n   \r\n    )\r\n}\r\n\r\nfunction getStyles(name, fields, theme) {\r\n    return {\r\n        fontWeight:\r\n            Object.keys(fields).indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDataLayer } from '../Context'\r\n\r\nexport const useCompanyGuard = () => {\r\n    const { dispatch } = useDataLayer()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        const {company} = params\r\n        dispatch({ type: \"SET_COMPANY\", payload: { ticker: company } })\r\n    }, [])\r\n\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useFetch } from '../utils/useFetch';\r\nimport { Multioption } from '../components/Multioption';\r\nimport { useCompanyGuard } from '../utils/useCurrentCompany';\r\nimport { useDataLayer } from '../Context';\r\n//those are historical\r\nexport const KeymetricsChart = () => {\r\n    useCompanyGuard()\r\n    const { state } = useDataLayer()\r\n    const { currentCompany: { ticker } } = state\r\n    const url = `https://financialmodelingprep.com/api/v3/key-metrics/${ticker.toUpperCase()}?apikey=651d720ba0c42b094186aa9906e307b4`\r\n\r\n    const [dataset, setDataset] = useState({})\r\n    const hookOptions = {\r\n        explicitUrl: true\r\n    }\r\n\r\n\r\n    const [chosenFields, setChosenFields] = useState(\r\n        [\"tangibleBookValuePerShare\", \"shareholdersEquityPerShare\", \"interestDebtPerShare\"])\r\n\r\n    const { datos, loading, error } = useFetch(url, ticker, \"metricsHistorical\", hookOptions)\r\n    useEffect(() => {\r\n        fetch(\"https://financialmodelingprep.com/api/v3/key-metrics/AMZN?apikey=651d720ba0c42b094186aa9906e307b4\")\r\n            .then(res => res.json())\r\n            .then(resa => { console.log(resa, \"resa\") })\r\n            .catch(err => { console.log(err, \"puto error\") })\r\n    }, [])\r\n\r\n    const datasetBuilder = (data) => {\r\n        let masterObject = {}\r\n        Object.keys(data[0]).forEach(item => {\r\n            masterObject[item] = []\r\n        })\r\n        data.forEach(record => {\r\n            Object.keys(record).forEach(item => {\r\n                masterObject[item] = [...masterObject[item], record[item]]\r\n            })\r\n        })\r\n        console.log(masterObject, \"master\")\r\n        return masterObject\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"momop\", datos, datos.length)\r\n        if (datos.length > 0) {\r\n            console.log(\"momo\")\r\n            let readyData = datasetBuilder(datos)\r\n            setDataset(readyData)\r\n        }\r\n    }, [datos])\r\n\r\n\r\n    console.log(datos, \"mammmmma\")\r\n\r\n    const options = {\r\n        chart: {\r\n            type: \"spline\"\r\n        },\r\n        title: {\r\n            text: 'Solar Employment Growth by Sector, 2010-2016'\r\n        },\r\n\r\n        // subtitle: {\r\n        //     text: 'Source: thesolarfoundation.com'\r\n        // },\r\n\r\n        // yAxis: {\r\n        //     title: {\r\n        //         text: 'Number of Employees'\r\n        //     }\r\n        // },\r\n\r\n        // xAxis: {\r\n        //     accessibility: {\r\n        //         rangeDescription: 'Range: 2014 to 2017'\r\n        //     }\r\n        // },\r\n        // xAxis: [{\r\n        //     labels: {\r\n        //         formatter: function () {\r\n        //             const arr = dataset.date[0].split(\"-\")\r\n        //             const arrint = arr.map(item=>parseFloat(item))\r\n        //             return Highcharts.dateFormat('%Y %M %d', new Date(arrint));\r\n        //         }\r\n        //     }\r\n        // }],\r\n        xAxis: {\r\n            allowDecimals: false\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'center',\r\n            verticalAlign: 'bottom'\r\n        },\r\n        height: 500,\r\n        plotOptions: {\r\n            series: {\r\n                label: {\r\n                    connectorAllowed: false\r\n                },\r\n                pointStart: 2014\r\n            }\r\n        },\r\n        series: Object.keys(dataset).length > 0 && chosenFields.map(field => {\r\n            console.log(dataset, \"dooota\")\r\n            return ({\r\n                name: field,\r\n                data: dataset[field]\r\n            }\r\n            )\r\n        })\r\n        ,\r\n\r\n        responsive: {\r\n            rules: [{\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'vertical',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <p>laoding...</p>}\r\n            {error && <p>{error}</p>}\r\n            {Object.keys(dataset).length > 0 &&\r\n                <div style={{ display: \"flex\", marginTop: \"100px\", height: \"550px\", justifyContent: \"flexEnd\" }}>\r\n                    <HighchartsReact\r\n                        highcharts={Highcharts}\r\n                        options={options}\r\n                        containerProps={{ style: { flex: 1 } }}\r\n                    />\r\n                    <Multioption\r\n                        fields={dataset}\r\n                        setChosenFields={setChosenFields}\r\n                        chosenFields={chosenFields}\r\n                    />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport Highcharts from \"highcharts/highmaps\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport worldMap from \"@highcharts/map-collection/custom/world.geo.json\"\r\nimport { useUILayer } from \"../ContextUI\"\r\nimport { Skeleton } from '@material-ui/lab';\r\nexport const CovidMap = ({ data, mode }) => {\r\n\r\n    console.log(worldMap, \"puta higcharts\")\r\n    const { sidebarOpen } = useUILayer()\r\n    const covidMap = useRef(null)\r\n    useEffect(() => {\r\n        console.log(\"ahoora\")\r\n        if (covidMap.current && Object.keys(covidMap.current).length > 0) {\r\n            setTimeout(() => {\r\n                covidMap.current.reflow()\r\n            }, 600)\r\n        }\r\n    }, [sidebarOpen])\r\n    const mapOptions = {\r\n        chart: {\r\n            // width: 1000,\r\n\r\n\r\n            events: {\r\n                load: function () {\r\n                    covidMap.current = this\r\n                }\r\n            }\r\n        },\r\n        title: {\r\n            text: \"\",\r\n        },\r\n        colorAxis: {\r\n            min: 0,\r\n            // stops: [\r\n            //     [0.4, \"#ffff00\"],\r\n            //     [0.65, \"#bfff00\"],\r\n            //     [1, \"#40ff00\"],\r\n            // ],\r\n\r\n        },\r\n        mapNavigation: {\r\n            enabled: true,\r\n            enableDoubleClickZoomTo: true\r\n        },\r\n        plotOptions: {\r\n            animation: true,\r\n        }\r\n        ,\r\n        series: [\r\n            {\r\n                mapData: worldMap,\r\n                data: data,\r\n                name: mode === \"absolute\" ? \"Total cases\" : \"Cases/100k habs\",\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    format: '{point.properties.postal-code}'\r\n                }\r\n            },\r\n        ],\r\n        // drilldown: {\r\n        //     activeDataLabelStyle: {\r\n        //         color: '#FFFFFF',\r\n        //         textDecoration: 'none',\r\n        //         textOutline: '1px #000000'\r\n        //     },\r\n        //     drillUpButton: {\r\n        //         relativeTo: 'spacingBox',\r\n        //         position: {\r\n        //             x: 0,\r\n        //             y: 60\r\n        //         }\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: \"grid\", height: window.innerHeight, }}>\r\n            {\r\n                data.length > 0 ?\r\n                    <HighchartsReact\r\n                        highcharts={Highcharts}\r\n                        options={mapOptions}\r\n                        constructorType={\"mapChart\"}\r\n                    />\r\n                    :\r\n                    <Skeleton variant=\"rect\"\r\n                    animation=\"wave\"\r\n                        height=\"100%\" width=\"100%\"\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nvar data = [\r\n    [\"ae\", 37],\r\n    [\"af\", 44],\r\n    [\"am\", 20],\r\n    [\"az\", 19],\r\n    [\"bd\", 9],\r\n    [\"bh\", 12],\r\n    [\"bn\", 43],\r\n    [\"bt\", 26],\r\n    [\"cn\", 70],\r\n    [\"cnm\", 33],\r\n    [\"cy\", 48],\r\n    [\"ge\", 27],\r\n    [\"id\", 65],\r\n    [\"il\", 29],\r\n    [\"in\", 65],\r\n    [\"iq\", 36],\r\n    [\"ir\", 70],\r\n    [\"jk\", 40],\r\n    [\"jo\", 31],\r\n    [\"jp\", 100],\r\n    [\"kg\", 52],\r\n    [\"kh\", 25],\r\n    [\"kp\", 45],\r\n    [\"kr\", 70],\r\n    [\"kw\", 35],\r\n    [\"kz\", 28],\r\n    [\"la\", 38],\r\n    [\"lb\", 46],\r\n    [\"lk\", 51],\r\n    [\"mm\", 13],\r\n    [\"mn\", 34],\r\n    [\"my\", 18],\r\n    [\"nc\", 47],\r\n    [\"np\", 50],\r\n    [\"om\", 5],\r\n    [\"ph\", 1],\r\n    [\"pk\", 39],\r\n    [\"qa\", 41],\r\n    [\"ru\", 70],\r\n    [\"sa\", 2],\r\n    [\"sg\", 65],\r\n    [\"sh\", 17],\r\n    [\"sp\", 10],\r\n    [\"sy\", 30],\r\n    [\"th\", 4],\r\n    [\"tj\", 22],\r\n    [\"tl\", 24],\r\n    [\"tm\", 32],\r\n    [\"tr\", 65],\r\n    [\"tw\", 49],\r\n    [\"uz\", 23],\r\n    [\"vn\", 21],\r\n    [\"ye\", 6],\r\n    [\"es\", 90],\r\n];","import { FormControlLabel, makeStyles, Radio, RadioGroup, Slider } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { dragElement } from \"./Draggable\"\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        height: \"100%\"\r\n    },\r\n    slider: {\r\n        margin: \"0 1.5rem\"\r\n    },\r\n    valueLabel: {\r\n        transform: \"scale(1)\",\r\n        top: 0,\r\n        left: \"1.5rem\"\r\n    }\r\n})\r\n\r\nexport const Sliders = ({ setDate, setMode }) => {\r\n\r\n    const [day, setDays] = useState(25)\r\n    const [month, setMonth] = useState(2)\r\n    const [year, setYear] = useState(2020)\r\n    const lastChosenYear = useRef(2020)\r\n    const sliderDay = useRef(null)\r\n    const [value, setValue] = useState(\"relative\")\r\n    \r\n\r\n    const handleDaySlider = (e, newVal) => {\r\n        e.preventDefault()\r\n        setDays(newVal)\r\n    }\r\n    const handleMonthSlider = (e, newVal) => {\r\n        e.stopPropagation()\r\n        setMonth(newVal)\r\n    }\r\n    const handleYearSlider = (e, newVal) => {\r\n        e.stopPropagation()\r\n        setYear(newVal)\r\n    }\r\n    const childnum = useRef(0)\r\n    const recursivadorStyle = (item) => {\r\n        childnum.current++\r\n        console.log(childnum.current)\r\n        try {\r\n            Array.from(item.children).forEach(itam => {\r\n                if (!itam.classList.contains(\"MuiSlider-valueLabel\")) {\r\n                    if (childnum.current === 1) {\r\n                        itam.style.transform = \"rotate(45deg)\"\r\n                    }\r\n                    else if (childnum.current === 2) {\r\n                        itam.style.transform = \"rotate(-45deg)\"\r\n                    }\r\n                }\r\n                recursivadorStyle(itam)\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(\"child without descendants, lets\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (sliderDay.current) {\r\n            Array.from(sliderDay.current.children).forEach(item => {\r\n                if (item.classList.contains(\"MuiSlider-thumb\")) {\r\n                    Array.from(item.children).forEach(item => {\r\n                        recursivadorStyle(item)\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [sliderDay])\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            setMode(value)\r\n        }\r\n    }, [value])\r\n\r\n    const dateBuider = (month, day, year) => {\r\n        let dayc = day.toString().length < 2 ? `0${day.toString()}` : day.toString()\r\n        let monthc = month.toString().length < 2 ? `0${month.toString()}` : month.toString()\r\n\r\n        return `${year}-${monthc}-${dayc}`\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (year === lastChosenYear.current) {\r\n            setDate(dateBuider(month, day, year))\r\n        } else {\r\n            setDays(1)\r\n            setMonth(1)\r\n        }\r\n        lastChosenYear.current = year\r\n    }, [month, day, year])\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        < \r\n        >\r\n            <div className=\"dates\"\r\n            \r\n            >\r\n                <Slider\r\n                    ref={sliderDay}\r\n                    orientation=\"vertical\"\r\n                    //getAriaValueText={valuetext}\r\n                    value={day}\r\n                    min={1}\r\n                    max={marks[month - 1].days}\r\n                    onChange={handleDaySlider}\r\n                    valueLabelDisplay=\"on\"\r\n                    defaultValue={30}\r\n                    aria-labelledby=\"vertical-slider\"\r\n                    marks\r\n                    classes={{ root: classes.slider, valueLabel: classes.valueLabel }}\r\n                />\r\n                <Slider\r\n\r\n                    orientation=\"vertical\"\r\n                    min={1}\r\n                    max={12}\r\n                    value={month}\r\n                    marks={marks}\r\n                    onChange={handleMonthSlider}\r\n                    valueLabelDisplay=\"off\"\r\n                    defaultValue={30}\r\n                    aria-labelledby=\"vertical-slider\"\r\n                    classes={{ root: classes.slider }}\r\n                />\r\n                <Slider\r\n                    style={{ height: \"50%\" }}\r\n                    orientation=\"vertical\"\r\n                    min={2020}\r\n                    max={2021}\r\n                    value={year}\r\n                    marks={marksYear}\r\n                    onChange={handleYearSlider}\r\n                    valueLabelDisplay=\"off\"\r\n                    defaultValue={30}\r\n                    aria-labelledby=\"vertical-slider\"\r\n                    classes={{ root: classes.slider }}\r\n                />\r\n            </div>\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={(e) => { setValue(e.target.value) }} style={{ flexDirection: \"row\" }}>\r\n                <FormControlLabel value=\"absolute\" control={<Radio />} label=\"absolute\" />\r\n                <FormControlLabel value=\"relative\" control={<Radio />} label=\"relative\" />\r\n            </RadioGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nconst marksYear = [\r\n    {\r\n        label: 2020,\r\n        value: 2020\r\n    },\r\n    {\r\n        label: 2021,\r\n        value: 2021\r\n    }\r\n]\r\nconst marks = [\r\n    {\r\n        name: \"January\",\r\n        label: \"Jan\",\r\n        value: 1,\r\n        days: 31,\r\n    },\r\n    {\r\n        name: \"February\",\r\n        label: \"Feb\",\r\n        value: 2,\r\n        days: 28\r\n    },\r\n    {\r\n        name: \"March\",\r\n        label: \"Mar\",\r\n        value: 3,\r\n        days: 31\r\n    },\r\n    {\r\n        name: \"April\",\r\n        label: \"Apr\",\r\n        value: 4,\r\n        days: 30\r\n    },\r\n    {\r\n        name: \"May\",\r\n        label: \"May\",\r\n        value: 5,\r\n        days: 31\r\n    },\r\n    {\r\n        name: \"June\",\r\n        label: \"Jun\",\r\n        value: 6,\r\n        days: 30\r\n    },\r\n    {\r\n        name: \"July\",\r\n        label: \"Jul\",\r\n        value: 7,\r\n        days: 31\r\n    },\r\n    {\r\n        name: \"August\",\r\n        label: \"Aug\",\r\n        value: 8,\r\n        days: 31\r\n    },\r\n    {\r\n        name: \"September\",\r\n        label: \"Sep\",\r\n        value: 9,\r\n        days: 30\r\n    },\r\n    {\r\n        name: \"October\",\r\n        label: \"Oct\",\r\n        value: 10,\r\n        days: 31\r\n    },\r\n    {\r\n        name: \"November\",\r\n        label: \"Nov\",\r\n        value: 11,\r\n        days: 30\r\n    },\r\n    {\r\n        name: \"December\",\r\n        label: \"Dec\",\r\n        value: 12,\r\n        days: 31\r\n    }\r\n]","import { makeStyles, Slider, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Transition } from 'react-transition-group'\r\nimport { CovidMap } from '../../charts/CovidMap'\r\nimport { CustomCircularProgress } from '../../components/components/CustomCircularProgress'\r\nimport countryCode from \"../../utils/countryCodes.json\"\r\nimport { useFetchWithCors } from '../../utils/useFetchWithCors'\r\nimport { dragElement } from './Draggable'\r\nimport { Sliders } from './Sliders'\r\nimport ReactDOM from \"react-dom\"\r\n\r\n\r\nexport const CovidSection2 = () => {\r\n    const [{ datosHuge, loadingHuge, errorHuge }, setRequest] = useState({ datosHuge: [], loadingHuge: false, errorHuge: \"\" })\r\n    const blackList = [\"Burma\", \"Diamond Princess\", \"Eswatini\", \"MS Zaandam\", \"East Timor\", \"West Bank and Gaza\", \"Kosovo\", \"Jersey\"]\r\n\r\n    const [date, setDate] = useState(\"2020-10-15\")\r\n    const [mode, setMode] = useState(\"relative\")\r\n    const populationNF = useRef([])\r\n    const controller = useRef(null)\r\n    const slider = useRef(\"\")\r\n    const absolutePopulationData = useRef(null)\r\n\r\n    const population = useFetchWithCors(\"http://localhost:8001/api/v1/recurringTasks/other/countriesPopulation\", \"population_by_country\");\r\n\r\n    const findPopulation = (country) => {\r\n        let target\r\n        for (let register of population.data) {\r\n            if (register.country.toLowerCase() === country.toLowerCase()) {\r\n                target = register\r\n            }\r\n        }\r\n        if (target) {\r\n            return parseInt(target.population)\r\n        } else {\r\n            populationNF.current = [...populationNF.current, { country, countrypop: target }]\r\n            return 0\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(date, \"feeecha\")\r\n        const fetcher = async () => {\r\n            try {\r\n\r\n                setRequest(prev => ({ ...prev, loadingHuge: true, errorHuge: \"\" }))\r\n                controller.current = new AbortController()\r\n                const rawData = await fetch(`https://api.covid19tracking.narrativa.com/api/${date}`, {\r\n                    \"signal\": controller.current.signal\r\n                })\r\n\r\n                const data = await rawData.json()\r\n                console.log(data, \"datota\")\r\n                let countryArr = []\r\n                Object.keys(data.dates[date].countries).forEach((nombre) => {\r\n                    //console.log(pais, \"pais\")\r\n                    console.log(nombre)\r\n                    if (!blackList.includes(nombre)) {\r\n                        const pais = data.dates[date].countries\r\n                        const population = findPopulation(nombre)\r\n                        //avoid error cause by covid api unmatched countries\r\n                        if (countryCode[nombre] !== undefined) {\r\n                            console.log(countryCode[nombre], nombre, \"que cujuno\")\r\n                            countryArr = [...countryArr, [countryCode[nombre].code.toLowerCase(), pais[nombre].today_confirmed, findPopulation(nombre), nombre]]\r\n                        }\r\n                    }\r\n\r\n                })\r\n                console.log(JSON.parse(JSON.stringify(countryArr)), \"111joderrrr\")\r\n                const result = mode === \"absolute\" ?\r\n                    countryArr.map(item => item.slice(0, 2))\r\n                    :\r\n                    countryArr.map(item => {\r\n                        if (item[2] > 0) {\r\n                            item[1] = Math.round((item[1] / item[2]) * 100000)\r\n                            return item\r\n                        } else {\r\n                            return null\r\n                        }\r\n                    }).filter(item => item !== null).map(item => item.slice(0, 2))\r\n\r\n                console.log(JSON.parse(JSON.stringify(result)), \"joderrrr\")\r\n                console.log(populationNF, \"no encontrado\")\r\n                if (!controller.current.signal.aborted) {\r\n                    setRequest(prev => ({ ...prev, loadingHuge: false, datosHuge: result }))\r\n                }\r\n            } catch (err) {\r\n                if (err.message !== \"The user aborted a request.\") {\r\n                    setRequest(prev => ({ ...prev, loadingHuge: false, errorHuge: `${date} not available` }))\r\n                }\r\n            }\r\n            //console.log(data.Countries)\r\n\r\n        }\r\n        if (loadingHuge) {\r\n            controller.current.abort()\r\n            console.log(\"aborted\")\r\n        }\r\n        if (population.data && population.data.length > 0) {\r\n            //ahora ponemos dentro\r\n            fetcher()\r\n        }\r\n    }, [date, mode, population.data])\r\n\r\n\r\n    console.log(datosHuge, \"data\")\r\n    console.log(population, \"population\")\r\n\r\n    useEffect(() => {\r\n        if (slider.current) {\r\n            console.log(slider.current, \"curranti\")\r\n            dragElement(slider.current)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            style={{ position: \"relative\" }}\r\n        >\r\n\r\n            {/* {loadingHuge && <CustomCircularProgress />} */}\r\n            {/* {errorHuge && <p>{errorHuge}</p>} */}\r\n            <ErrorOverlay error={errorHuge} />\r\n            <CovidMap\r\n                data={datosHuge}\r\n                {...{ mode }}\r\n            />\r\n\r\n            <div className=\"sliders-container\"\r\n                ref={slider}\r\n            >\r\n                <Sliders\r\n                    setDate={setDate}\r\n                    setMode={setMode}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst defaultStyles = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    transition: \"all 0.5s ease\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n}\r\nconst transitionStyles = {\r\n\r\n    entering: { opacity: 1 },\r\n    entered: { opacity: 1 },\r\n    exiting: { opacity: 0 },\r\n    exited: { opacity: 0 },\r\n\r\n}\r\nconst ErrorOverlay = ({ error }) => {\r\n\r\n    return (\r\n\r\n        <Transition\r\n            in={error}\r\n            timeout={500}\r\n            appear={true}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            {state => (\r\n                <div\r\n                    style={{ ...defaultStyles, ...transitionStyles[state] }}\r\n                >\r\n                    <div style={{ opacity: 0.6, width: \"100%\", height: \"100%\", background: \"grey\" }}></div>\r\n                    <div style={{ position: \"absolute\" }}>{error}</div>\r\n                </div>\r\n            )}\r\n\r\n        </Transition>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","export function dragElement(elmnt) {\r\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n  /* otherwise, move the DIV from anywhere inside the DIV:*/\r\n  elmnt.onmousedown = dragMouseDown;\r\n\r\n  //if we are explicitly dragging the slider classname should be .dates\r\nfunction isNotSelectingDate(ev){\r\n  return ev.target.querySelector(\".dates\")\r\n}\r\n  function dragMouseDown(e) {\r\n    console.log(e.target, \"targat\")\r\n    console.log(e, \"targat\")\r\n    //const isSelectingDate = e.target.querySelector(\".dates\")\r\n    if (!isNotSelectingDate(e)) return;\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a function whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  function elementDrag(e) {\r\n    console.log(\"dragging\", elmnt)\r\n    console.log(e, \"eventou\")\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n  }\r\n\r\n  function closeDragElement() {\r\n    /* stop moving when mouse button is released:*/\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n}","import { Divider } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\n\r\nexport const NewsItem = ({ item }) => {\r\n    return (\r\n        <>\r\n            <Divider />\r\n            <div\r\n                className=\"news-item\"\r\n            >\r\n                <div className=\"image-container\">\r\n                    <img\r\n                        src={item.image}\r\n                        alt={item.headline}\r\n                    />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <p className=\"news-subtitle\">{item.category}</p>\r\n                    <h4 className=\"news-title\">{item.headline}</h4>\r\n                    <p\r\n                        className=\"news-summary\"\r\n                    >{item.summary}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const NewsItemOver = ({ item }) => {\r\n    const [loaded, setLoaded] = useState(false)\r\n    return (\r\n        <>\r\n            <Divider />\r\n            <div\r\n                className=\"news-item-over fade-img-wrapper\"\r\n            >\r\n                <div className=\"image-container\">\r\n                    <img\r\n                        src={item.image}\r\n                        alt={item.headline}\r\n                    />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <p className=\"news-subtitle\">{item.category}</p>\r\n                    <h2 className=\"news-title\">{item.headline}</h2>\r\n                    <p\r\n                        className=\"news-summary\"\r\n                    >{item.summary}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const GridComposition = ({ chunk }) => {\r\n    return (\r\n\r\n        <div\r\n            className=\"news-grid-parent\"\r\n        >\r\n\r\n            <NewsItemOver item={chunk[0]} />\r\n            <NewsItemSmall items={chunk.slice(1, 3)} />\r\n        </div>\r\n    )\r\n}\r\nexport const NewsItemSmall = ({ items }) => {\r\n    console.log(items, \"toooo\")\r\n\r\n    return (\r\n        <div\r\n            className=\"news-layout-small fade-img-wrapper\"\r\n        >\r\n            {items.length > 0 && items.map(itam => <NewsItemNoStyled item={itam} />)}\r\n        </div>\r\n    )\r\n}\r\nexport const NewsItemNoStyled = ({ item }) => (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <div\r\n            style={{\r\n                backgroundImage: `url(${item.image})`,\r\n                height: \"50%\",\r\n                backgroundSize: \"cover\",\r\n                flex: 1\r\n            }\r\n            }\r\n        >\r\n        </div>\r\n        <div >\r\n            <h5\r\n                style={{ marginTop: \"0.5rem\" }}\r\n            >{item.summary}</h5>\r\n        </div>\r\n\r\n    </div >\r\n)","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useFetch } from '../../../utils/useFetch'\r\nimport { useFetchWithCors } from '../../../utils/useFetchWithCors'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { GridComposition, NewsItem, NewsItemOver } from '../../../components/NewsItem'\r\nimport { useViewport } from '../../../utils/useViewport'\r\nimport { CompassCalibrationOutlined } from '@material-ui/icons'\r\nimport { useIntersection } from 'react-use';\r\n\r\n\r\nexport const News = ({ principal = false, title, classnames }) => {\r\n    // const {data, loading, error} = useFetchWithCors(\"http://localhost:8001/news\", \"news\", true)\r\n    const { category } = useParams()\r\n    const options = { explicitUrl: true }\r\n    const { datos, loading, error } = useFetch(`https://finnhub.io/api/v1/news?category=${category}&token=btm6dp748v6ud360stcg`, category, \"news\", options)\r\n\r\n    const [datosGrid, setDatosGrid] = useState(\"\")\r\n    const [newsPerPage, setNewsPerPage] = useState(4)\r\n    const debounce = useRef(false)\r\n    const { viewport } = useViewport()\r\n\r\n    const intersectionRef = React.useRef(null);\r\n    const intersection = useIntersection(intersectionRef, {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 1\r\n    });\r\n\r\n    const isLoadingImgs = useRef()\r\n    const arrangeDatos = (data) => {\r\n        let gridArr = []\r\n        let initialNum = 0\r\n        let finalNum = 3\r\n        Array(Math.round(data.length / 3)).fill(0).forEach(() => {\r\n            let chunk = data.slice(initialNum, finalNum)\r\n            gridArr = [...gridArr, chunk]\r\n            initialNum += 3\r\n            finalNum += 3\r\n            console.log(finalNum, \"xii\")\r\n        })\r\n        console.log(gridArr, \"xwww\")\r\n        setDatosGrid(gridArr)\r\n    }\r\n    useEffect(() => {\r\n        if (datos.length > 0) {\r\n            arrangeDatos(datos)\r\n        }\r\n    }, [datos])\r\n\r\n    const [showingSkeletong, setShowingSkeleton] = useState(false)\r\nconsole.log(intersection, \"intersec\")\r\nlet debounceTimer\r\n    useEffect(() => { \r\n        if (intersection && intersection.intersectionRatio < 1.5 && !debounce.current) {\r\n            setNewsPerPage(prev => prev + 1)\r\n            debounce.current = true\r\n            debounceTimer = setTimeout(()=>{\r\n                debounce.current = false\r\n                clearTimeout(debounceTimer)\r\n            }, 500)\r\n        }\r\n\r\n    }, [intersection])\r\n\r\n    console.log(datos.length, \"ojones\")\r\n    return (\r\n        <div className={classnames}>\r\n            {   datos.length > 0 && principal ?\r\n                <>\r\n                    {loading && <p>loading...</p>}\r\n                    {error && <p>{error}</p>}\r\n\r\n\r\n                    <> {viewport < 1000 ?\r\n                        datos.map(item => <NewsItem item={item} />)\r\n                        :\r\n                        (<>\r\n\r\n                            { datosGrid && datosGrid.slice(1, newsPerPage).map((item, index) =>\r\n                                <GridComposition\r\n                                    key={index}\r\n                                    chunk={item}\r\n                                    index={index}\r\n                                />)}\r\n                            {/* { datos && datos.slice(3, datos.length).map(item => <NewsItemOver item={item} />)} */}\r\n                        </>)\r\n                    }\r\n                    </>\r\n\r\n                </>\r\n                :\r\n                <>\r\n                    {datos.length > 0 && datos.map(item => <NewsItem item={item} />)}\r\n                </>\r\n            }\r\n            {datos.length && <div\r\n                ref={intersectionRef}\r\n                style={{ height: \"20px\" }}\r\n            ></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nNews.defaultProps = {\r\n    title: () => null\r\n}","import { Button, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport { useDataLayer } from '../../Context'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst assignStatement = (field) => {\r\n    switch (field) {\r\n        case \"BALANCE_SHEET\":\r\n            return \"balance\"\r\n        case \"INCOME_STATEMENT\":\r\n            return \"income\"\r\n        case \"CASH_FLOW\":\r\n            return \"cashflow\"\r\n        default:\r\n            return \"\"\r\n    }\r\n}\r\n\r\nexport const FinancialOptions = ({ setField, field, setRequest, campo, ticker }) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleFieldChange = (e) => {\r\n        setRequest(prev => ({ ...prev, loading: true, data: \"\" }))\r\n        setField(e.target.value)\r\n    }\r\n\r\n    \r\n    const { state} = useDataLayer()\r\n   \r\n\r\n    const handleGetFieldData = (statement) => {\r\n        const lookUpField = assignStatement(statement)\r\n        console.log(lookUpField, \"lookUpField\")\r\n        campo.current = lookUpField\r\n        if (state.financials[lookUpField][ticker]) {\r\n            setRequest(prev => ({ ...prev, loading: false, data: state.financials[lookUpField][ticker] }))\r\n        } else {\r\n            setRequest(prev => ({ ...prev, loading: true, data: \"\" }))\r\n            fetch(`https://www.alphavantage.co/query?function=${statement}&symbol=${ticker}&apikey=btm6dp748v6ud360stcg`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (Object.keys(res).length > 0) {\r\n                        return setRequest(prev => ({ ...prev, loading: false, data: res }))\r\n                    }\r\n                    throw new Error(\"no data\")\r\n                })\r\n                .catch(err => { setRequest(prev => ({ ...prev, loading: false, error: err.message })) })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetFieldData(field)\r\n    }, [field])\r\n\r\n    return (\r\n        <nav\r\n            className=\"navigation-right\"\r\n        >\r\n            <FormControl >\r\n                <InputLabel id=\"demo-controlled-open-select-label\">Campo</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-controlled-open-select-label\"\r\n                    id=\"demo-controlled-open-select\"\r\n                    open={open}\r\n                    onClose={() => { setOpen(false) }}\r\n                    onOpen={() => { setOpen(true) }}\r\n                    value={field}\r\n                    onChange={handleFieldChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"BALANCE_SHEET\"}>Balance</MenuItem>\r\n                    <MenuItem value={\"INCOME_STATEMENT\"}>Beneficios</MenuItem>\r\n                    <MenuItem value={\"CASH_FLOW\"}>Cash Flow</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n{/* <div\r\n    className=\"grid-financial-menu\"\r\n>\r\n    <div style={{ background: \"#403f4c\" }}>\r\n\r\n    </div>\r\n    <div style={{ background: \"#e84855\" }}>\r\n\r\n    </div>\r\n    <div style={{ background: \"#F9DC5C\" }}>\r\n\r\n    </div>\r\n</div> */}","import { useEffect, useState } from \"react\"\r\nimport { useViewport } from \"./useViewport\"\r\n\r\nexport const useCellWidth = (breakpoints) => {\r\n    const { viewport } = useViewport()\r\n    const { medium, small, large } = breakpoints\r\n\r\n    const [{ cellWidth, breakpoint }, setCellWidth] = useState({ cellWidth: 0, breakpoint: \"small\" })\r\n\r\n    const resizeCell = (viewport) => {\r\n        if (viewport < medium.breakpoint) {\r\n            setCellWidth({ cellWidth: small.cellSize, breakpoint: \"small\" })\r\n            return\r\n        }\r\n        if (viewport < large.breakpoint) {\r\n            setCellWidth({ cellWidth: medium.cellSize, breakpoint: \"medium\" })\r\n            return\r\n        }\r\n        else {\r\n            setCellWidth({ cellWidth: large.cellSize, breakpoint: \"large\" })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        resizeCell(viewport)\r\n    }, [viewport])\r\n\r\n    return { cellWidth, breakpoint }\r\n}","import {\r\n    Collapse,\r\n    IconButton,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { formatter } from \"../../utils/numFormatter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        background: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        // [theme.breakpoints.up(\"sm\")]: {\r\n        //     width: \"700px\"\r\n        // },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"1000px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1250px\"\r\n        }\r\n    },\r\n    tableConatiner: {\r\n\r\n    },\r\n\r\n    iconButton: {\r\n        padding: 0\r\n    },\r\n\r\n    cell: {\r\n        borderBottom: \"none\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            paddingLeft: 0\r\n        },\r\n\r\n    },\r\n    sectionTitleCell: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            paddingLeft: 0\r\n        },\r\n    },\r\n    subtitles: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            maxWidth: \"130px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            maxWidth: \"none\",\r\n            width: \"200px\"\r\n        },\r\n        // maxWidth: \"none\"\r\n    }\r\n}))\r\n\r\n\r\nconst TableCellSmall = withStyles({\r\n    root: {\r\n        transform: \"translateX(1.5rem)\",\r\n        // whiteSpace: \"nowrap\"\r\n    }\r\n})(TableCell)\r\nconst TableCellXSmall = withStyles({\r\n    root: {\r\n        transform: \"translateX(3rem)\",\r\n        // whiteSpace: \"nowrap\"\r\n    }\r\n})(TableCell)\r\n\r\nconst makeShortInt = (item) => formatter.format(parseInt(item) / 1000000).replace(\".00\", \"\")\r\nexport const TableSectionChunk = ({ title, data, lookupKey, open, setOpen }) => {\r\n    const classes = useStyles()\r\n    console.log(data, \"la datona\")\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                style={{ padding: \"0.5rem\", width: \"20px\", textAlign: \"center\" }}\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    onClick={() => { setOpen(prev => !prev) }}\r\n                >\r\n                    {open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell\r\n                classes={{ root: classes.sectionTitleCell }}\r\n                colSpan={2}\r\n            >\r\n                <p\r\n                //style={{width: \"120px\"}}\r\n\r\n                >{title}</p></TableCell>\r\n            {data && data[lookupKey] ? Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                >\r\n                    {makeShortInt(data[lookupKey][date])}</TableCell>)\r\n                :\r\n                Array(5).fill(null).map(_ => <TableCell align=\"right\">-</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\nexport const TableSubtitleChunk = ({ title, data, lookupKey, hackWidth }) => {\r\n    const classes = useStyles()\r\n    console.log(title, data, lookupKey, hackWidth, \"tutututtup\")\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                classes={{ root: classes.cell }}\r\n                style={{ padding: \"0.5rem\", width: \"20px\", textAlign: \"center\" }}\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    <KeyboardArrowUpIcon />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCellSmall\r\n                classes={{ root: classes.cell }}\r\n                colSpan={2}>\r\n                <p\r\n                    className={classes.subtitles}\r\n                >{title}</p>\r\n            </TableCellSmall>\r\n            {data && data[lookupKey] ? Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                    style={{ width: hackWidth + \"px\" }}\r\n                    classes={{ root: classes.cell }}\r\n                >{makeShortInt(data[lookupKey][date])}</TableCell>)\r\n                :\r\n                Array(5).fill(null).map(_ => <TableCell align=\"right\">-</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\nexport const TableSubSubtitleChunk = ({ title, data, lookupKey, hackWidth }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                classes={{ root: classes.cell }}\r\n\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    <KeyboardArrowUpIcon />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCellXSmall\r\n                classes={{ root: classes.cell }}\r\n\r\n                colSpan={2}>\r\n                <p\r\n                    className={classes.subtitles}\r\n                >{title}</p>\r\n            </TableCellXSmall>\r\n            {data && data[lookupKey] && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                    classes={{ root: classes.cell }}\r\n                    style={{ width: hackWidth + \"px\" }}\r\n                >{makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport const Collapsible = ({ children, renderTitleSection }) => {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <TableBody>\r\n            {renderTitleSection(open, setOpen)}\r\n            <TableRow\r\n            //  style={{...defaultStyles, ...transitionStyles[state]}}\r\n            >\r\n                <TableCell colSpan={8} className=\"nested-cell\">\r\n                    <Collapse\r\n                        in={open}\r\n                        mountOnEnter\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                    >\r\n                        <Table >\r\n                            <TableBody>\r\n                                {children}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport const TableSectionAlone = ({ title, data, lookupKey }) => {\r\n    const classes = useStyles()\r\n    console.log(classes, \"kaostia\")\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell>\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    {<KeyboardArrowDownIcon />}\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell\r\n                classes={{ root: classes.sectionTitleCell }}\r\n                colSpan={2}\r\n            >\r\n                <p\r\n                //style={{width: \"120px\"}}\r\n                >{title}</p></TableCell>\r\n            {data && data[lookupKey] && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                >\r\n                    {makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}","import {\r\n    Collapse,\r\n    IconButton,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCellWidth } from \"../../../utils/useCellWidth\";\r\nimport { Collapsible, TableSectionAlone, TableSectionChunk, TableSubSubtitleChunk, TableSubtitleChunk } from \"../Rows\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        background: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"0 auto\",\r\n        width: \"750px\",\r\n\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1000px\"\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            width: \"1250px\"\r\n        }\r\n    }\r\n}))\r\nconst cellWidthBreakpoints = {\r\n    small: {\r\n        cellSize: 110,\r\n    },\r\n    medium: {\r\n        breakpoint: 1280,\r\n        cellSize: 135,\r\n    },\r\n    large: {\r\n        breakpoint: 1900,\r\n        cellSize: 170\r\n    }\r\n}\r\nexport const CashFlow = ({ anualdata, readyData }) => {\r\n\r\n    //lg const cellWidth = 175\r\n    const { cellWidth, breakpoint } = useCellWidth(cellWidthBreakpoints)\r\n    //we need to loop each field, which is an object with the  values of 5 different years\r\n    const classes = useStyles()\r\n    return (\r\n        <TableContainer\r\n        >\r\n            <Table\r\n                classes={{\r\n                    root: classes.root,\r\n                }}\r\n                className={breakpoint === \"small\" && \"financials-table--small\"}\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell colSpan={3} />\r\n                        {anualdata.current &&\r\n                            Object.keys(anualdata.current).map((year) => (\r\n                                <TableCell\r\n                                    align=\"right\"\r\n                                >{year}</TableCell>\r\n                            ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                {/* <TableSectionAlone\r\n                    title=\"Total Common Shares Outstanding\" lookupKey=\"commonStockSharesOutstanding\"\r\n                    data={readyData}\r\n                /> */}\r\n\r\n                <Collapsible fieldName=\"assets\"\r\n                    renderTitleSection={\r\n                        (injectedOpen, setInjectedOpen) => <TableSectionChunk\r\n                            open={injectedOpen}\r\n                            setOpen={setInjectedOpen}\r\n                            title=\"Cash from Operating Activities\"\r\n                            data={readyData}\r\n                            lookupKey=\"operatingCashflow\"\r\n                        />\r\n                    }>\r\n\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"depreciation\" lookupKey=\"depreciation\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Change in Receivables\" lookupKey=\"changeInReceivables\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"change in Account Receivables\" lookupKey=\"changeInAccountReceivables\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"change in Inventory\" lookupKey=\"changeInInventory\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"other Operating Cash Flow\" lookupKey=\"otherOperatingCashflow\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Investments\" lookupKey=\"investments\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"change in Liabilities\" lookupKey=\"changeInLiabilities\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Net Borrowings\" lookupKey=\"netBorrowings\" data={readyData} />\r\n\r\n                </Collapsible>\r\n                <Collapsible fieldName=\"assets\"\r\n                    renderTitleSection={\r\n                        (injectedOpen, setInjectedOpen) => <TableSectionChunk\r\n                            open={injectedOpen}\r\n                            setOpen={setInjectedOpen}\r\n                            title=\"Cash from Investing Activities\"\r\n                            data={readyData}\r\n                            lookupKey=\"cashflowFromInvestment\"\r\n                        />\r\n                    }>\r\n\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Capital Expenditures\" lookupKey=\"capitalExpenditures\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"other Cash Flow from Investing\" lookupKey=\"otherCashflowFromInvestment\" data={readyData} />\r\n\r\n                </Collapsible>\r\n                <Collapsible fieldName=\"assets\"\r\n                    renderTitleSection={\r\n                        (injectedOpen, setInjectedOpen) => <TableSectionChunk\r\n                            open={injectedOpen}\r\n                            setOpen={setInjectedOpen}\r\n                            title=\"Cash from Financing Activities\"\r\n                            data={readyData}\r\n                            lookupKey=\"cashflowFromFinancing\"\r\n                        />\r\n                    }>\r\n\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"other Cash and Short Term Investments\" lookupKey=\"otherCashflowFromFinancing\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"change In exchange Rate\" lookupKey=\"changeInExchangeRate\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"dividend Payout\" lookupKey=\"dividendPayout\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Stock Sale and Purchase\" lookupKey=\"stockSaleAndPurchase\" data={readyData} />\r\n\r\n                </Collapsible>\r\n\r\n\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};","import React from 'react'\r\nimport {\r\n    Collapse,\r\n    IconButton,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Collapsible, TableSectionAlone, TableSectionChunk, TableSubSubtitleChunk, TableSubtitleChunk } from '../Rows'\r\nimport { useCellWidth } from '../../../utils/useCellWidth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"0 auto\",\r\n        width: \"750px\",\r\n\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1000px\"\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            width: \"1250px\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst cellWidthBreakpoints = {\r\n    small: {\r\n        cellSize: 110,\r\n    },\r\n    medium: {\r\n        breakpoint: 1280,\r\n        cellSize: 135,\r\n    },\r\n    large: {\r\n        breakpoint: 1900,\r\n        cellSize: 168\r\n    }\r\n}\r\n\r\nexport const IncomeStatement = ({ anualdata, readyData }) => {\r\n    //lgconst cellWidth = 175\r\n    const { cellWidth, breakpoint } = useCellWidth(cellWidthBreakpoints)\r\n    const classes = useStyles()\r\n    console.log(readyData, \"liisto\")\r\n    return (\r\n        <TableContainer\r\n        >\r\n            <Table\r\n                classes={{\r\n                    root: classes.root,\r\n                }}\r\n                className={breakpoint === \"small\" && \"financials-table--small\"}\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell colSpan={3} />\r\n                        {anualdata.current &&\r\n                            Object.keys(anualdata.current).map((year) => (\r\n                                <TableCell\r\n                                    align=\"right\"\r\n                                >{year}</TableCell>\r\n                            ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                {/* {readyData && Object.keys(readyData).map(item=>{\r\n           if(readyData)\r\n       }) } */}\r\n                {/* <TableRow>\r\n                    <TableCell>Total Current Assets</TableCell>\r\n                    {readyData && Object.keys(readyData[\"totalCurrentAssets\"]).map(date => <TableCell>{readyData[\"totalCurrentAssets\"][date]}</TableCell>)}\r\n                </TableRow> */}\r\n                {/* <Collapsible\r\n                    renderTitleSection={\r\n                        (injectedOpen, setInjectedOpen) => <TableSectionChunk\r\n                            open={injectedOpen}\r\n                            setOpen={setInjectedOpen}\r\n                            title=\"Total Revenue\"\r\n                            data={readyData}\r\n                            lookupKey=\"\"\r\n                        />\r\n                    }\r\n                >\r\n                </Collapsible> */}\r\n                <TableSectionAlone title=\"Total Revenue\" lookupKey=\"totalRevenue\" data={readyData} />\r\n                <TableSectionAlone title=\"Cost Of Revenue\" lookupKey=\"costOfRevenue\" data={readyData} />\r\n                <TableSectionAlone title=\"Gross Profit\" lookupKey=\"grossProfit\" data={readyData} />\r\n                {/* <TableSectionAlone title=\"Total Operating Expense\" lookupKey=\"totalOperatingExpense\" data={readyData} /> */}\r\n                <Collapsible\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Operating Expense\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalOperatingExpense\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubtitleChunk title=\"selling / General / Administrative\" lookupKey=\"sellingGeneralAdministrative\" data={readyData}\r\n                        hackWidth={cellWidth} />\r\n                    <TableSubtitleChunk title=\"research & Development\" lookupKey=\"researchAndDevelopment\" data={readyData}\r\n                        hackWidth={cellWidth} />\r\n                    <TableSubtitleChunk title=\"interest Expense\" lookupKey=\"interestExpense\" data={readyData}\r\n                        hackWidth={cellWidth} />\r\n                    <TableSubtitleChunk title=\"Other Operating Expense\" lookupKey=\"otherOperatingExpense\" data={readyData}\r\n                        hackWidth={cellWidth} />\r\n                </Collapsible>\r\n                <TableSectionAlone title=\"Operating Income\" lookupKey=\"operatingIncome\" data={readyData} />\r\n                <TableSectionAlone title=\"Net Interest Income (Expense)\" lookupKey=\"netInterestIncome\" data={readyData} />\r\n                <TableSectionAlone title=\"Net Income\" lookupKey=\"netIncome\" data={readyData} />\r\n                <TableSectionAlone title=\"Extraordinary items\" lookupKey=\"extraordinaryItems\" data={readyData} />\r\n                <TableSectionAlone title=\"Non Recurring\" lookupKey=\"nonRecurring\" data={readyData} />\r\n                <TableSectionAlone title=\"Ordinary Net Income\" lookupKey=\"netIncomeFromContinuingOperations\" data={readyData} />\r\n                <TableSectionAlone title=\"Income Tax Expenses\" lookupKey=\"incomeTaxExpense\" data={readyData} />\r\n                <TableSectionAlone title=\"Discontinued Operations\" lookupKey=\"discontinuedOperations\" data={readyData} />\r\n                <TableSectionAlone title=\"Tax Provision\" lookupKey=\"taxProvision\" data={readyData} />\r\n                {/* <Collapsible fieldName=\"total assets\"\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Assets\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalAssets\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n\r\n                    <TableSubtitleChunk title=\"Property / Plant / Equipment\" lookupKey=\"propertyPlantEquipment\" data={readyData}\r\n\r\n                    />\r\n                    <TableSubSubtitleChunk title=\"Accumulated Depreciation\" lookupKey=\"accumulatedDepreciation\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Goodwill\" lookupKey=\"goodwill\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Intangibles\" lookupKey=\"intangibleAssets\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Long Term Investments\" lookupKey=\"longTermInvestments\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Other Assets\" lookupKey=\"otherAssets\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Other Non Current Assets\" lookupKey=\"otherNonCurrrentAssets\" data={readyData} />\r\n                </Collapsible>\r\n                <Collapsible fieldName=\"total assets\"\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Current Liabilities\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalCurrentLiabilities\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubtitleChunk title=\"Accounts Payable\" lookupKey=\"accountsPayable\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Current Long Term Debt\" lookupKey=\"currentLongTermDebt\" data={readyData} />\r\n                    <TableSubtitleChunk title=\"Other Current Liabilities\" lookupKey=\"otherCurrentLiabilities\" data={readyData} />\r\n                </Collapsible>\r\n                <Collapsible fieldName=\"total assets\"\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Non Current Liabilities\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalNonCurrentLiabilities\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubtitleChunk title=\"Total Long Term Debt\" lookupKey=\"totalLongTermDebt\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Long Term Debt\" lookupKey=\"longTermDebt\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Other Non Current Liabilities\" lookupKey=\"otherNonCurrentLiabilities\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Long Liabilities\" lookupKey=\"otherLiabilities\" data={readyData} />\r\n                </Collapsible>\r\n                <Collapsible fieldName=\"total assets\"\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Equity\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalShareholderEquity\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubSubtitleChunk title=\"Redeemable Preferred Stock, Total\" lookupKey=\"preferredStockRedeemable\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Preferred Stock\" lookupKey=\"preferredStockTotalEquity\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Common Stock, Total\" lookupKey=\"commonStock\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Additional Paid-in Capital\" lookupKey=\"additionalPaidInCapital\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Retained Earnings (Accumulated Deficit)\" lookupKey=\"retainedEarnings\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Retained Earnings (Accumulated Deficit)\" lookupKey=\"treasuryStock\" data={readyData} />\r\n                    <TableSubSubtitleChunk title=\"Other Equity\" lookupKey=\"otherShareholderEquity\" data={readyData} />\r\n                </Collapsible>\r\n                <TableSectionAlone\r\n                    title=\"Total Liabilities & Shareholders' Equity\" lookupKey=\"liabilitiesAndShareholderEquity\"\r\n                    data={readyData}\r\n                />\r\n                <TableSectionAlone\r\n                    title=\"Total Preferred Shares Outstanding\" lookupKey=\"preferredStockTotalEquity\"\r\n                    data={readyData}\r\n                />\r\n                <TableSectionAlone\r\n                    title=\"Total Common Shares Outstanding\" lookupKey=\"commonStockSharesOutstanding\"\r\n                    data={readyData}\r\n                /> */}\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\n\r\n// Total Revenue\t64698\t59685\t58313\t91819\r\n// Cost of Revenue, Total\t40009\t37005\t35943\t56602\r\n// Gross Profit\t24689\t22680\t22370\t35217\r\n// Total Operating Expenses\t49923\t46594\t45460\t66250\r\n// Selling/General/Admin. Expenses, Total\t4936\t4831\t4952\t5197\r\n// Research & Development\t4978\t4758\t4565\t4451\r\n// Depreciation / Amortization\t-\t-\t-\t-\r\n// Interest Expense (Income) - Net Operating\t-\t-\t-\t-\r\n// Unusual Expense (Income)\t-\t-\t-\t-\r\n// Other Operating Expenses, Total\t-\t-\t-\t-\r\n// Operating Income\t14775\t13091\t12853\t25569\r\n// Interest Income (Expense), Net Non-Operating\t134\t204\t292\t260\r\n// Gain (Loss) on Sale of Assets\t-\t-\t-\t-\r\n// Other, Net\t-8\t-158\t-10\t89\r\n// Net Income Before Taxes\t14901\t13137\t13135\t25918\r\n// Provision for Income Taxes\t2228\t1884\t1886\t3682\r\n// Net Income After Taxes\t12673\t11253\t11249\t22236\r\n// Minority Interest\t-\t-\t-\t-\r\n// Equity In Affiliates\t-\t-\t-\t-\r\n// U.S GAAP Adjustment\t-\t-\t-\t-\r\n// Net Income Before Extraordinary Items\t12673\t11253\t11249\t22236\r\n// Total Extraordinary Items\t-\t-\t-\t-\r\n// Net Income\t12673\t11253\t11249\t22236\r\n// Total Adjustments to Net Income\t-\t-\t-\t-\r\n// Income Available to Common Excluding Extraordinary Items\t12673\t11253\t11249\t22236\r\n// Dilution Adjustment\t-\t-\t-\t-\r\n// Diluted Net Income\t12673\t11253\t11249\t22236\r\n// Diluted Weighted Average Shares\t17256.52\t17419.15\t17618.76\t17818.42\r\n// Diluted EPS Excluding Extraordinary Items\t0.73\t0.65\t0.64\t1.25\r\n// DPS - Common Stock Primary Issue\t0.2\t0.2\t0.19\t0.19\r\n// Diluted Normalized EPS","import {\r\n    Collapse,\r\n    IconButton,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCellWidth } from \"../../../utils/useCellWidth\";\r\nimport { useViewport } from \"../../../utils/useViewport\";\r\nimport * as styles from \"../Rows\";\r\nimport { Collapsible, TableSectionAlone, TableSectionChunk, TableSubSubtitleChunk, TableSubtitleChunk } from \"../Rows\";\r\n\r\nconst useStylos = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        background: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"0 auto\",\r\n        width: \"400px\",\r\n        // [theme.breakpoints.up(\"sm\")]: {\r\n        //     width: \"700px\"\r\n        // },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1000px\"\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            width: \"1250px\"\r\n        }\r\n    },\r\n}))\r\n\r\nconst cellWidthBreakpoints = {\r\n    small: {\r\n        cellSize: 80,\r\n    },\r\n    medium: {\r\n        breakpoint: 1280,\r\n        cellSize: 125,\r\n    },\r\n    large: {\r\n        breakpoint: 1900,\r\n        cellSize: 160\r\n    }\r\n}\r\n\r\nexport const TableUI2 = ({ anualdata, readyData }) => {\r\n\r\n\r\n    const { cellWidth, breakpoint } = useCellWidth(cellWidthBreakpoints)\r\n\r\n\r\n    //const cellWidth = 128\r\n    //we need to loop each field, which is an object with the  values of 5 different years\r\n    const classes = useStylos()\r\n    return (\r\n        <TableContainer\r\n\r\n        >\r\n            <Table\r\n                classes={{\r\n                    root: classes.root,\r\n                }}\r\n                className={breakpoint === \"small\" && \"financials-table--small\"}\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell colSpan={3} />\r\n                        {anualdata.current &&\r\n                            Object.keys(anualdata.current).map((year) => (\r\n                                <TableCell\r\n                                    align=\"right\"\r\n                                >{year}</TableCell>\r\n                            ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                {/* {readyData && Object.keys(readyData).map(item=>{\r\n               if(readyData)\r\n           }) } */}\r\n\r\n                <Collapsible fieldName=\"assets\"\r\n                    renderTitleSection={\r\n                        (injectedOpen, setInjectedOpen) => <TableSectionChunk\r\n                            open={injectedOpen}\r\n                            setOpen={setInjectedOpen}\r\n                            title=\"Total Current Assets\"\r\n                            data={readyData}\r\n                            lookupKey=\"totalCurrentAssets\"\r\n                        />\r\n                    }>\r\n\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Cash and Short Term Investments\" lookupKey=\"cashAndShortTermInvestments\" data={readyData} />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"Cash\" lookupKey=\"cash\" data={readyData} />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"short Term Investments\" lookupKey=\"shortTermInvestments\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"net Receivables\" lookupKey=\"netReceivables\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Total Inventory\" lookupKey=\"inventory\" data={readyData} />\r\n                </Collapsible>\r\n\r\n                <Collapsible fieldName=\"total assets\"\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Assets\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalAssets\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Property / Plant / Equipment\" lookupKey=\"propertyPlantEquipment\" data={readyData}\r\n\r\n                    />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"Accumulated Depreciation\" lookupKey=\"accumulatedDepreciation\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Goodwill\" lookupKey=\"goodwill\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Intangibles\" lookupKey=\"intangibleAssets\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Long Term Investments\" lookupKey=\"longTermInvestments\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Other Assets\" lookupKey=\"otherAssets\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Other Non Current Assets\" lookupKey=\"otherNonCurrrentAssets\" data={readyData} />\r\n                </Collapsible>\r\n                <Collapsible\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Current Liabilities\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalCurrentLiabilities\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Accounts Payable\" lookupKey=\"accountsPayable\" data={readyData} />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"Current Long Term Debt\" lookupKey=\"currentLongTermDebt\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Other Current Liabilities\" lookupKey=\"otherCurrentLiabilities\" data={readyData} />\r\n                </Collapsible>\r\n                <Collapsible\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Non Current Liabilities\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalNonCurrentLiabilities\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Total Long Term Debt\" lookupKey=\"totalLongTermDebt\" data={readyData} />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"Long Term Debt\" lookupKey=\"longTermDebt\" data={readyData} />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"Other Non Current Liabilities\" lookupKey=\"otherNonCurrentLiabilities\" data={readyData} />\r\n                    <TableSubSubtitleChunk hackWidth={cellWidth} title=\"Long Liabilities\" lookupKey=\"otherLiabilities\" data={readyData} />\r\n                </Collapsible>\r\n                <Collapsible\r\n                    renderTitleSection={(injectedOpen, setInjectedOpen) => <TableSectionChunk title=\"Total Equity\"\r\n                        open={injectedOpen}\r\n                        setOpen={setInjectedOpen}\r\n                        lookupKey=\"totalShareholderEquity\"\r\n                        data={readyData}\r\n                    />}\r\n                >\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Redeemable Preferred Stock, Total\" lookupKey=\"preferredStockRedeemable\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Preferred Stock\" lookupKey=\"preferredStockTotalEquity\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Common Stock, Total\" lookupKey=\"commonStock\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Additional Paid-in Capital\" lookupKey=\"additionalPaidInCapital\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Retained Earnings (Accumulated Deficit)\" lookupKey=\"retainedEarnings\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Retained Earnings (Accumulated Deficit)\" lookupKey=\"treasuryStock\" data={readyData} />\r\n                    <TableSubtitleChunk hackWidth={cellWidth} title=\"Other Equity\" lookupKey=\"otherShareholderEquity\" data={readyData} />\r\n                </Collapsible>\r\n                <TableSectionAlone\r\n                    title=\"Total Liabilities & Shareholders' Equity\" lookupKey=\"liabilitiesAndShareholderEquity\"\r\n                    data={readyData}\r\n                />\r\n                <TableSectionAlone\r\n                    title=\"Total Preferred Shares Outstanding\" lookupKey=\"preferredStockTotalEquity\"\r\n                    data={readyData}\r\n                />\r\n                <TableSectionAlone\r\n                    title=\"Total Common Shares Outstanding\" lookupKey=\"commonStockSharesOutstanding\"\r\n                    data={readyData}\r\n                />\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\n\r\n//1r big problem:\r\n//long strings without spaces like Property/plant/equipment breaks alignment","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { CustomCircularProgress } from '../../components/components/CustomCircularProgress'\r\nimport { useDataLayer } from '../../Context'\r\nimport { useCompanyGuard } from '../../utils/useCurrentCompany'\r\nimport { FinancialOptions } from './FinancialOptions'\r\nimport { CashFlow } from './FinancialStatements/CashFlow'\r\nimport { IncomeStatement } from './FinancialStatements/IncomeStatement'\r\nimport { TableUI2 } from './FinancialStatements/TableUI2'\r\n\r\n\r\nexport const Financials = () => {\r\n\r\n    useCompanyGuard()\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const { currentCompany: { ticker } } = state\r\n    const [field, setField] = useState(\"BALANCE_SHEET\")\r\n    const [{ data, loading, error }, setRequest] = useState({ data: \"\", loading: false, error: \"\" })\r\n    //const { company } = useParams()\r\n    const campo = useRef(\"\")\r\n\r\n    useEffect(() => {\r\n        //console.log(campo.current, company, \"elements\")\r\n        if (data && !state.financials[campo.current][ticker]) {\r\n            dispatch({ type: \"SET_FINANCIALS\", payload: { field: campo.current, ticker, value: data } })\r\n        }\r\n    }, [data])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {error && <p>{error}</p>}\r\n            {ticker && <FinancialOptions {...{ field, setField, setRequest, campo, ticker }} />}\r\n\r\n            {\r\n                loading ? <CustomCircularProgress /> :\r\n                    error ? <p>{error}</p> :\r\n                        data && data.annualReports ? <TableDataPrep\r\n                            data={data}\r\n                            field={field}\r\n                        />\r\n                            :\r\n                            <p>Error With data provider</p>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TableDataPrep = ({ data, field }) => {\r\n\r\n    const [readyData, setReadyData] = useState(\"\");\r\n    let anualdata = useRef({});\r\n\r\n    useEffect(() => {\r\n\r\n        data.annualReports.forEach((item) => {\r\n            anualdata.current = {\r\n                ...anualdata.current,\r\n                [item.fiscalDateEnding]: item,\r\n            };\r\n        });\r\n\r\n        let structuredData = {};\r\n        //every year has the same fields, so we take first index as a template\r\n        Object.keys(data.annualReports[0]).forEach((field) => {\r\n            console.log(field, \"campo\");\r\n            structuredData[field] = {};\r\n            Object.keys(anualdata.current).forEach((year) => {\r\n                structuredData[field][year] = anualdata.current[year][field];\r\n                console.log(anualdata.current[year]);\r\n            });\r\n        });\r\n        setReadyData(structuredData);\r\n\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        console.log(readyData, \"ready\");\r\n    }, [readyData]);\r\n\r\n    return (\r\n\r\n        field === \"BALANCE_SHEET\" ?\r\n            <TableUI2\r\n                {...{\r\n                    anualdata,\r\n                    readyData\r\n                }}\r\n            />\r\n            :\r\n            field === \"INCOME_STATEMENT\" ?\r\n                <IncomeStatement\r\n                    {...{\r\n                        anualdata,\r\n                        readyData\r\n                    }}\r\n                />\r\n                :\r\n                field === \"CASH_FLOW\" ?\r\n                    <CashFlow\r\n                        {...{\r\n                            anualdata,\r\n                            readyData\r\n                        }}\r\n                    />\r\n                    :\r\n                    <p>Somethign went wrong</p>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-use'\r\nimport { useUILayer } from '../ContextUI'\r\nimport { useViewport } from './useViewport'\r\n\r\nexport const useChartReflow = (chartInstance) => {\r\n    const { sidebarOpen } = useUILayer()\r\n    const { pathname } = useLocation()\r\n    console.log(pathname, \"pappdsdp\")\r\n    const { viewport } = useViewport()\r\n    console.log(viewport, \"viewpppp\")\r\n    //const {viewport} = useViewport()\r\n    useEffect(() => {\r\n\r\n        if (chartInstance && Object.keys(chartInstance).length > 0) {\r\n            console.log(chartInstance, \"popo\")\r\n            setTimeout(() => {\r\n                console.log(\"reflowwww\")\r\n                chartInstance.reflow()\r\n            }, 200)\r\n        }\r\n    }, [sidebarOpen, viewport, pathname])\r\n}\r\n","import React, { useState, useEffect, useReducer, useRef } from 'react'\r\nimport Highcharts from \"highcharts\"\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useChartReflow } from '../utils/useChartReflow';\r\n\r\nconst initialState = {\r\n    data: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n}\r\nconst dataReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"REQUEST_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        case \"REQUEST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n        case \"REQUEST_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const StackedColumn = ({ ticker }) => {\r\n    const [{ data, loading, error }, dispatch] = useReducer(dataReducer, initialState)\r\n    const fetchData = () => {\r\n        dispatch({ type: \"REQUEST_LOADING\" })\r\n        fetch(`https://finnhub.io/api/v1/stock/recommendation?symbol=${ticker}&token=btm6dp748v6ud360stcg`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                const dataCurrentYear = getCurrentYear(res)\r\n                if (dataCurrentYear.length) {\r\n                    dispatch({ type: \"REQUEST_SUCCESS\", payload: dataCurrentYear.reverse() })\r\n                } else {\r\n                    dispatch({ type: \"REQUEST_ERROR\", payload: \"No data available\" })\r\n                }\r\n            })\r\n\r\n    }\r\n    const getCurrentYear = (arr) => {\r\n        return arr.filter(item => item.period.split(\"-\")[0] === \"2020\")\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const chart = useRef(null)\r\n\r\n    useChartReflow(chart.current)\r\n\r\n    const options = {\r\n        chart: {\r\n            type: 'column',\r\n            events: {\r\n                load: function () {\r\n                    chart.current = this\r\n                }\r\n            }\r\n        },\r\n        title: {\r\n            text: 'Stacked column chart'\r\n        },\r\n        xAxis: {\r\n            categories: data && data.map(item => item.period)\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'stock recommendations'\r\n            },\r\n            stackLabels: {\r\n                enabled: true,\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: ( // theme\r\n                        Highcharts.defaultOptions.title.style &&\r\n                        Highcharts.defaultOptions.title.style.color\r\n                    ) || 'gray'\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || 'white',\r\n            borderColor: '#CCC',\r\n            borderWidth: 1,\r\n            shadow: false\r\n        },\r\n        tooltip: {\r\n            headerFormat: '<b>{point.x}</b><br/>',\r\n            pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                stacking: 'normal',\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n        series:\r\n            data &&\r\n            Object.keys(data[0])\r\n                .filter(item => item !== \"period\")\r\n                .map(field => (\r\n                    {\r\n                        name: field,\r\n                        data: data.map(item => item[field])\r\n                    }\r\n                ))\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                data && <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                />}\r\n        </>\r\n    )\r\n}\r\n","import { Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Carousel from 'react-material-ui-carousel'\r\n\r\nexport const PeerCarousel = ({ peersData }) => {\r\n\r\n    return (\r\n        <Carousel\r\n        animation=\"slide\"\r\n         className=\"carousel--ticker\"\r\n         >\r\n            {peersData.map(item => <Peer info={item}/>)}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\n\r\nconst Peer = ({info}) => {\r\n    const { name, symbol, pe, changesPercentage, price } = info\r\n    return (\r\n        <Paper\r\n        style={{height: \"100%\"}}\r\n        >\r\n            <h5>{symbol}</h5>\r\n            <p>{name}</p>\r\n            <p>{pe}</p>\r\n        </Paper>\r\n    )\r\n}","import { arrayMin } from 'highcharts'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CustomCircularProgress } from '../../components/components/CustomCircularProgress'\r\nimport { useDataLayer } from '../../Context'\r\nimport { PeerCarousel } from './PeerCarousel'\r\n\r\nexport const PeersSquare = ({ ticker }) => {\r\n\r\n    //const {datos, loading, error} = useFetch()\r\n    const [{ peerTickers, fetching, error }, setPeerTickers] = useState({ peerTickers: \"\", fetching: false, error: \"\" })\r\n    const [{ peersData, pfetching, perror }, setPeersData] = useState({ peersData: \"\", pfetching: false, perror: \"\" })\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPeers = async () => {\r\n            try {\r\n                setPeerTickers(prev => ({ ...prev, fetching: true }))\r\n                const rawData = await fetch(`https://finnhub.io/api/v1/stock/peers?symbol=${ticker}&token=btm6dp748v6ud360stcg`)\r\n                const data = await rawData.json()\r\n                if (data) {\r\n                    setPeerTickers(prev => ({ ...prev, fetching: false, peerTickers: data }))\r\n                }\r\n                else {\r\n                    throw new Error(\"no peers found\")\r\n                }\r\n            }\r\n            catch (err) {\r\n                setPeerTickers(prev => ({ ...prev, fetching: false, error: err.message }))\r\n                console.log(err.message)\r\n            }\r\n        }\r\n        console.log(state.peers[ticker], \"que cojoness\")\r\n        if (!state.peers[ticker]) {\r\n            fetchPeers()\r\n        } else {\r\n            setPeersData(state.peers[ticker])\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //this will only run if is the first time, to fetch all ticker info\r\n        if (peerTickers && !state.peers[ticker]) {\r\n            const promiseArr = peerTickers.slice(1, 4).map(async ticker => {\r\n                try {\r\n                    const rawData = await fetch(`https://financialmodelingprep.com/api/v3/quote/${ticker}?apikey=651d720ba0c42b094186aa9906e307b4`)\r\n                    return await rawData.json()\r\n                }\r\n                catch (err) {\r\n                    return [\"error\", err.message]\r\n                }\r\n            })\r\n            const fetchAllPeers = async () => {\r\n                setPeersData(prev=>({...prev, pfetching: true}))\r\n                const dota = await Promise.all(promiseArr)\r\n                console.log(dota, \"zorra\")\r\n                const cleanData = dota.filter(item => item.length !== 0)\r\n                let peersCombined = []\r\n                cleanData.forEach(item => {\r\n                    if (Array.isArray(item)) {\r\n                        const peer = item[0]\r\n                        peersCombined = [...peersCombined, peer]\r\n                    }\r\n                })\r\n                setPeersData(prev=>({...prev, loading: false, peersData: peersCombined}))\r\n                dispatch({ type: \"STORE_DATA\", payload: { ticker, field: \"peers\", value: peersCombined } })\r\n            }\r\n            fetchAllPeers()\r\n        }\r\n        //else we don't need to do anything else, we alry have all info\r\n    }, [peerTickers])\r\n\r\n    return (\r\n        <>\r\n            {/* {fetching && <CustomCircularProgress />}\r\n            {peerTickers && JSON.stringify(peerTickers, null, 2)} */}\r\n           {\r\n            peersData &&\r\n           <PeerCarousel peersData={peersData} />}\r\n        </>\r\n    )\r\n}\r\n","import {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Linechart } from \"../../charts/linechart\";\r\nimport { StackedColumn } from \"../../charts/StackedColumn\";\r\nimport { useDataLayer } from \"../../Context\";\r\nimport { DetailsSquare } from \"./DetailsSquare\";\r\nimport { PeersSquare } from \"./PeersSquare\";\r\n\r\nexport const BottomSection = ({ ticker }) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Paper\r\n          className=\"detail1\"\r\n        >\r\n          <StackedColumn\r\n          ticker={ticker}\r\n          />\r\n        </Paper>\r\n        <div\r\n          className=\"detail3\"\r\n        >\r\n          <PeersSquare\r\n            ticker={ticker}\r\n          />\r\n        </div>\r\n      </>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import { Chip, List, ListItem, ListItemText } from '@material-ui/core'\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { useDataLayer } from \"../../Context\"\r\nimport { camelCasePipe } from '../../utils/Pipes'\r\n\r\nexport const KeyMetrics = ({ ticker, setListHeight }) => {\r\n\r\n    const { state , dispatch} = useDataLayer()\r\n    const listo = useRef(null)\r\n    const url = \"https://www.alphavantage.co/query?function=OVERVIEW\";\r\n  \r\n  const apiKey = \"btm6dp748v6ud360stcg\";\r\n  const [data, setData] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(\"vas\")\r\n        //we need to check what happends if we pass undefined,\r\n        if(!state.keymetrics[ticker] || !state.keymetrics[ticker] === undefined){\r\n          console.log(\"que coño\", state.keymetrics[ticker])\r\n          setLoading(true);\r\n          fetch(`${url}&symbol=${ticker}&apikey=${apiKey}`)\r\n            .then((data) => data.json())\r\n            .then((data) => {\r\n              setLoading(false);\r\n              setData(data);\r\n            })\r\n            .catch((err) => {\r\n              setError(err.message);\r\n            });\r\n        }else{\r\n          setData(state.keymetrics[ticker])\r\n        }\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        if(!state.keymetrics[ticker]){\r\n          data && dispatch({type: \"STORE_DATA\", payload: {ticker: ticker, field: \"keymetrics\", value: data}})\r\n        }\r\n      }, [data])\r\n\r\n    useEffect(() => {\r\n        if (listo.current && Object.keys(data).length > 0) {\r\n            //console.log(listo.current.offsetHeight, \"hhhhhight\")\r\n            setListHeight(listo.current.offsetHeight)\r\n        }\r\n    }, [data])\r\n   \r\n    return (\r\n        <ul className=\"list-modelo\" ref={listo}>\r\n            {Object.keys(data).length > 0 &&\r\n                Object.keys(data).map(field => {\r\n                    if (field.toLowerCase() === \"description\") {\r\n                        return null\r\n                    }\r\n                    return (<li>\r\n                        <Chip label={camelCasePipe(field)} size=\"small\" />\r\n                        <p style={{ marginLeft: \"auto\" }}>{data[field]}</p>\r\n                    </li>)\r\n                }\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","export const camelCasePipe=(text)=>{\r\n    return text.replace(/([A-Z])/g, ' $1').trim()\r\n}","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useFetch } from \"../../utils/useFetch\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CircularProgress, LinearProgress, Paper, Typography } from \"@material-ui/core\";\r\nimport { KeyMetrics } from \"./KeyMetrics\";\r\nimport { useDataLayer } from \"../../Context\";\r\nimport { CustomCircularProgress } from \"../../components/components/CustomCircularProgress\";\r\nimport { useChartReflow } from \"../../utils/useChartReflow\";\r\n\r\n\r\nexport const CompanyChart = ({ ticker }) => {\r\n    const url = \"http://localhost:8001/api/v1/prices/ticker\";\r\n\r\n    const AdjustedPrices = useRef(null);\r\n    const notAdjustedPrices = useRef(null);\r\n    const { state, dispatch } = useDataLayer()\r\n    //we dont inicialize chart till data is ready because highchart is soo unreliable with updates\r\n    const [dataset, setDataset] = useState(null);\r\n\r\n    const hookOptions = {\r\n        explicitUrl: false\r\n    }\r\n    const { datos, loading, error } = useFetch(url, ticker, \"prices\", hookOptions);\r\n    //const chart = useRef(null)\r\n    const [theChart, setChart] = useState(null)\r\n    useChartReflow(theChart)\r\n    console.log(datos, \"rerenderr\")\r\n    const num = useRef(0)\r\n    num.current = num.current++\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (datos.data && datos.data.length > 0) {\r\n            if (typeof datos.data[0].date === \"string\") {\r\n\r\n                const cleanData = datos.data.map((item) => {\r\n\r\n                    const date = item.date.split(\"T\")[0];\r\n                    const actualDate = date.split(\"-\").map((val) => parseInt(val));\r\n                    const formatedDate = new Date(\r\n                        actualDate[0],\r\n                        actualDate[1] - 1,\r\n                        actualDate[2]\r\n                    );\r\n                    item.date = formatedDate.getTime();\r\n\r\n                    return item;\r\n                });\r\n                prepareData(cleanData);\r\n            } else {\r\n                //los datos ya nos vienen limpios del useFetch\r\n                console.log(\"ready\")\r\n                prepareData(datos.data)\r\n            }\r\n        }\r\n    }, [datos]);\r\n\r\n    const prepareData = (data) => {\r\n        console.log(\"hola\");\r\n        let ohl = [];\r\n        let ohlNA = [];\r\n        let volume = [];\r\n        data.forEach((record) => {\r\n            let cleanRecord = [\r\n                record[\"date\"],\r\n                record[\"adjOpen\"],\r\n                record[\"adjHigh\"],\r\n                record[\"adjLow\"],\r\n                record[\"adjClose\"],\r\n            ];\r\n            let cleanRecordNoAdjusted = [\r\n                record.date,\r\n                record.open,\r\n                record.high,\r\n                record.low,\r\n                record.close,\r\n            ];\r\n\r\n            ohl = [...ohl, cleanRecord];\r\n            ohlNA = [...ohlNA, cleanRecordNoAdjusted];\r\n        });\r\n        console.log(\"ooooohl\", ohl);\r\n\r\n        setDataset(ohl);\r\n\r\n        AdjustedPrices.current = ohl;\r\n        //need to add them into localStorage\r\n        notAdjustedPrices.current = ohlNA;\r\n    };\r\n    //console.log(chart.current, \"chaaart\")\r\n\r\n    const options = {\r\n        chart: {\r\n            zoomType: \"x\",\r\n            events: {\r\n                selection: function (e) {\r\n                    e && console.log(e);\r\n                },\r\n                load: function () {\r\n                    //chart.current = this\r\n                    setChart(this)\r\n                }\r\n                // load: function(){\r\n                //   setIsBuilding(false)\r\n                // }\r\n            },\r\n            //width,\r\n            id: \"chart-stock\",\r\n            animation: {\r\n                duration: 225,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            candlestick: {\r\n                color: \"red\",\r\n                upColor: \"rgb(22,177,87)\",\r\n                lineColor: \"red\",\r\n                upLineColor: \"rgb(22,177,87)\",\r\n                pointPadding: 0.02,\r\n            },\r\n        },\r\n\r\n        title: {\r\n            text: \"My chart\",\r\n            zoomType: \"x\",\r\n        },\r\n        rangeSelector: {\r\n            allButtonsEnabled: true,\r\n        },\r\n        navigator: {},\r\n        series: [\r\n            {\r\n                type: \"candlestick\",\r\n                data: dataset,\r\n                dataGrouping: {\r\n                    units: [\r\n                        [\"day\", [1, 2, 3, 4, 5, 8, 16]],\r\n                        [\"week\", [1, 2, 3, 4]],\r\n                        [\"month\", [1, 2, 3, 4, 6]],\r\n                    ],\r\n                    smoothed: true,\r\n                },\r\n                // showInNavigator: true,\r\n            },\r\n        ],\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading && <CustomCircularProgress />}\r\n            {loading && \"loading...\"}\r\n            {\r\n                dataset &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                    constructorType={\"stockChart\"}\r\n\r\n                />}\r\n            <button\r\n                onClick={() => {\r\n                    setDataset(notAdjustedPrices.current);\r\n                }}\r\n            >\r\n                Not adjusted prices\r\n      </button>\r\n            <button\r\n                onClick={() => {\r\n                    setDataset(AdjustedPrices.current);\r\n                }}\r\n            >\r\n                adjusted prices\r\n      </button>\r\n            <button >See income</button>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { BottomSection } from \"./BottomSection\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport { KeyMetrics } from \"./KeyMetrics\";\r\nimport { CompanyChart } from \"./CompanyChart\";\r\nimport { useDataLayer } from \"../../Context\";\r\nimport { StockShop } from \"../../portfolio/StockShop2\";\r\nimport { CurrentPriceRP } from \"../../portfolio/CurrentPriceRP\";\r\nimport { useCompanyGuard } from \"../../utils/useCurrentCompany\";\r\n\r\n\r\nexport const CompanySection = () => {\r\n\r\n  useCompanyGuard()\r\n  const { state, dispatch } = useDataLayer()\r\n  const { currentCompany: { ticker } } = state\r\n  const [clasi, setClasi] = useState(false)\r\n  const params = useParams()\r\n  const keyMetricsRef = useRef(null)\r\n  const [listHeight, setListHeight] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    if (keyMetricsRef.current) {\r\n      console.log(keyMetricsRef.current.offsetHeight, \"hhhhhight\")\r\n    }\r\n  }, [keyMetricsRef.current])\r\n\r\n\r\n  return (\r\n    <>\r\n      {ticker &&\r\n        <>\r\n\r\n          <div className=\"grida\" style={{ width: \"100%\" }}>\r\n            <Paper\r\n              className=\"chart\"\r\n            >\r\n              <CompanyChart ticker={ticker} />\r\n            </Paper>\r\n            <Box mb={2}>\r\n              <h3>Actions</h3>\r\n              <Paper\r\n                className=\"stock-shop\"\r\n                style={{ padding: \"1rem\", width: \"100%\" }}\r\n              >\r\n\r\n                <CurrentPriceRP ticker={ticker}>\r\n                  {({ currentPrice, loading, error }) => {\r\n                    return <StockShop {...{ currentPrice, loading, error }}\r\n                      ticker={ticker}\r\n                      assetType=\"stock\"\r\n                    />\r\n                  }}\r\n                </CurrentPriceRP>\r\n              </Paper>\r\n            </Box>\r\n            <div className=\"keymetrics\">\r\n              <Paper\r\n                className={clasi ? \"general overflown\" : \"general\"}\r\n                ref={keyMetricsRef}\r\n              >\r\n                <button onClick={() => { setClasi(prev => !prev) }}>change view</button>\r\n                <KeyMetrics\r\n                  setListHeight={setListHeight}\r\n                  ticker={ticker}\r\n                />\r\n              </Paper>\r\n            </div>\r\n            <BottomSection ticker={ticker} />\r\n          </div>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useUILayer } from \"../ContextUI\";\r\nimport { useChartReflow } from \"../utils/useChartReflow\";\r\n\r\n\r\nexport const IndexesChart = ({ datos }) => {\r\n    const chart = useRef(null)\r\n    const [dataset, setDataset] = useState(\"\")\r\n    //useChartReflow(chart.current)\r\n    useEffect(() => {\r\n        console.log(\"manzana\", datos.historical)\r\n        if (datos.historical && datos.historical.length > 0) {\r\n            console.log(\"entra\")\r\n            prepareData(datos.historical)\r\n\r\n        } else {\r\n            console.log(\"algo pasa, nunca deberia ejecutarse este else\")\r\n        }\r\n    }, [datos])\r\n\r\n    const sanitizeDates = (datar) => {\r\n        const data = datar.slice(0).map(item => {\r\n            const dateArr = item.date.slice(0).split(\"-\").map(num => parseInt(num));\r\n            item.date = new Date(dateArr).getTime();\r\n            return item\r\n        })\r\n        return data\r\n    }\r\n    \r\n    const prepareData = (datab) => {\r\n        console.log(datab, \"koojones que pasa\")\r\n        let data = typeof datos.historical[0].date === \"string\"\r\n            ?\r\n            sanitizeDates(datab)\r\n            :\r\n            datab\r\n\r\n\r\n        console.log(\"hola\");\r\n        let ohl = [];\r\n        let ohlNA = [];\r\n        let volume = [];\r\n        data.forEach((record) => {\r\n            let cleanRecord = [\r\n                record[\"date\"],\r\n                record[\"close\"],\r\n                record[\"high\"],\r\n                record[\"low\"],\r\n                record[\"open\"],\r\n            ];\r\n            ohl = [...ohl, cleanRecord];\r\n        });\r\n        console.log(\"ooooohl\", ohl);\r\n\r\n        setDataset(ohl.reverse());\r\n    };\r\n\r\n    const options = {\r\n        chart: {\r\n            zoomType: \"x\",\r\n            events: {\r\n                selection: function (e) {\r\n                    e && console.log(e);\r\n                },\r\n                load: function () {\r\n                    chart.current = this\r\n                }\r\n                // load: function(){\r\n                //   setIsBuilding(false)\r\n                // }\r\n            },\r\n            //width,\r\n            id: \"chart-stock\",\r\n            animation: {\r\n                duration: 225,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            candlestick: {\r\n                color: \"red\",\r\n                upColor: \"rgb(22,177,87)\",\r\n                lineColor: \"red\",\r\n                upLineColor: \"rgb(22,177,87)\",\r\n                pointPadding: 0.02,\r\n            },\r\n        },\r\n\r\n        title: {\r\n            text: \"My chart\",\r\n            zoomType: \"x\",\r\n        },\r\n        rangeSelector: {\r\n            allButtonsEnabled: true,\r\n        },\r\n        navigator: {},\r\n        series: [\r\n            {\r\n                type: \"candlestick\",\r\n                data: dataset,\r\n                dataGrouping: {\r\n                    units: [\r\n                        [\"day\", [1, 2, 3, 4, 5, 8, 16]],\r\n                        [\"week\", [1, 2, 3, 4]],\r\n                        [\"month\", [1, 2, 3, 4, 6]],\r\n                    ],\r\n                    smoothed: true,\r\n                },\r\n                // showInNavigator: true,\r\n            },\r\n        ],\r\n    };\r\n    console.log(dataset, \"jodio\")\r\n\r\n    return (\r\n        <>\r\n            {\r\n                dataset &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                    constructorType={\"stockChart\"}\r\n\r\n                />}\r\n            <div>kaak</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//  key info example\r\n//{\r\n//     \"date\" : \"2020-11-17\",\r\n//     \"open\" : 12030.269531,\r\n//     \"high\" : 12047.129883,\r\n//     \"low\" : 11964.200195,\r\n//     \"close\" : 11977.490234,\r\n//     \"adjClose\" : 11977.490234,\r\n//     \"volume\" : 4.12277E9,\r\n//     \"unadjustedVolume\" : 4.12277E9,\r\n//     \"change\" : -52.7793,\r\n//     \"changePercent\" : -0.439,\r\n//     \"vwap\" : 11996.27344,\r\n//     \"label\" : \"November 17, 20\",\r\n//     \"changeOverTime\" : -0.00439\r\n//   }","import React, { useEffect, useState } from \"react\";\r\nimport { useDataLayer } from \"../Context\";\r\n\r\n//ticker can refer as a category\r\nexport const useFatch = (url, ticker, field, options) => {\r\n\r\n  const { state, dispatch } = useDataLayer()\r\n\r\n  const [{ datos, loading, error, wasInState }, setRequest] = useState({\r\n    datos: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(datos, \"daaaatooos\")\r\n    const fetchar = async (query) => {\r\n      console.log(isInState(field), \"ceeeeeeee\")\r\n      if (!isInState(field)) {\r\n        try {\r\n          setRequest((prev) => ({ ...prev, loading: true }));\r\n          let dir;\r\n          if(options.explicitUrl){\r\n            dir = url\r\n          }else{\r\n            query === null ?\r\n            dir = url\r\n            :\r\n            dir = `${url}/${query}`\r\n          }\r\n          const rawData = await fetch(dir);\r\n          const data = await rawData.json();\r\n          dispatch({ type: \"SET_INDEXES\", payload: { ticker: ticker, field: field, value: data } })\r\n\r\n        } catch (err) {\r\n          setRequest((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n            error: err.message,\r\n          }));\r\n        }\r\n      }\r\n      else{\r\n        setRequest(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          datos: state.indexes[field][ticker]\r\n        }))\r\n      }\r\n    }\r\n    fetchar(ticker);\r\n\r\n  }, [field]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"ahora\", state)\r\n    if ( state.indexes[field] && state.indexes[field][ticker]) {\r\n        console.log(\"turn off\")\r\n      setRequest(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        datos: state.indexes[field][ticker]\r\n      }))\r\n      if (field !== ticker) {\r\n        try {\r\n          localStorage.setItem(field, JSON.stringify(state.indexes[field]))\r\n        }\r\n        catch (e) {\r\n          console.log(e, \"eeeee\")\r\n        }\r\n      }\r\n    }\r\n  }, [state.indexes])\r\n\r\n\r\n  const isInState = (field) => {\r\n    //check if we have this data already in localStorage\r\n    console.log(field, \"campo\")\r\n    if (state.indexes[field]) {\r\n      console.log(field, ticker, \"esta en mayuscula o que\")\r\n      if (state.indexes[field][ticker]) {\r\n        //we won't make additional request\r\n        return true\r\n      }\r\n      return false\r\n    }\r\n    else {\r\n\r\n      return false\r\n    }\r\n  }\r\n\r\n  return { datos, loading, error, wasInState };\r\n};\r\n","import React from \"react\";\r\nimport { IndexesChart } from \"../../charts/IndexesChart\";\r\nimport { CustomCircularProgress } from \"../../components/components/CustomCircularProgress\";\r\nimport { useFatch } from \"../../utils/useFatch\";\r\n\r\nexport const ChartIndex = ({ category, categorySan }) => {\r\n    const subCategory = \"prices\"\r\n    const url = `https://financialmodelingprep.com/api/v3/historical-price-full/${categorySan[0]}?apikey=651d720ba0c42b094186aa9906e307b4`\r\n    const options = { explicitUrl: true }\r\n    const { datos, loading, error } = useFatch(url, subCategory, category, options)\r\n    console.log(loading, \"cargando1\")\r\n    console.log(datos, \"ostia1\")\r\n    return (\r\n        <>\r\n            {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>}\r\n            {datos && Object.keys(datos).length > 0 && <IndexesChart datos={datos} />}\r\n        </>\r\n    )\r\n\r\n}","import { Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { CustomCircularProgress } from \"../../components/components/CustomCircularProgress\";\r\nimport { useDataLayer } from \"../../Context\";\r\nimport { useFatch } from \"../../utils/useFatch\";\r\n\r\nexport const Constituents = ({ category, categorySan }) => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const subCategory = \"constituents\"\r\n    const url = `https://finnhub.io/api/v1/index/constituents?symbol=${categorySan[1]}&token=btm6dp748v6ud360stcg`\r\n    const options = { explicitUrl: true }\r\n    const debounce = useRef(false)\r\n    const { datos, loading, error } = useFatch(url, subCategory, category, options)\r\n    const readyTickers = useRef({})\r\n    const [constituents, setConstituents] = useState(\"\")\r\n  \r\n    useEffect(() => {\r\n        console.log(\"executed\", category)\r\n        if (state.indexes[category] && state.indexes[category][subCategory]) {\r\n            console.log(state.indexes[category][subCategory], \"pota\")\r\n            fetch(`http://localhost:8001/api/v1/recurringTasks/indexes/constituents/${category}`, {\r\n                body: JSON.stringify({ ticker: state.indexes[category][subCategory].constituents }),\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => { setConstituents(res.data) })\r\n                .catch(err => { console.log(err.message) })\r\n            // .then(res=>{res.json()})\r\n            // .then(res=>{setConstituents(res )})\r\n        }\r\n    }, [state.indexes, category, debounce])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>}\r\n            {/* {datos.constituents && datos.constituents.length > 0 && datos.constituents.map(item => <p>{JSON.stringify(item, null, 2)}</p>)} */}\r\n            { constituents && (<Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                       <TableCell>ticker</TableCell>\r\n                       <TableCell>open</TableCell>\r\n                       <TableCell>close</TableCell>\r\n                       <TableCell>high</TableCell>\r\n                       <TableCell>low</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {constituents.map(item => <TableRow>\r\n                        <TableCell>{item.ticker}</TableCell>\r\n                        <TableCell>{item.open}</TableCell>\r\n                        <TableCell>{item.close}</TableCell>\r\n                        <TableCell>{item.high}</TableCell>\r\n                        <TableCell>{item.low}</TableCell>\r\n                    </TableRow>)}\r\n                </TableBody>\r\n            </Table>)\r\n            }\r\n            {/* {constituents && constituents.map(item => <ul>{Object.keys(item).map(fieldname => <li>{item[fieldname]}</li>)}</ul>)} */}\r\n        </>\r\n    )\r\n\r\n}\r\n","import { Paper } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { ChartIndex } from './ChartIndex'\r\nimport {Constituents} from \"./Constituents\"\r\n\r\nexport const BigIndex = ({ index }) => {\r\n\r\n    const category = index\r\n\r\n    const sanitizedQuery = (query) => {\r\n        switch (query) {\r\n            case \"sp500\":\r\n                return [\"^SP500TR\",\"^GSPC\"]\r\n            case \"nasdaq\":\r\n                return [\"^NDX\",\"^NDX\"]\r\n            case \"dowjones\":\r\n                return [\"^DJI\",\"^DJI\"]\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    const categorySan = sanitizedQuery(index)\r\n    console.log(category, categorySan, \"toto\")\r\n\r\n    return (\r\n        <div className=\"grid--indexes\">\r\n            <Paper\r\n            className=\"chart\"\r\n            >\r\n\r\n                <ChartIndex {...{ categorySan, category }} />\r\n            </Paper>\r\n\r\n            <Paper\r\n            className=\"constituents\"\r\n            >\r\n                <Constituents className=\"components\" {...{ category, categorySan }}/>\r\n            </Paper>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n//tenemos que cambiar la subcategoría a para fechar por primera vez\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useUILayer } from \"../ContextUI\";\r\nimport { useChartReflow } from \"../utils/useChartReflow\";\r\n\r\n\r\nexport const IndexesChart2 = ({ datos }) => {\r\n    console.log(\"helllo\")\r\n    const chart = useRef(null)\r\n    const [dataset, setDataset] = useState(\"\")\r\n    useChartReflow(chart.current)\r\n    console.log(datos, \"datuus\")\r\n    useEffect(() => {\r\n        console.log(\"manzana\", datos.historical)\r\n        if (datos.prices && datos.prices.length > 0) {\r\n            console.log(\"entra\")\r\n            prepareData(datos.prices)\r\n\r\n        } else {\r\n            console.log(\"algo pasa, nunca deberia ejecutarse este else\")\r\n        }\r\n    }, [datos])\r\n\r\n    const sanitizeDates = (datar) => {\r\n        const data = datar.slice(0).map(item => {\r\n            const dateArr = item.date.slice(0).split(\"-\").map(num => parseInt(num));\r\n            item.date = new Date(dateArr).getTime();\r\n            return item\r\n        })\r\n        return data\r\n    }\r\n    \r\n    const prepareData = (datab) => {\r\n        console.log(datab, \"koojones que pasa\")\r\n        let data = typeof datab[0].date === \"string\"\r\n            ?\r\n            sanitizeDates(datab)\r\n            :\r\n            datab\r\n\r\n\r\n        console.log(\"hola\");\r\n        let ohl = [];\r\n        let ohlNA = [];\r\n        let volume = [];\r\n        data.forEach((record) => {\r\n            let cleanRecord = [\r\n                record[\"date\"],\r\n                record[\"close\"],\r\n                record[\"high\"],\r\n                record[\"low\"],\r\n                record[\"open\"],\r\n            ];\r\n            ohl = [...ohl, cleanRecord];\r\n        });\r\n        console.log(\"ooooohl\", ohl);\r\n\r\n        setDataset(ohl.reverse());\r\n    };\r\n\r\n    const options = {\r\n        chart: {\r\n            zoomType: \"x\",\r\n            events: {\r\n                selection: function (e) {\r\n                    e && console.log(e);\r\n                },\r\n                load: function () {\r\n                    chart.current = this\r\n                }\r\n                // load: function(){\r\n                //   setIsBuilding(false)\r\n                // }\r\n            },\r\n            //width,\r\n            id: \"chart-stock\",\r\n            animation: {\r\n                duration: 225,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            candlestick: {\r\n                color: \"red\",\r\n                upColor: \"rgb(22,177,87)\",\r\n                lineColor: \"red\",\r\n                upLineColor: \"rgb(22,177,87)\",\r\n                pointPadding: 0.02,\r\n            },\r\n        },\r\n\r\n        title: {\r\n            text: \"My chart\",\r\n            zoomType: \"x\",\r\n        },\r\n        rangeSelector: {\r\n            allButtonsEnabled: true,\r\n        },\r\n        navigator: {},\r\n        series: [\r\n            {\r\n                type: \"candlestick\",\r\n                data: dataset,\r\n                dataGrouping: {\r\n                    units: [\r\n                        [\"day\", [1, 2, 3, 4, 5, 8, 16]],\r\n                        [\"week\", [1, 2, 3, 4]],\r\n                        [\"month\", [1, 2, 3, 4, 6]],\r\n                    ],\r\n                    smoothed: true,\r\n                },\r\n                // showInNavigator: true,\r\n            },\r\n        ],\r\n    };\r\n    console.log(dataset, \"jodio\")\r\n\r\n    return (\r\n        <>\r\n            {\r\n                dataset &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                    constructorType={\"stockChart\"}\r\n\r\n                />}\r\n            <div>kaak</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//  key info example\r\n//{\r\n//     \"date\" : \"2020-11-17\",\r\n//     \"open\" : 12030.269531,\r\n//     \"high\" : 12047.129883,\r\n//     \"low\" : 11964.200195,\r\n//     \"close\" : 11977.490234,\r\n//     \"adjClose\" : 11977.490234,\r\n//     \"volume\" : 4.12277E9,\r\n//     \"unadjustedVolume\" : 4.12277E9,\r\n//     \"change\" : -52.7793,\r\n//     \"changePercent\" : -0.439,\r\n//     \"vwap\" : 11996.27344,\r\n//     \"label\" : \"November 17, 20\",\r\n//     \"changeOverTime\" : -0.00439","import React, { useEffect, useState } from \"react\";\r\n// Import Highcharts\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\n\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\nexport const MiniatureChart = ({ datos }) => {\r\n    const [data, setData] = useState(\"\")\r\n    const prepareData = (datus) => {\r\n        const dataset = datus.map(record => record.close)\r\n        setData(dataset)\r\n    }\r\n    useEffect(() => {\r\n        if (datos.prices && datos.prices.length > 0) {\r\n            prepareData(datos.prices)\r\n        }\r\n    }, [datos])\r\n    const chartOptions = {\r\n        chart: {\r\n            type: \"spline\",\r\n            margin: 0,\r\n            height: (9 / 16 * 100) + '%',\r\n            animation: false //to disable initial animation we need to disable animation in plotOptions.series \r\n            //width: 50 \r\n        },\r\n        title: {\r\n            text: \"\"\r\n        },\r\n        series: [{\r\n            name: 'Tokyo',\r\n            data: data,\r\n            color: '#3f51b5'\r\n\r\n        }],\r\n        xAxis: {\r\n\r\n            crosshair: false, //hover effect of column\r\n            lineWidth: 0, //removes axis line\r\n            gridLineWidth: 0, //removes charts background line\r\n            lineColor: 'transparent',\r\n            minorTickLength: 0, //removes minor axis ticks \r\n            tickLength: 0, //removes  axis ticks \r\n            title: {\r\n                enabled: false\r\n            },\r\n            labels: {\r\n                enabled: false\r\n            },\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: ''\r\n            },\r\n            lineWidth: 0,\r\n            gridLineWidth: 0,\r\n            lineColor: 'transparent',\r\n            minorTickLength: 0,\r\n            tickLength: 0,\r\n            labels: {\r\n                enabled: false\r\n            },\r\n        },\r\n        tooltip: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                pointPadding: 0.2,\r\n                borderWidth: 0\r\n            },\r\n            series: {\r\n                animation: false,\r\n                marker: {\r\n                    states: {\r\n                        hover: {\r\n                            enabled: false\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>{data && <HighchartsReact\r\n            highcharts={Highcharts}\r\n            constructorType=\"chart\"\r\n            options={chartOptions}\r\n        />}\r\n        </>)\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport function TransitionComponent({children, open, setOpenChartModal}) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n      return\r\n    //setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      return\r\n    //setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={()=>{setOpenChartModal(false)}} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {children}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { IndexesChart2 } from './indexesChart2'\r\nimport { MiniatureChart } from './MiniatureChartIndex'\r\nimport { TransitionComponent } from \"../components/TransitionComponent\"\r\nexport const GeneralIndexDispatcher = ({ datos, setChartSelected, chartSelected }) => {\r\n    const [openChartModal, setOpenChartModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (chartSelected === datos.symbol) {\r\n            setOpenChartModal(true)\r\n            console.log(datos.symbol, \"siimbol\")\r\n        } else {\r\n            setOpenChartModal(false)\r\n        }\r\n    }, [chartSelected])\r\n\r\n    return (\r\n        <div\r\n            onClick={() => { setChartSelected(datos.symbol) }}\r\n        >\r\n            {\r\n                openChartModal ?\r\n                    <TransitionComponent\r\n                    open={openChartModal}\r\n                    setOpenChartModal={setOpenChartModal}\r\n                    >\r\n                        <IndexesChart2\r\n                            datos={datos}\r\n                        />\r\n                    </TransitionComponent>\r\n                    :\r\n\r\n                    <MiniatureChart datos={datos} />\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { GeneralIndexDispatcher } from '../../charts/GeneralIndexDispatcher'\r\nimport { rounder, formatter } from \"../../utils/numFormatter\"\r\n//each index comes with quote, so we have it all\r\nexport const IndexesGeneral = () => {\r\n    const category = \"indexes\"\r\n    const subCategory = \"index-list\"\r\n    const options = { explicitUrl: true }\r\n    const [chartSelected, setChartSelected] = useState(\"\")\r\n    // const { datos, loading, error } = useFetch(\"https://financialmodelingprep.com/api/v3/quotes/index?apikey=651d720ba0c42b094186aa9906e307b4\", subCategory, category, options)\r\n\r\n    const [{ allIndexPrices, loading2, error2 }, setAllIndexPrices] = useState({ allIndexPrices: [], loading: false, error2: \"\" })\r\n    const getAllIndexPrices = () => {\r\n        setAllIndexPrices(prev => ({ ...prev, loading: true }))\r\n        fetch(\"http://localhost:8001/api/v1/recurringTasks/indexes/allprices\")\r\n            .then(res => res.json())\r\n            .then(res=>{\r\n                console.log(res, \"laassprecious\")\r\n                return res\r\n            })\r\n            .then(res => {\r\n                let datus = []\r\n                res.data.forEach(arr => {\r\n                    arr.forEach(arri => {\r\n                        datus = [...datus, arri]\r\n                    })\r\n                })\r\n                console.log(datus,\"datususus\")\r\n                setAllIndexPrices(prev => ({ ...prev, loading2: false, allIndexPrices: datus }))\r\n            })\r\n            .catch(err => { setAllIndexPrices(prev => ({ ...prev, loading2: false, error2: err })) })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getAllIndexPrices()\r\n\r\n    }, [])\r\n    console.log(allIndexPrices, \"putaprices\")\r\n    const getProvisionalData = () => {\r\n        if (allIndexPrices && allIndexPrices.length) {\r\n            const indexPrincesCopy = [...allIndexPrices]\r\n            console.log(indexPrincesCopy, \"papapapa\")\r\n            return indexPrincesCopy\r\n                .filter(index => index.prices)\r\n                .map(index => {\r\n                    console.log(index)\r\n                    return { name: index.symbol, prices: index.prices[index.prices.length - 1] }\r\n                })\r\n        }\r\n        return null\r\n    }\r\n\r\n    const provisionalData = getProvisionalData()\r\n    if (!provisionalData) {\r\n        return <SkeletonTable />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>} */}\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            Name\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            open\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            close\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            high\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            low\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            change\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            chart\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n\r\n                    {provisionalData && provisionalData.map(({ prices, name }, index) => (\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                {name}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {formatter.format(prices.open)}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {formatter.format(prices.close)}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {formatter.format(prices.high)}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {formatter.format(prices.low)}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {rounder((prices.change / prices.close) * 100) + \"%\"}\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ padding: 0, width: \"100px\" }}\r\n                            ><GeneralIndexDispatcher\r\n                                    datos={allIndexPrices[index]}\r\n                                    setChartSelected={setChartSelected}\r\n                                    chartSelected={chartSelected}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            {/* {datos.length > 0 && datos.map(item => <p>{JSON.stringify(item, null, 2)}</p>)} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SkeletonTable = () => {\r\n    return (\r\n        <Table>\r\n\r\n            {Array(20).fill(null).map(() => {\r\n                return <TableRow>\r\n                    <TableCell>\r\n                        <Skeleton variant=\"text\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Skeleton variant=\"text\" />\r\n                        <Skeleton variant=\"text\" width=\"50%\" />\r\n                        <Skeleton variant=\"text\" width=\"35%\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Skeleton height={20} />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Skeleton variant=\"text\" />\r\n                        <Skeleton variant=\"text\" width=\"50%\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Skeleton height={100} />\r\n                    </TableCell>\r\n                </TableRow>\r\n            })}\r\n        </Table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { BigIndex } from './BigIndex'\r\nimport { IndexesGeneral } from './IndexesGeneral'\r\nimport { Nasdaq } from './Nasdaq'\r\nimport { SP500 } from './SP500'\r\n\r\n//queda pendiente poner el registro completo con csv \r\nexport const IndexesController = () => {\r\n    const { field } = useParams()\r\n    const bigIndexes = [\"sp500\", \"nasdaq\", \"dowjones\"]\r\n    console.log(field, \"campu\")\r\n    return (\r\n        <>\r\n            {bigIndexes.includes(field) ?\r\n                <BigIndex index={field}/>\r\n                : <IndexesGeneral />}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDataLayer } from '../Context'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { convertUnixToHuman } from '../utils/datesUtils'\r\n\r\nexport const usePortfolioGenerator = () => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const [processing, setProcessing] = useState(true)\r\n    const { portfolioHistory, generatedSeries, areHistoricPricesReady, stockLibrary, portfolioSeriesReady, simulation, addFirstSerie } = state\r\n    const userRefreshed = useRef(true)\r\n    const { userState: { info } } = useUserLayer()\r\n    const validDates = useRef([])\r\n    const polyfillPrices = useRef({})\r\n\r\n    const initialDate = useRef(null)\r\n    //option 1 : save masterSerie as a object\r\n    //option 2 : save masterSerie as a array\r\n\r\n    //generated series has dates that portfolioHistory dont have (weekends stock market is close)\r\n\r\n    //we need to update today's income, so we could remove last value and added it again with the correct info\r\n    //this is step2\r\n\r\n    const getLastValidPrice = (ticker) => {\r\n        let fecha\r\n        let register\r\n        for (let date of Object.keys(portfolioHistory).reverse()) {\r\n            if (portfolioHistory[date][ticker]) {\r\n                fecha = date\r\n                register = portfolioHistory[date][ticker]\r\n                break\r\n            }\r\n        }\r\n        return { fecha, register }\r\n    }\r\n\r\n\r\n    // const updateSerie = (cb) => {\r\n    //     var lastDaySerieStep2;\r\n    //     let change, incomeDiff, dayBefore;\r\n    //     let lastIncome = 0\r\n    //     let liquidativeValue = 1000\r\n    //     const seriesStep2 = portfolioSeries\r\n    //     const seriesStep2Copy = { ...seriesStep2 }\r\n    //     // const today = Object.keys(seriesStep2)[Object.keys(seriesStep2).length - 1]\r\n    //     const today = convertUnixToHuman(Date.now())\r\n\r\n    //     const currentSerieStep1 = generatedSeries.dates[today]\r\n    //     //const generatedSerieOfToday = generatedSeries\r\n    //     console.log(today, \"todaaaay\")\r\n    //     let portfolioCost = 0;\r\n    //     let portfolioValue = 0;\r\n    //     console.log(portfolioHistory)\r\n    //     console.log(portfolioSeries, \"wuta\")\r\n    //     currentSerieStep1.positions.forEach(asset => {\r\n    //         portfolioCost += asset.amount * asset.unitaryCost\r\n    //         console.log(asset.ticker, \"ticko\")\r\n    //         const { register } = getLastValidPrice(asset.ticker)\r\n    //         const positionVal = register.close * asset.amount\r\n    //         portfolioValue += positionVal\r\n\r\n    //         let valueIncrement = 0\r\n    //         let lastDate = validDates.current[validDates.current.length - 1]\r\n    //         console.log(lastDate, today, \"luuust\")\r\n    //         let lastLiquidativeValue = seriesStep2[today].liquidativeValue\r\n    //         //calculate portfolioValue and costs\r\n\r\n    //         //calculate liquidative Value\r\n    //         const stockClosePrice = portfolioHistory[today][asset.ticker.toUpperCase()].close\r\n    //         const aportacion = calculadorMedia(asset, register.close, today, lastDate, portfolioValue)\r\n    //         console.log(aportacion, \"jojo\")\r\n    //         valueIncrement += aportacion\r\n\r\n    //         liquidativeValue = lastLiquidativeValue * (1 + valueIncrement)\r\n\r\n    //     })\r\n\r\n\r\n    //     seriesStep2Copy[today] = {\r\n    //         portfolioCost,\r\n    //         portfolioValue,\r\n    //         liquidativeValue,\r\n    //     }\r\n    //     console.log(\"execuuuted\")\r\n    //     cb(seriesStep2Copy)\r\n    // }\r\n\r\n    const getLastPrice = (lastDate, asset) => {\r\n        const theresLastPrice = portfolioHistory[lastDate][asset.ticker.toUpperCase()]\r\n        if (theresLastPrice) {\r\n            return portfolioHistory[lastDate][asset.ticker.toUpperCase()].close\r\n        }\r\n        return polyfillPrices.current[asset.ticker]\r\n    }\r\n\r\n    const calculadorMedia = (asset, stockPrice, date, lastDate, portfolioValue) => {\r\n\r\n        //console.log(asset.amount, asset.price, portfolioValue, date, lastDate, asset.ticker, \"rururu\")\r\n        //console.log(portfolioHistory, \"historria\")\r\n        const relativeSize = (asset.amount * stockPrice) / portfolioValue\r\n        const lastPrice = getLastPrice(lastDate, asset)\r\n        const change = (stockPrice - lastPrice) / lastPrice\r\n        //console.log(relativeSize, \"rururu\")\r\n        //console.log((currentPrice - lastPrice) / lastPrice, \"rururu\")\r\n        //console.log(change, relativeSize, \"rururu\")\r\n        const koko = relativeSize * change\r\n        return koko\r\n    }\r\n    const addRelativePerformance = (companiesPerformance, date, aportacion, asset) => {\r\n        const aportacionR = aportacion * 100\r\n        if (Math.abs(aportacionR) < 0.1) {\r\n            const otherCategory = companiesPerformance[date].find(item => item.ticker === \"other\")\r\n            if (!otherCategory) {\r\n                companiesPerformance[date] = [\r\n                    ...companiesPerformance[date],\r\n                    {\r\n                        ticker: \"other\",\r\n                        performance: aportacionR\r\n                    }\r\n                ]\r\n            } else {\r\n                otherCategory.performance = otherCategory.performance + aportacionR\r\n            }\r\n\r\n        } else {\r\n            companiesPerformance[date] = [...companiesPerformance[date],\r\n            {\r\n                ticker: asset.ticker.toUpperCase(),\r\n                performance: aportacionR\r\n            }\r\n            ]\r\n        }\r\n    }\r\n    const fetchQuotes = (cb) => {\r\n        return fetch(\"http://localhost:8001/api/portfolio/quotes\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ tickers: stockLibrary }),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => cb(res))\r\n            .catch(err => { throw new Error(err) })\r\n    }\r\n    const generateSerie = (cb, quotes = null, initialDate = null) => {\r\n        console.log(quotes, initialDate, \"worker running\")\r\n        const worker = new Worker(\"/worker3.js\")\r\n        worker.postMessage({ _portfolioHistory: portfolioHistory, _generatedSeries: generatedSeries, quotes, initialDate })\r\n        worker.onmessage = e => {\r\n            const { portfolioSeries, companiesPerformanceImpact } = e.data\r\n            console.log(portfolioSeries, companiesPerformanceImpact, \"portfolioSeries\")\r\n\r\n            setProcessing(false)\r\n\r\n            //we won't store it in case it returns a empty object (means data missing due to is too earlie to get prices)\r\n            if (Object.keys(companiesPerformanceImpact).length) {\r\n                dispatch({ type: \"STORE_IMPACT_BY_COMPANY\", payload: companiesPerformanceImpact })\r\n            } else {\r\n                dispatch({ type: \"COMPANIES_IMPACT_AWAITING\" })\r\n            }\r\n            //the same for portfolio price series\r\n            console.log(\"cuuuuuu\")\r\n            if (Object.keys(portfolioSeries).length) {\r\n                console.log(\"cuuuuuuco\")\r\n                cb(portfolioSeries)\r\n            } else {\r\n\r\n                //we set the portfolioSeriesReady to true, because it has already been procesed but there's no data yet because firs purchases where made in the weekend. So when user visit dashboard intead of showing loading (as we were procesing) we'll show when data will be available.\r\n                dispatch({ type: \"SET_PORTFOLIO_SERIES_AWAITING\" })\r\n                \r\n            }\r\n        }\r\n    }\r\n    const generateSeri = (cb) => {\r\n        let masterSerie = {}\r\n        let liquidativeInitial = 1000\r\n        let accruedIncome = 0\r\n        let companiesPerformanceImpact = {}\r\n        let change, lastDate, lastIncome, liquidativeValue;\r\n        let wtf = []\r\n        polyfillPrices.current = {}\r\n        //polifill, if some price is unexpectly missing we will use the last valid price.\r\n        let stocksProcesed = []\r\n        const dateKeys = Object.keys(generatedSeries.data.dates)\r\n        dateKeys.forEach((date, index) => {\r\n            if (portfolioHistory[date] !== undefined) {\r\n                let portfolioCost = 0\r\n                let portfolioValue = 0\r\n                generatedSeries.data.dates[date].positions.forEach(asset => {\r\n                    portfolioCost += asset.amount * asset.unitaryCost\r\n                    const stockRegister = portfolioHistory[date][asset.ticker.toUpperCase()]\r\n                    let stockClosePrice;\r\n                    if (stockRegister === undefined) {\r\n                        let lastValidPrice = polyfillPrices.current[asset.ticker]\r\n                        stockClosePrice = lastValidPrice ? lastValidPrice : asset.unitaryCost\r\n                        polyfillPrices.current[asset.ticker] = stockClosePrice\r\n                    } else {\r\n                        stockClosePrice = stockRegister.close\r\n                        polyfillPrices.current[asset.ticker] = stockClosePrice\r\n                    }\r\n                    console.log(asset.ticker, stockClosePrice, \"paro ka\")\r\n                    const positionVal = stockClosePrice * asset.amount\r\n                    portfolioValue += positionVal\r\n                })\r\n                if (index === 0) {\r\n                    liquidativeValue = liquidativeInitial\r\n                    validDates.current = [...validDates.current, date]\r\n                    masterSerie = {\r\n                        ...masterSerie,\r\n                        [date]: {\r\n                            portfolioCost,\r\n                            portfolioValue,\r\n                            accruedIncome,\r\n                            liquidativeValue\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    companiesPerformanceImpact[date] = []\r\n                    let valueIncrement = 0\r\n                    let lastDate = validDates.current[validDates.current.length - 1]\r\n                    //console.log(lastDate, \"luuust\")\r\n                    let lastLiquidativeValue = masterSerie[lastDate].liquidativeValue\r\n                    //calculate portfolioValue and costs\r\n                    //calculate liquidative Value\r\n\r\n                    generatedSeries.data.dates[date].positions.forEach(asset => {\r\n                        let isFirstRecord = false\r\n                        if (!stocksProcesed.includes(asset.ticker.toUpperCase())) {\r\n                            stocksProcesed = [...stocksProcesed, asset.ticker.toUpperCase()]\r\n                            isFirstRecord = true\r\n                        }\r\n\r\n                        const stockRegister = portfolioHistory[date][asset.ticker.toUpperCase()]\r\n                        let stockClosePrice;\r\n                        if (stockRegister === undefined) {\r\n                            stockClosePrice = polyfillPrices.current[asset.ticker]\r\n                        } else {\r\n                            stockClosePrice = stockRegister.close\r\n                            //polyfillPrices[asset.ticker] = stockClosePrice\r\n                        }\r\n                        // if (stockClosePrice === undefined) {\r\n                        //     stockClosePrice = getLastValidPrice(asset.ticker.toUpperCase())\r\n                        // }\r\n                        const aportacion = isFirstRecord ? 0 : calculadorMedia(asset, stockClosePrice, date, lastDate, portfolioValue)\r\n                        //console.log(aportacion, \"jojo\")\r\n                        valueIncrement += aportacion\r\n                        addRelativePerformance(companiesPerformanceImpact, date, aportacion, asset)\r\n\r\n                    })\r\n\r\n                    liquidativeValue = lastLiquidativeValue * (1 + valueIncrement)\r\n\r\n                    masterSerie = {\r\n                        ...masterSerie,\r\n                        [date]: {\r\n                            portfolioCost,\r\n                            portfolioValue,\r\n                            accruedIncome,\r\n                            liquidativeValue\r\n                        }\r\n                    }\r\n                    //we should store this array in the context to acces easily in the updateSeries\r\n                    validDates.current = [...validDates.current, date]\r\n                }\r\n\r\n            }\r\n        })\r\n        console.log(companiesPerformanceImpact, \"perfi\")\r\n        console.log(wtf)\r\n        dispatch({ type: \"STORE_IMPACT_BY_COMPANY\", payload: companiesPerformanceImpact })\r\n        cb(masterSerie)\r\n    }\r\n\r\n    console.log(generatedSeries, \"muuu\")\r\n\r\n    const storePortfolioDB = (portfolio) => {\r\n        fetch(\"http://localhost:8001/api/v1/operations/update\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email: info.email, portfolio })\r\n            ,\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => { throw err.message })\r\n    }\r\n    const getInitialDate = async () => {\r\n        const res = await fetch(\"http://localhost:8001/api/v1/operations/initial\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email: info.email }),\r\n            method: \"POST\"\r\n        })\r\n        const data = await res.json()\r\n        return data.split(\"T\")[0]\r\n    }\r\n\r\n\r\n    //triggered after action after fetchquotes is dispatch and state i updated \r\n    useEffect(() => {\r\n        if (addFirstSerie) {\r\n            if (simulation.quotes) {\r\n                generateSerie((result) => {\r\n                    dispatch({ type: \"STORE_PORTFOLIO_SERIES\", payload: result })\r\n                    storePortfolioDB(result)\r\n                }, simulation.quotes, initialDate.current)\r\n            }\r\n        }\r\n    }, [simulation])\r\n\r\n    const handleSimulatedSeries = async () => {\r\n        initialDate.current = await getInitialDate()\r\n        //that will trigger the useeffect with [siulation] deps of above\r\n        //we do it like this becuase reactContext Consumer is not in sync with Provider inmediately.\r\n        try {\r\n            fetchQuotes((result) => {\r\n                dispatch({ type: \"SET_SIMULATION_QUOTES\", payload: result[0] })\r\n            })\r\n        }\r\n        catch (err) {\r\n            alert(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(areHistoricPricesReady, \"que cohone\")\r\n        if (areHistoricPricesReady && generatedSeries.ready && !portfolioSeriesReady) {\r\n            //firstDay\r\n            if (addFirstSerie) {\r\n                handleSimulatedSeries()\r\n            } else {\r\n                //default mode\r\n                generateSerie((result) => {\r\n                    console.log(\"what de hell\")\r\n                    dispatch({ type: \"STORE_PORTFOLIO_SERIES\", payload: result })\r\n                    storePortfolioDB(result)\r\n                })\r\n            }\r\n        }\r\n\r\n    }, [generatedSeries, areHistoricPricesReady, portfolioSeriesReady])\r\n\r\n}","import { useEffect, useRef } from \"react\";\r\nimport { useDataLayer } from \"../Context\";\r\nimport { convertHumanToUnixInit, convertHumanToUnixInitial, convertUnixToHuman, milisencondsInADay } from \"../utils/datesUtils\";\r\nimport { usePortfolioGenerator } from \"./portfolioGenerator2\";\r\n//we lost lot of time by not realising .map() mutate object, so each time we were changing th eamount of one date we were change all the amount of the past dates as well kind of magically. That is because each date is an array of objects, and this objects are references from the previous object as we generate the the series from the objects of the date before. So everytime we were fining the updatedInfo, we were using the same object (as they werre pointing to he same memory dir), instead of a copy..\r\n\r\n\r\n//we are injecting this from App.js\r\n\r\n\r\n\r\n//let initialTimeUnix = 0\r\n//gastamos 12.000 en acciones de amzn\r\n//vendemos 10 acciones a 3000, ingresando 30.000, ganamos 12.000\r\n\r\nconst findFirstDate = (userActivity) => {\r\n    let valu\r\n    userActivity.forEach(operation => {\r\n        if (operation.isFirstOperation) {\r\n            // console.log(operation.date)\r\n            valu = convertHumanToUnixInit(operation.date)\r\n        }\r\n    })\r\n    return valu\r\n}\r\n\r\n\r\n\r\nconst getTotalDaysElapsed = (initialTime) => {\r\n    //const initialTime = findFirstDate()\r\n    const date = convertUnixToHuman(Date.now())\r\n    //console.log(date, \"duuuu\")\r\n    const todayUnix00 = convertHumanToUnixInit(date)\r\n\r\n    //console.log(todayUnix00,\"duuu2\", initialTime)\r\n    const totalMilisecons = todayUnix00 - initialTime\r\n    if (totalMilisecons > 0) {\r\n        return totalMilisecons / milisencondsInADay\r\n    } else {\r\n        //this will only run in the day 0 \r\n        return 0\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const useLogicPruebas = () => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n\r\n    const createTimelaspse = (initialTime) => {\r\n        const firstDate = convertUnixToHuman(initialTime)\r\n        let timelapse = [firstDate]\r\n        let lastDate = initialTime\r\n        //let initialTime = findFirstDate(state.userActivity)\r\n        const range = getTotalDaysElapsed(initialTime)\r\n        //let unixDate = initialTimeUnix.current\r\n        //console.log(range, \"raaango\")\r\n        //console.log(initialTime, \"ostiatime\")\r\n        Array.from(Array(Math.random(range)).keys()).forEach(_ => {\r\n            lastDate += milisencondsInADay\r\n            timelapse = [...timelapse, convertUnixToHuman(lastDate)]\r\n        })\r\n        return timelapse\r\n    }\r\n\r\n    const handleSell = (costMeanXud, amountSold, priceSold) => {\r\n        const income = (priceSold * amountSold) - (costMeanXud * amountSold)\r\n        return { income }\r\n    }\r\n\r\n    // const addToGeneratedSeries = (newOperation, cb) => {\r\n    //     //we could save the first date in database intead of calculating everytime\r\n    //     console.log(\"queee hostiaaaaaaa\")\r\n    //     let today;\r\n    //     const { unitaryCost, ticker, amount } = newOperation.details\r\n    //     const currentGeneratedSerie = state.generatedSeries\r\n    //     //we need to get today's serie last key\r\n    //     console.log(JSON.parse(JSON.stringify(currentGeneratedSerie)), \"quepaso1\")\r\n    //     if (newOperation.isFirstOperation) {\r\n    //         //the generated serie won't have any date\r\n    //         today = convertUnixToHuman(Date.now())\r\n    //         const updatedSeries = {\r\n    //             ...state.generatedSeries,\r\n    //             dates: {\r\n    //                 [today]: {\r\n    //                     income: 0,\r\n    //                     positions: [\r\n    //                         {ticker, amount, unitaryCost}\r\n    //                     ]\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         cb(updatedSeries)\r\n    //         return\r\n    //         //we leave the function here\r\n    //     }\r\n    //     //realmente ya tenemos la date de hoy en newOperation\r\n    //     today = Object.keys(currentGeneratedSerie.dates)[Object.keys(currentGeneratedSerie.dates).length - 1]\r\n\r\n    //     console.log(state.generatedSeries, \"repuuuuta\")\r\n    //     console.log(JSON.parse(JSON.stringify(today)), \"quepaso2\")\r\n    //     let todayRegister = currentGeneratedSerie.dates[today]\r\n    //     console.log(todayRegister, \"registro de hoy\")\r\n\r\n    //     let alreadyInPortfolio = todayRegister.positions.find(asset => asset.ticker === ticker)\r\n    //     if (alreadyInPortfolio) {\r\n    //         if (newOperation.operationType === \"buy\") {\r\n    //             const newAmount = alreadyInPortfolio.amount + amount\r\n    //             const unitaryCostMean =\r\n    //                 (alreadyInPortfolio.unitaryCost * alreadyInPortfolio.amount) /\r\n    //                 (alreadyInPortfolio.amount + amount)\r\n    //                 +\r\n    //                 (unitaryCost * amount) /\r\n    //                 (alreadyInPortfolio.amount + amount)\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio\r\n    //             }\r\n    //             const readyUnitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n    //             const otherPositions = todayRegister.positions.filter(asset => asset.ticker !== ticker)\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio,\r\n    //                 amount: newAmount,\r\n    //                 unitaryCost: readyUnitaryCost\r\n    //             }\r\n    //             todayRegister = {\r\n    //                 ...todayRegister,\r\n    //                 positions: [\r\n    //                     ...otherPositions,\r\n\r\n    //                 ]\r\n    //             }\r\n    //         } else {\r\n    //             //sell\r\n    //             const newAmount = alreadyInPortfolio.amount - amount\r\n    //             const { income } = handleSell(alreadyInPortfolio.unitaryCost, amount, newOperation.details.priceSold)\r\n    //             //we need to check if there was income for this ticker (if was sold anytime before)\r\n    //             const newIncome = alreadyInPortfolio.income ? alreadyInPortfolio.income + income : income\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio,\r\n    //                 income: newIncome,\r\n    //                 amount: newAmount\r\n    //             }\r\n    //             const otherPositions = todayRegister.positions.filter(asset => asset.ticker !== ticker)\r\n    //             if (newAmount > 0) {\r\n    //                 todayRegister = {\r\n    //                     ...todayRegister,\r\n    //                     positions: [\r\n    //                         ...otherPositions,\r\n    //                         alreadyInPortfolio\r\n    //                     ],\r\n    //                     income: todayRegister.income + income\r\n    //                 }\r\n    //             } else {\r\n    //                 const updatedPositions = todayRegister.positions.filter(asset => asset.ticker === ticker)\r\n    //                 todayRegister = {\r\n    //                     ...todayRegister,\r\n    //                     positions: updatedPositions,\r\n    //                     income: todayRegister.income + income\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //     } else {\r\n    //         if (newOperation.operationType === \"buy\") {\r\n    //             todayRegister = {\r\n    //                 ...todayRegister,\r\n    //                 positions: [...todayRegister.positions,\r\n    //                 { ticker, amount, unitaryCost }]\r\n    //             }\r\n    //         } else {\r\n    //             throw new Error(ticker, amount, \"can't sell stock that don't have\")\r\n    //         }\r\n    //     }\r\n    //     const updatedSeries = {\r\n    //         ...state.generatedSeries,\r\n    //         dates: {\r\n    //             ...state.generatedSeries.dates,\r\n    //             [today]: todayRegister\r\n    //         }\r\n    //     }\r\n    //     console.log(updatedSeries, \"repuuuuta2\")\r\n    //     cb(updatedSeries)\r\n    // }\r\n\r\n    const generateSerieFromBegining = (userActivity, cb) => {\r\n        console.log(\"called\")\r\n        const worker = new Worker(\"/worker2.js\")\r\n        worker.postMessage(userActivity)\r\n        worker.onmessage = (e) => {\r\n            console.log(e.data, \"posesions generated\")\r\n            const possesionGenerated = e.data\r\n            cb(possesionGenerated)\r\n        }\r\n    }\r\n    const generateSerieFromBeginin = (userActivity, cb) => {\r\n\r\n        // console.log(userActivity, \"actividad usuario\")\r\n        const initialTime = findFirstDate(userActivity)\r\n        // console.log(initialTime, \"tiempooo\")\r\n        //console.log(convertUnixToHuman(initialTime), \"crazyy\")\r\n        const timelapse = createTimelaspse(initialTime)\r\n\r\n        let masterHistory;\r\n        let koko = 0\r\n        masterHistory = {\r\n            income: 0\r\n        }\r\n        //console.log(timelapse, \"timelapse\")\r\n        if (!timelapse.length) {\r\n            masterHistory = {\r\n                ...masterHistory,\r\n                dates: {\r\n                }\r\n            }\r\n        }\r\n        //**deberiamos tener en cuenta si es fin de semana o no, ya que el finde no cambia nada, por lo que es redundante\r\n        timelapse.forEach(date => {\r\n            masterHistory = {\r\n                ...masterHistory,\r\n                dates: {\r\n                    ...masterHistory.dates,\r\n                    [date]: []\r\n                }\r\n            }\r\n        })\r\n\r\n        //here we initialize an empty array for each date\r\n        console.log(masterHistory, \"maastar\")\r\n        console.log(timelapse, \"timelapse\")\r\n        timelapse.forEach((date, index) => {\r\n            let hasMadeOperationThatDate = false\r\n            userActivity.forEach(operation => {\r\n                //console.log(typeof operation.date,typeof date,date, \"kostia\")\r\n                //console.log(operation.date, date, \"kostia\")\r\n                if (date === operation.date) {\r\n                    //console.log(index, \"iiii\")\r\n                    //console.log(\"hola\")\r\n                    //console.log(date, \"first date\")\r\n                    hasMadeOperationThatDate = true\r\n                    let ticker = operation.details.ticker\r\n                    let amount = operation.details.amount\r\n                    let unitaryCost = operation.details.unitaryCost\r\n                    let priceSold = operation.details.priceSold\r\n\r\n                    //tenemos que comprobar si teniamos alguna cantidad previamente de ese ticker\r\n                    let lastAmount = 0\r\n                    //console.log(JSON.parse(JSON.stringify(masterHistory)), JSON.parse(JSON.stringify(masterHistory.dates)), masterHistory.dates[date], date, \"wata\")\r\n                    const hasAlreadyOperatedThatDay = masterHistory[\"dates\"][date].positions\r\n                    if (hasAlreadyOperatedThatDay) {\r\n                        //console.log(ticker, \"operated twice that day\")\r\n                        const alreadyInPortfolio = masterHistory.dates[date].positions.find(item => item.ticker === ticker)\r\n                        if (alreadyInPortfolio) {\r\n                            lastAmount = alreadyInPortfolio.amount\r\n                            const newAmount =\r\n                                operation.operationType === \"buy\" ?\r\n                                    lastAmount + amount : lastAmount - amount\r\n                            if (operation.operationType === \"buy\") {\r\n                                const updatedInfo = masterHistory.dates[date].positions.map(({ ...posesions }) => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        posesions.amount = newAmount\r\n                                        const unitaryCostMean =\r\n                                            (posesions.unitaryCost * posesions.amount) /\r\n                                            (posesions.amount + amount)\r\n                                            +\r\n                                            (unitaryCost * amount) /\r\n                                            (posesions.amount + amount)\r\n\r\n                                        posesions.unitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n                                    }\r\n                                    return posesions\r\n                                })\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[date],\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            else if (operation.operationType === \"sell\") {\r\n                                let dateIncome, operationIncome;\r\n                                masterHistory.dates[date].positions.forEach(posesions => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        if (index === 0) {\r\n                                            // console.log(posesions.unitaryCost,\r\n                                            //   amount, priceSold, \"incomeee\")\r\n                                        }\r\n                                        const { income } = handleSell(posesions.unitaryCost, amount, priceSold)\r\n                                        if (index === 0) {\r\n                                            //console.log(JSON.parse(JSON.stringify(income, \"incomeee\")))\r\n                                        }\r\n                                        operationIncome = income\r\n\r\n                                        dateIncome = masterHistory.dates[date].income + income\r\n                                    }\r\n                                })\r\n                                let updatedInfo = newAmount !== 0 ?\r\n                                    //if we don't use spreed operatior we will be mutating the original object\r\n                                    masterHistory.dates[date].positions.map(({ ...posesions }) => {\r\n                                        if (posesions.ticker === ticker) {\r\n                                            posesions.amount = newAmount\r\n                                            posesions[\"income\"] = operationIncome\r\n                                        }\r\n                                        return posesions\r\n                                    })\r\n                                    :\r\n                                    masterHistory.dates[date].positions.filter(item => item.ticker !== ticker)\r\n\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: dateIncome,\r\n                                            positions: updatedInfo\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            masterHistory = {\r\n                                ...masterHistory,\r\n                                dates: {\r\n                                    ...masterHistory.dates,\r\n                                    [date]: {\r\n                                        ...masterHistory.dates[date],\r\n                                        positions: [\r\n                                            ...masterHistory.dates[date].positions,\r\n                                            {\r\n                                                ticker,\r\n                                                amount,\r\n                                                unitaryCost\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //if is the first iteration we now this is the initial operation so there're weren stocks before.\r\n                    else {\r\n                        const alreadyInPortfolio = index === 0 ? false : masterHistory.dates[timelapse[index - 1]].positions.find(item => item.ticker === ticker)\r\n                        // console.log(alreadyInPortfolio, \"que concho\")\r\n                        if (alreadyInPortfolio) {\r\n                            lastAmount = alreadyInPortfolio.amount\r\n                            const newAmount =\r\n                                operation.operationType === \"buy\" ?\r\n                                    lastAmount + amount : lastAmount - amount\r\n                            if (operation.operationType === \"buy\") {\r\n                                const updatedInfo = masterHistory.dates[timelapse[index - 1]].positions.map(({ ...posesions }) => {\r\n                                    //           console.log(posesions, \"cojones\")\r\n                                    if (posesions.ticker === ticker) {\r\n                                        posesions.amount = newAmount\r\n                                        const unitaryCostMean =\r\n                                            (posesions.unitaryCost * posesions.amount) /\r\n                                            (posesions.amount + amount)\r\n                                            +\r\n                                            (unitaryCost * amount) /\r\n                                            (posesions.amount + amount)\r\n\r\n                                        posesions.unitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n                                    }\r\n                                    return posesions\r\n                                })\r\n\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[timelapse[index - 1]],\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            else if (operation.operationType === \"sell\") {\r\n                                // console.log(JSON.parse(JSON.stringify(masterHistory)), \"antes\", ticker, date, timelapse[index - 1])\r\n                                //let newIncome;\r\n                                let operationIncome;\r\n                                let dateIncome;\r\n                                masterHistory.dates[timelapse[index - 1]].positions.forEach(posesions => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        const { income } = handleSell(posesions.unitaryCost, amount, priceSold)\r\n                                        operationIncome = income\r\n                                        dateIncome = masterHistory.dates[timelapse[index - 1]].income + income\r\n                                    }\r\n                                })\r\n                                let updatedInfo = newAmount !== 0 ?\r\n                                    masterHistory.dates[timelapse[index - 1]].positions.map(({ ...posesions }) => {\r\n                                        if (posesions.ticker === ticker) {\r\n                                            posesions.amount = newAmount\r\n                                            posesions[\"income\"] = operationIncome\r\n                                        }\r\n                                        return posesions\r\n                                    })\r\n                                    :\r\n                                    masterHistory.dates[timelapse[index - 1]].positions.filter(item => item.ticker !== ticker)\r\n                                // console.log(JSON.parse(JSON.stringify(masterHistory)), \"despues\", ticker, date, timelapse[index - 1])\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: dateIncome,\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            //si opera varias en un dia, el codigo no debe pasar x aqui\r\n                            const info = {\r\n                                ticker,\r\n                                amount,\r\n                                unitaryCost\r\n                            }\r\n\r\n                            if (index === 0) {\r\n                                //console.log(info, \"info\")\r\n                                //aunque sea el primer dia\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: 0,\r\n                                            positions: [\r\n                                                info\r\n                                            ]\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n\r\n                            } else {\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[timelapse[index - 1]],\r\n                                            positions: [\r\n                                                ...masterHistory.dates[timelapse[index - 1]].positions,\r\n                                                info\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    // console.log(\"noooooooooo\")\r\n                }\r\n            })\r\n            if (!hasMadeOperationThatDate) {\r\n                //si no hemos operado copiaremos el contenido del dia anterior\r\n                //console.log(\"no operation that day\")\r\n                koko++\r\n                //console.log(koko, \"recuento\")\r\n                const lastInfo = masterHistory.dates[timelapse[index - 1]]\r\n                //console.log(lastInfo)\r\n                masterHistory = {\r\n                    ...masterHistory,\r\n                    dates: {\r\n                        ...masterHistory.dates,\r\n                        [date]: lastInfo\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        console.log(masterHistory, \"aveeer nena\")\r\n        cb(masterHistory)\r\n    }\r\n    //solo se recalcularan las series cuando el ususario haya echo una nueva operacion y o cuando haya entrado en portolio dashboard\r\n    //usePortfolioGenerator()\r\n    useEffect(() => {\r\n        //this needs to fire either when initialState is ready and everytime we add new operation (user activity changes), as we need this to calculate the changes in AssetStructure chart\r\n        console.log(state.userActivity, state.setPruebaReady, state.generatedSeries.ready, \"actu\")\r\n        //setPruebaReady creo que es redundante aqui ya que cuando generatedSeries.status es falso significa que hemos realizado una nueva operacion (deberiamos impedir realizar nueva operacion hasta que no generatedSeries.status sea true again)\r\n        if (state.userActivity.length > 0 && state.setPruebaReady && !state.generatedSeries.ready) {\r\n            console.log(\"exxecutao\")\r\n            console.log(state.userActivity, \"useactivity\")\r\n            //if no userActivity we wont run any code\r\n            generateSerieFromBegining(state.userActivity, (generatedSerie) => {\r\n                console.log(\"exxecutao2\")\r\n                dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie })\r\n            })\r\n            //  else {\r\n            //     const newOperation = state.userActivity[state.userActivity.length - 1]\r\n            //     dispatch({ type: \"SET_ARE_GENERATED_SERIES_READY\", payload: false })\r\n            //     addToGeneratedSeries(newOperation, (generatedSerie) => {\r\n            //         dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie })\r\n            //         dispatch({ type: \"SET_ARE_GENERATED_SERIES_READY\", payload: true })\r\n            //         //userRefreshed.current will be alredy false\r\n            //     })\r\n            // }\r\n\r\n        }\r\n\r\n\r\n        // if (state.userActivity.length > 0 && Object.keys(state.portfolioHistory).length > 0) {\r\n        //     generateSerieFromBegining(state.userActivity, (generatedSerie) => { dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie }) })\r\n        // }\r\n    }, [state.setPruebaReady, state.generatedSeries])\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//console.log(createTimelaspse(), \"yea\")\r\n\r\n\r\n\r\n\r\n//makeIt()\r\n//console.log(findFirstDate(), \"aqui\")\r\n\r\n\r\nexport const userActivity = [\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"amzn\",\r\n            amount: 40,\r\n            unitaryCost: 300\r\n\r\n        },\r\n        isFirstOperation: true,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 60,\r\n            unitaryCost: 300\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 40,\r\n            priceSold: 300\r\n\r\n        },\r\n        isFirstOperation: false,\r\n    },\r\n    {\r\n        date: \"2020-06-16\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 40,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-22\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 30,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n    },\r\n    {\r\n        date: \"2020-06-25\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 30,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-07-18\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 10,\r\n            priceSold: 315\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 100,\r\n            unitaryCost: 10\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 20,\r\n            unitaryCost: 10\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"tef\",\r\n            amount: 80,\r\n            unitaryCost: 7\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-09-24\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 120,\r\n            priceSold: 20\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n\r\n    },\r\n    {\r\n        date: \"2020-09-21\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"tef\",\r\n            amount: 45,\r\n            priceSold: 3\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-10-26\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"amzn\",\r\n            amount: 10,\r\n            priceSold: 3000\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    }\r\n]","import React, { useState, useEffect, useRef } from 'react'\r\nimport Highcharts, { chart } from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useChartReflow } from '../utils/useChartReflow';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useDataLayer } from '../Context';\r\nimport { convertUnixToHuman } from '../utils/datesUtils';\r\nimport { useRemoveCredits } from '../utils/useRemoveCredits';\r\n\r\nHighcharts.setOptions({\r\n    global: {\r\n        useUTC: false\r\n    },\r\n    lang: {\r\n        rangeSelectorZoom: ''\r\n    }\r\n\r\n});\r\n\r\n\r\nexport const PortfolioPriceChart = ({ datos }) => {\r\n\r\n    const chart = useRef(null)\r\n    const chart2 = useRef(null)\r\n    useChartReflow(chart.current)\r\n    const { state: { addFirstSerie } } = useDataLayer()\r\n    const [dataset, setDataset] = useState(\"\")\r\n    const [availableTomorrow, setAvailableTomorrow] = useState(false)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    useRemoveCredits(isLoaded)\r\n\r\n    //la fecha de la grafica siempre es un dia menos respecto a las generatedseries\r\n\r\n    const prepareData = () => {\r\n        let cleanData = [];\r\n        let firstDate\r\n        Object.keys(datos).forEach((date, index) => {\r\n            console.log(date, \"duuta\")\r\n            const actualDate = date.split(\"-\").map((val) => parseInt(val));\r\n            const formatedDate = new Date(\r\n                actualDate[0],\r\n                actualDate[1] - 1,\r\n                actualDate[2]\r\n            );\r\n            console.log(formatedDate, \"ttiiimo\")\r\n            const unixTime = formatedDate.getTime();\r\n            if (!index) {\r\n                firstDate = unixTime - 1\r\n            }\r\n            console.log(new Date(unixTime), \"huuuuuuuuuue\")\r\n            cleanData.push({ ...datos[date], date: unixTime })\r\n        })\r\n        let readyData = cleanData.map(item => ([item.date, item.liquidativeValue]))\r\n        readyData = [[firstDate, 1000], ...readyData]\r\n        //prepend first point in 1000pts in firstDate \r\n        if (addFirstSerie) {\r\n\r\n        }\r\n        console.log(readyData, \"dataridi\")\r\n        setDataset(readyData)\r\n    }\r\n\r\n    const simulateSerie = () => {\r\n        let readyData = []\r\n        const firstOpTime = JSON.parse(localStorage.getItem(\"firstDate\"))\r\n        readyData = [...readyData, [firstOpTime, 1000]]\r\n        //should be only one\r\n        const key = Object.keys(datos)[0]\r\n        const currentLiquidative = datos[key].liquidativeValue\r\n        readyData = [...readyData, [Date.now(), currentLiquidative]]\r\n        setDataset(readyData)\r\n    }\r\n    useEffect(() => {\r\n        //console.log(chart2.current, \"chaart222\")\r\n        console.log(chart.current, \"chaart2221\")\r\n        if (datos) {\r\n            if (addFirstSerie) {\r\n                simulateSerie()\r\n                return\r\n            }\r\n            prepareData(datos)\r\n\r\n        } else {\r\n            setAvailableTomorrow(true)\r\n        }\r\n\r\n    }, [datos])\r\n\r\n    const options = {\r\n        chart: {\r\n            type: \"spline\",\r\n            zoomType: \"x\",\r\n            events: {\r\n                selection: function (e) {\r\n                    e && console.log(e);\r\n                },\r\n                load: function (e) {\r\n                    setIsLoaded(true)\r\n                    chart.current = this\r\n                }\r\n            },\r\n            id: \"chart-stock\",\r\n            animation: {\r\n                duration: 225,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            candlestick: {\r\n                color: \"red\",\r\n                upColor: \"rgb(22,177,87)\",\r\n                lineColor: \"red\",\r\n                upLineColor: \"rgb(22,177,87)\",\r\n                pointPadding: 0.02,\r\n            },\r\n        },\r\n\r\n        rangeSelector: {\r\n            dropdown: \"responsive\",\r\n            inputEnabled: false\r\n        },\r\n        series: [\r\n            {\r\n                data: dataset,\r\n                dataGrouping: {\r\n                    units: [\r\n                        [\"day\", [1, 2, 3, 4, 5, 8, 16]],\r\n                        [\"week\", [1, 2, 3, 4]],\r\n                        [\"month\", [1, 2, 3, 4, 6]],\r\n                    ],\r\n                    smoothed: true,\r\n                },\r\n                // showInNavigator: true,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            className=\"portfolio-chart\"\r\n        >\r\n            {availableTomorrow && <p>Data is not available untill next day after you submited a operation, if you submited in weekend wait till monday</p>}\r\n            {\r\n                dataset &&\r\n                <HighchartsReact\r\n                    //ref={chart2}\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                    constructorType={\"stockChart\"}\r\n\r\n                />}\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useEffect, useLayoutEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport const useRemoveCredits = (isLoaded) => {\r\n\r\n    useEffect(() => {\r\n        if (!isLoaded) {\r\n            return\r\n        }\r\n        const creditsComps = Array.from(document.querySelectorAll(\".highcharts-credits\"))\r\n        console.log(creditsComps, \"creditsss\")\r\n        creditsComps.forEach(el=>{el.remove()})\r\n    }, [isLoaded])\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDataLayer } from '../Context'\r\nimport { convertHumanToUnixInit } from '../utils/datesUtils'\r\nimport { rounder } from '../utils/numFormatter'\r\n\r\nexport const useCompaniesChange = () => {\r\n\r\n    const { state: { generatedSeries, portfolioHistory, areHistoricPricesReady, currentPossesions, simulation, addFirstSerie }, dispatch } = useDataLayer()\r\n    const [{ available, loading }, setAvailability] = useState({ available: false, loading: true })\r\n\r\n\r\n    const generateSeries = () => {\r\n        let result = {}\r\n        //inicialize our object with ticker keys as empty arr\r\n        currentPossesions.stocks.forEach(({ ticker }) => {\r\n            result = {\r\n                ...result,\r\n                [ticker]: []\r\n            }\r\n        })\r\n        console.log(result, \"reeeeuuuer\")\r\n        let change = 0\r\n        //aqui deberiamos cojer solo las que tienen mayor % peso\r\n        //ojo al generatedSeries que puede que no se haya creao aun\r\n\r\n\r\n        Object.keys(generatedSeries.data.dates).forEach(date => {\r\n\r\n            //**si es indefinido, y es el primer día, close será la quote y prevDayPrice será el coste (en generatedSeries)\r\n            if (portfolioHistory[date] !== undefined) {\r\n                //si es indefinido usamos la quote\r\n                let unixDate = convertHumanToUnixInit(date)\r\n                console.log(portfolioHistory[date], \"que cojooon\")\r\n                Object.keys(portfolioHistory[date]).forEach(ticker => {\r\n                    const wasInPort = generatedSeries.data.dates[date].positions.find(item => ticker === item.ticker)\r\n                    if (wasInPort) {\r\n                        console.log(wasInPort, \"wasInport\")\r\n                        const { close } = portfolioHistory[date][ticker]\r\n                        const prevDayPrice = result[ticker] && result[ticker].length > 0 && result[ticker][result[ticker].length - 1][2]\r\n                        if (prevDayPrice) {\r\n                            //mira aqui\r\n                            change = (close - prevDayPrice) * 100 / prevDayPrice\r\n                        } else {\r\n                            console.log(close, \"clooose\")\r\n\r\n                            change = (close - wasInPort.unitaryCost) * 100 / wasInPort.unitaryCost\r\n                        }\r\n                        //console.log(result.ticker, \"que cojooon\")\r\n                        console.log(result, result.ticker, ticker, \"ttiiika\")\r\n                        result = {\r\n                            ...result,\r\n                            [ticker]:\r\n                                [\r\n                                    ...result[ticker],\r\n                                    [unixDate, rounder(change), close]\r\n                                ]\r\n                        }\r\n\r\n                        console.log(result, \"resuuuuulto\")\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        console.log(result, \"compachnage\")\r\n        return result\r\n    }\r\n\r\n    const simulateSeries = () => {\r\n        console.log(\"ejecutiio\")\r\n        let result = {}\r\n        //we just need one date to draw one point, unlike portfolioChart\r\n        const now = Date.now()\r\n        //inicialize our object with ticker keys as empty arr\r\n        currentPossesions.stocks.forEach(({ ticker }) => {\r\n            result = {\r\n                ...result,\r\n                [ticker]: []\r\n            }\r\n        })\r\n        currentPossesions.stocks.forEach((asset) => {\r\n            const stock = simulation.quotes.find(item => item.ticker === asset.ticker)\r\n            const priceRightNow = stock.priceInfo.adjClose\r\n            const priceInitialMoment = asset.unitaryCost\r\n            console.log(asset.ticker, priceRightNow, priceInitialMoment, \"chan\")\r\n            const change = ((priceRightNow - priceInitialMoment) / priceInitialMoment) * 100\r\n            console.log(\"chang\", change)\r\n            result = {\r\n                ...result,\r\n                [asset.ticker]:\r\n                    [\r\n                        ...result[asset.ticker],\r\n                        [now, rounder(change)]\r\n                    ]\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (addFirstSerie && simulation.quotes) {\r\n            const simulatedDataset = simulateSeries()\r\n            dispatch({ type: \"STORE_COMPANIES_CHANGE\", payload: simulatedDataset })\r\n            setAvailability({ loading: false, available: true })\r\n            return\r\n        }\r\n\r\n    }, [areHistoricPricesReady, generatedSeries, simulation])\r\n\r\n    useEffect(() => {\r\n        if (addFirstSerie) {\r\n            //if it's true, we anulate this useEffect to use the above one\r\n            return\r\n        }\r\n\r\n        //if it's weekend\r\n        if (!Object.keys(portfolioHistory).length) {\r\n            setAvailability({ loading: false, available: false })\r\n            return\r\n        }\r\n        //default case\r\n        else if (areHistoricPricesReady && generatedSeries.ready) {\r\n            const dataset = generateSeries()\r\n            dispatch({ type: \"STORE_COMPANIES_CHANGE\", payload: dataset })\r\n            setAvailability({ loading: false, available: true })\r\n        }\r\n\r\n    }, [areHistoricPricesReady, generatedSeries])\r\n    return { available, loading }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Highcharts from \"highcharts\"\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nexport const DonutChart = ({data}) => {\r\n    const chartOptions = {\r\n        chart: {\r\n            type: 'pie',\r\n        },\r\n        title: {\r\n            text: undefined,\r\n        },\r\n        plotOptions: {\r\n            pie: {\r\n                innerSize: 100,\r\n            }\r\n        },\r\n        series: [{\r\n            name: 'Delivered amount',\r\n            data\r\n        }]\r\n        // series: [{\r\n        //     name: 'Delivered amount',\r\n        //     data: [\r\n        //         ['Bananas', 8],\r\n        //         ['Kiwi', 3],\r\n        //         ['Mixed nuts', 1],\r\n        //         ['Oranges', 6],\r\n        //         ['Apples', 8],\r\n        //         ['Pears', 4],\r\n        //         ['Clementines', 4],\r\n        //         ['Reddish (bag)', 1],\r\n        //         ['Grapes (bunch)', 1]\r\n        //     ]\r\n        // }]\r\n    }\r\n    return (\r\n        <HighchartsReact\r\n        highcharts={Highcharts}\r\n        options={chartOptions}\r\n        />\r\n    )\r\n}\r\n","import { Paper } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { DonutChart } from '../charts/DonutChart'\r\nimport { useDataLayer } from '../Context'\r\n\r\nexport const AssetStructure = () => {\r\n    const { state } = useDataLayer()\r\n    const { stocks } = state.currentPossesions\r\n    const [readyData, setReadyData] = useState(\"\")\r\n    const getMarketValueByStock = () => {\r\n        let arrByCompany = []\r\n        let totalMarketVal = 0\r\n        console.log(stocks, \"staaacks\")\r\n        stocks.forEach(poss => {\r\n            console.log(state.portfolioHistoryByCompany)\r\n            const stockHistory = state.portfolioHistoryByCompany[poss.ticker]\r\n            console.log(stockHistory, \"hastory\")\r\n            let marketVal;\r\n            if(stockHistory && stockHistory.length > 0){\r\n                const lastRegister = stockHistory[stockHistory.length - 1]\r\n                const lastRegisterClosePrice = lastRegister[1]\r\n                marketVal = lastRegisterClosePrice * poss.amount\r\n                \r\n            }else{\r\n                //here means that this is a new stock, and as we just update daily, the market value will be equal to its cost\r\n                const asset = state.currentPossesions.stocks. find(asset=>asset.ticker === poss.ticker)\r\n                marketVal = asset.amount * asset.unitaryCost\r\n            }\r\n            totalMarketVal += marketVal\r\n                arrByCompany = [...arrByCompany,\r\n                {\r\n                    ticker: poss.ticker,\r\n                    marketVal\r\n                }]\r\n        })\r\n        console.log(arrByCompany, \"elmarketall\")\r\n        return arrByCompany.map(item => {\r\n            item[\"proportion\"] = (item.marketVal / totalMarketVal) * 100\r\n            return item\r\n        })\r\n    }\r\n    \r\n    const prepareData =(data, cb)=>{\r\n        cb(data.map(item=>[item.ticker, item.proportion]))\r\n    }\r\n    useEffect(() => {\r\n        if (stocks.length > 0 && state.areHistoricPricesReady) {\r\n            const data = getMarketValueByStock()\r\n            prepareData(data, (result)=>{\r\n                setReadyData(result)\r\n            })\r\n\r\n        }\r\n    }, [stocks, state.areHistoricPricesReady])\r\n    return (\r\n        <Paper>\r\n       { readyData.length && <DonutChart data={readyData}/>}\r\n    </Paper>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useDataLayer } from '../Context';\r\nimport { convertHumanToUnixInit, convertUnixToHuman, milisencondsInADay } from '../utils/datesUtils';\r\nimport { rounder } from '../utils/numFormatter';\r\nimport { Paper } from '@material-ui/core';\r\n\r\n\r\nexport const PerformanceStructure = ({ available, loading }) => {\r\n    const [dataReady, setDataReady] = useState(\"\")\r\n    const { state, dispatch } = useDataLayer()\r\n    const { companiesChange } = state\r\n    const data1 = useRef([])\r\n    const data2 = useRef([])\r\n\r\n    // useEffect(() => {\r\n\r\n    //     initialData.forEach((item, index) => {\r\n    //         if (index % 5 === 0) {\r\n    //             data1.current = [...data1.current, [item[0], -Math.round(Math.random() * 100)]]\r\n    //             data2.current = [...data2.current, [item[0], -Math.round(Math.random() * 100)]]\r\n    //         } else {\r\n    //             data1.current = [...data1.current, [item[0], Math.round(Math.random() * 100)]]\r\n    //             data2.current = [...data2.current, [item[0], Math.round(Math.random() * 100)]]\r\n    //         }\r\n    //     })\r\n    //     setDataset(true)\r\n    // }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            return\r\n        }\r\n        if (!available) {\r\n            return\r\n        }\r\n        const _dataReady = prepareDataset(companiesChange)\r\n        setDataReady(_dataReady)\r\n\r\n    }, [available])\r\n\r\n\r\n    const prepareDataset = (data) => {\r\n        let readyData = []\r\n        Object.entries(data).forEach(arr => {\r\n            console.log(arr, \"avoora\")\r\n            let ticker = arr[0]\r\n            const data = arr[1].filter(point => Math.abs(point[1]) > 0.1)\r\n            readyData = [...readyData,\r\n            {\r\n                type: \"column\",\r\n                name: ticker,\r\n                data,\r\n                // centerInCategory: true\r\n            }]\r\n        })\r\n        return readyData\r\n    }\r\n\r\n    const chartOptions = {\r\n        chart: {\r\n            type: \"column\",\r\n            alignTicks: false,\r\n        },\r\n\r\n        plotOptions: {\r\n            // column: {\r\n            //     centerInCategory: true,\r\n            // },\r\n            series: {\r\n                dataGrouping: {\r\n                    approximation: \"average\",\r\n                    units: [[\r\n                        'week', // unit name\r\n                        [1] // allowed multiples\r\n                    ], [\r\n                        'month',\r\n                        [1, 2, 3, 4, 6]\r\n                    ]]\r\n                },\r\n            }\r\n        },\r\n        //poner esto crea bugs \r\n        // xAxis: {\r\n        //     categories: dataReady && dataReady.map(item => item.name)\r\n        // },\r\n        series: dataReady\r\n\r\n    }\r\n\r\n    if (loading) {\r\n        return <p>loading...</p>\r\n    }\r\n    return (\r\n        <Paper className=\"performance-chart1\">\r\n\r\n            {!available && <p>Data is not available untill next day after you submited a operation, if you submited in weekend wait till monday</p>}\r\n            {\r\n                dataReady &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={chartOptions}\r\n                    constructorType={\"stockChart\"}\r\n\r\n                />}\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useDataLayer } from '../Context';\r\nimport { convertHumanToUnixInit, convertUnixToHuman, milisencondsInADay } from '../utils/datesUtils';\r\nimport { Paper } from '@material-ui/core';\r\n\r\n\r\nexport const PerformanceStructureB = () => {\r\n    const { state } = useDataLayer()\r\n    const { generatedSeries } = state\r\n    const [chartData, setChartData] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [availableTomorrow, setAvailableTomorrow] = useState(false)\r\n\r\n    const prepareDataset = () => {\r\n        let readyData = {}\r\n        Object.keys(state.companiesImpact.data).forEach(date => {\r\n            state.companiesImpact.data[date].forEach(asset => {\r\n                if (readyData[asset.ticker] === undefined) {\r\n                    readyData = {\r\n                        ...readyData,\r\n                        [asset.ticker]: []\r\n                    }\r\n                }\r\n                const unixDate = convertHumanToUnixInit(date)\r\n                //we are clasifying \"other\" as a ticker/category\r\n                const isThereAndRelevant = state.companiesImpact.data[date].find(item => item.ticker === asset.ticker)\r\n                if (isThereAndRelevant) {\r\n                    readyData[asset.ticker] = [\r\n                        ...readyData[asset.ticker],\r\n                        [unixDate, isThereAndRelevant.performance]\r\n                    ]\r\n                }\r\n\r\n            })\r\n        })\r\n        console.log(readyData, \"ruuudi\")\r\n        if (readyData.other && readyData.other.length > 0) {\r\n            //if sum of all others is less than absolute 0.1 we won't show category other for that date neither\r\n            const relevantOthers = readyData.other.filter(item => Math.abs(item[1]) > 0.1)\r\n            readyData = { ...readyData, relevantOthers }\r\n        }\r\n        return readyData\r\n    }\r\n\r\n    const prepareForChart = (data, cb) => {\r\n        let readySeries = []\r\n        Object.entries(data).forEach(assetData => {\r\n            const ticker = assetData[0]\r\n            const data = assetData[1]\r\n            readySeries = [...readySeries,\r\n            {\r\n                type: \"column\",\r\n                name: ticker,\r\n                data\r\n            }\r\n            ]\r\n        })\r\n        cb(readySeries)\r\n    }\r\n    useEffect(() => {\r\n        console.log(state.companiesImpact, generatedSeries, \"sorios\")\r\n        if (!state.companiesImpact.ready || !generatedSeries.ready) {\r\n            setLoading(true)\r\n            return\r\n        }\r\n        if (!state.companiesImpact.data) {\r\n            setLoading(false)\r\n            setAvailableTomorrow(true)\r\n        }\r\n\r\n        if (state.companiesImpact.data) {\r\n            console.log(state.companiesImpact.data, \"company impct\")\r\n            setLoading(false)\r\n            const data = prepareDataset()\r\n            prepareForChart(data, (result) => {\r\n                setChartData(result)\r\n            })\r\n\r\n        }\r\n    }, [state.companiesImpact, generatedSeries])\r\n\r\n    const chartOptions = {\r\n        chart: {\r\n            type: \"column\",\r\n            alignTicks: false,\r\n        },\r\n\r\n        plotOptions: {\r\n            column: {\r\n                stacking: \"normal\"\r\n                // centerInCategory: true,\r\n            },\r\n            series: {\r\n                dataGrouping: {\r\n                    approximation: \"average\",\r\n                    units: [[\r\n                        'week', // unit name\r\n                        [1] // allowed multiples\r\n                    ], [\r\n                        'month',\r\n                        [1, 2, 3, 4, 6]\r\n                    ]]\r\n                },\r\n            }\r\n        },\r\n        //poner esto crea bugs \r\n        // xAxis: {\r\n        //     categories: dataReady && dataReady.map(item => item.name)\r\n        // },\r\n        series: chartData\r\n    }\r\n    return (\r\n        <Paper>\r\n            {loading && <p>Loading...</p>}\r\n            {availableTomorrow && <p>Data is not available untill next day after you submited a operation, if you submited in weekend wait till monday</p>}\r\n\r\n            { chartData && <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={chartOptions}\r\n                constructorType={\"stockChart\"}\r\n            />}\r\n        </Paper>\r\n    )\r\n}\r\n","import { Button, makeStyles, Menu, MenuItem, withStyles } from '@material-ui/core';\r\nimport React, {useState, useEffect, useRef} from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 0\r\n  }\r\n})\r\n\r\nexport const Sorter = ({ openSorter, setOpenSorter, handleSorting, handleSelected, selected}) => {\r\n  const styles = useStyles()\r\n\r\n  const firstRender = useRef(true)\r\n  useEffect(()=>{\r\n    if(selected && !firstRender.current){\r\n      handleSorting(selected)\r\n    }\r\n    firstRender.current = false\r\n  },[selected])\r\n\r\n  const StyledMenuItem = withStyles({\r\n    root: {\r\n      '&:hover': {\r\n        backgroundColor: 'antiquewhite',\r\n      },\r\n      backgroundColor: \"antiquewhite\"\r\n    },\r\n  })(MenuItem);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={openSorter}\r\n        keepMounted\r\n        open={Boolean(openSorter)}\r\n        onClose={() => { setOpenSorter(null) }}\r\n        disableScrollLock={true}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        classes={{list: styles.root}}\r\n      >\r\n        <StyledMenuItem>Sort By:</StyledMenuItem>\r\n        <MenuItem onClick={() => { handleSelected(\"alphabetical\") }}\r\n        className={selected === \"alphabetical\" ? \"menu-item--selected\": null}\r\n        >Alphabetical</MenuItem>\r\n        <MenuItem onClick={() => { handleSelected(\"Relevance\") }}\r\n        className={selected === \"Relevance\" ? \"menu-item--selected\": null}\r\n        >Relevance</MenuItem>\r\n        <MenuItem onClick={() => { handleSelected(\"change\") }}\r\n        className={selected === \"change\" ? \"menu-item--selected\": null}\r\n        >Change %</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport const SearcherPositions = ({setQuery, query}) => {\r\n\r\n    return (\r\n        <TextField placeholder=\"...\" value={query}\r\n        onChange={(e) => { setQuery(e.target.value) }}\r\n        inputRef={input=>input && input.focus()}\r\n        />\r\n    )\r\n}\r\n","import React, {\r\n  useEffect, useReducer, useRef, useState,\r\n} from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Divider, IconButton, Paper, TextField,\r\n} from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport { formatter } from '../utils/numFormatter';\r\nimport { useDataLayer } from '../Context';\r\nimport { Sorter } from './Sorter';\r\nimport { SearcherPositions } from './SearcherPositions';\r\nimport { CustomCircularProgress } from '../components/components/CustomCircularProgress';\r\n\r\nconst logoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'SET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        logos: action.payload,\r\n        successLogo: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default () => {\r\n  const { state } = useDataLayer();\r\n  const { companiesChange } = state;\r\n  const [readyState, setReadyState] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [{ quotes }, setQuotes] = useState({ quotes: '' });\r\n  const defaultData = useRef(null);\r\n  const [{ logos, error, successLogo }, dispatch] = useReducer(logoReducer, {\r\n    logos: [], loading: false, error: null, successLogo: false,\r\n  });\r\n  const [openSearcher, setOpenSearcher] = useState(false);\r\n  const [openSorter, setOpenSorter] = useState(null);\r\n  useEffect(() => {\r\n    // init requests\r\n    if (state.currentPossesions.stocks.length > 0) {\r\n      console.log('axactua');\r\n      requestAdditionalInfo(state.currentPossesions.stocks);\r\n      const tickars = state.currentPossesions.stocks.map((item) => item.ticker);\r\n      fetchQuotes(tickars);\r\n    }\r\n  }, [state.currentPossesions]);\r\n\r\n  const getCompanyChange = (ticker) => {\r\n    if (!companiesChange) {\r\n      return 0;\r\n    }\r\n    const compChangeArr = companiesChange[ticker];\r\n    if (compChangeArr.length) {\r\n      return compChangeArr[compChangeArr.length - 1][1];\r\n    }\r\n    return 0;\r\n  };\r\n  useEffect(() => {\r\n    console.log(successLogo, quotes, 'quee coja');\r\n\r\n    if (successLogo && quotes) {\r\n      const stocks = [...state.currentPossesions.stocks];\r\n      const stocksWithLogos = stocks.map((asset) => {\r\n        asset.change = getCompanyChange(asset.ticker);\r\n        const theStockLogo = logos.find((stock) => asset.ticker.toUpperCase() === stock.ticker.toUpperCase());\r\n        const { logourl, weburl } = theStockLogo;\r\n        // if logo is missing will come as empty string\r\n\r\n\r\n        asset.name = theStockLogo.company_name;\r\n        if (asset.assetType === \"peopleFund\") {\r\n          console.log(state.portfolioHistoryByCompany, state.areHistoricPricesReady, asset.ticker, \"ka coñu\")\r\n          const fundPrices = state.portfolioHistoryByCompany[asset.ticker]\r\n          console.log(fundPrices, \"odsoidjwo\")\r\n\r\n          const lastPrice = fundPrices.length ? fundPrices[fundPrices.length - 1][1]\r\n            :\r\n            asset.unitaryCost\r\n\r\n          asset.value = lastPrice * asset.amount\r\n        }\r\n        if (asset.assetType === \"stock\") {\r\n          asset.logo = logourl || `https://logo.clearbit.com/${weburl}?size=50`;\r\n          const theStockQuote = quotes.find((stock) => asset.ticker.toUpperCase() === stock.ticker.toUpperCase());\r\n          asset.value = theStockQuote.priceInfo.close * asset.amount;\r\n        }\r\n\r\n        return asset;\r\n      });\r\n      defaultData.current = stocksWithLogos;\r\n      setReadyState(stocksWithLogos);\r\n      setLoading(false);\r\n    }\r\n  }, [successLogo,\r\n    quotes,\r\n    companiesChange]);\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const sortState = (field) => {\r\n    switch (field) {\r\n      case 'alphabetical':\r\n        setReadyState((prev) => prev.sort((a, b) => a - b));\r\n        return;\r\n      case 'Relevance':\r\n        setReadyState((prev) => prev.sort((a, b) => a.value - b.value));\r\n        return;\r\n      case 'change':\r\n        setReadyState((prev) => prev.sort((a, b) => a.change - b.change));\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  const handleSelected = (what) => {\r\n    if (selected === what) {\r\n      setSelected('');\r\n      setOpenSorter(null);\r\n      return;\r\n    }\r\n    setSelected(what);\r\n  };\r\n  const handleSorting = (what) => {\r\n    sortState(what);\r\n    setOpenSorter(null);\r\n  };\r\n\r\n\r\n  const requestAdditionalInfo = (stocks) => {\r\n    setLoading(true);\r\n    dispatch({ type: 'SET_LOADING' });\r\n    fetch('http://localhost:8001/api/v1/recurringTasks/companiesInfo/companies_url', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({ positions: stocks }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => { dispatch({ type: 'SET_SUCCESS', payload: res }); })\r\n      .catch((err) => { dispatch({ type: 'SET_ERROR', payload: err.message }); });\r\n  };\r\n\r\n  const fetchQuotes = (tickers) => {\r\n    fetch('http://localhost:8001/api/v1/recurringTasks/companiesInfo/quotes', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({ tickers }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res, 'ruuus');\r\n        setQuotes((prev) => ({ ...prev, quotes: res[0] }));\r\n      });\r\n  };\r\n  const [query, setQuery] = useState('');\r\n  useEffect(() => {\r\n    if (readyState) {\r\n      const updatedList = defaultData.current.filter((item) => item.name.toLowerCase().includes(query.toLowerCase()) || item.ticker.toLowerCase().includes(query.toLowerCase()));\r\n      setReadyState(updatedList);\r\n    }\r\n  }, [query]);\r\n  const handleOpenSearcher = () => {\r\n    setOpenSorter(null);\r\n    setOpenSearcher(true);\r\n  };\r\n  const handleOpenSorter = (e) => {\r\n    setOpenSearcher(false);\r\n    setOpenSorter(e.currentTarget);\r\n  };\r\n  return (\r\n    <Paper className=\"positions\">\r\n      {loading\r\n        ? <CustomCircularProgress />\r\n        : <>\r\n          <header>\r\n            <h3>My Assets</h3>\r\n            <div className=\"header-actions\">\r\n              {openSearcher\r\n                && <SearcherPositions {...{ query, setQuery }} />}\r\n              {openSorter\r\n                && <Sorter {...{\r\n                  openSorter, setOpenSorter, setReadyState, handleSorting, handleSelected, selected,\r\n                }} />}\r\n              <IconButton\r\n                onClick={handleOpenSearcher}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={handleOpenSorter}\r\n              >\r\n                <SortByAlphaIcon />\r\n              </IconButton>\r\n            </div>\r\n          </header>\r\n          {/* <ul>\r\n                {logos.map(item => <li>\r\n                    {item.logo}\r\n                </li>)}\r\n            </ul> */}\r\n          <div className=\"positions-body\">\r\n            <ul>\r\n              {readyState && readyState.map((asset) =>\r\n                <StockItem {...{ asset }} />\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </>}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StockItem = ({ asset }) => {\r\n  return (\r\n    <li\r\n      key={asset.ticker}\r\n    >\r\n      <Divider style={{ backgroundColor: 'white' }} />\r\n      {asset.assetType === \"stock\" ? <img className=\"logo\" src={asset.logo} alt={`${asset.ticker}-logo`} />\r\n        :\r\n        <ImageFund\r\n          fundId={asset.fundId}\r\n        />\r\n      }\r\n      <div className=\"additional-wrap\">\r\n        <p className=\"field-2\">\r\n          <h5>{asset.ticker} ({asset.name})</h5>\r\n          <p>Qty: {asset.amount}</p>\r\n        </p>\r\n        <p className=\"field-3\">\r\n          <p>{formatter.format(asset.value)}</p>\r\n          <p>{asset.change}%</p>\r\n        </p>\r\n      </div>\r\n    </li>\r\n\r\n  )\r\n}\r\n\r\nconst ImageFund = ({ fundId }) => {\r\n  const [imageUrl, setImageUrl] = useState(null)\r\n  useEffect(() => {\r\n    const getImageUrl = async (fundid) => {\r\n      const reqe = await fetch(`http://localhost:8001/api/v1/people/image/${fundid}`)\r\n      const kaka = await reqe.json()\r\n      console.log(\"hooola gay\")\r\n      console.log(kaka, \"funndi\")\r\n      return kaka\r\n    }\r\n    if (fundId) {\r\n      getImageUrl(fundId)\r\n        .then(image => {\r\n          console.log(image, \"wiejoiwh\")\r\n          if (image) {\r\n            setImageUrl(image)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          throw err\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  return imageUrl && <img\r\n    className=\"logo\"\r\n    src={\"http://localhost:8001/\" + imageUrl}\r\n  />\r\n}","import {\r\n  Button, Dialog, DialogActions, DialogContentText, DialogTitle, Grow, IconButton, makeStyles, Paper, Tooltip,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types';\r\nimport { useDataLayer } from '../Context';\r\n// import { useEngine } from '../portfolio/Engine'\r\nimport { PortfolioPriceChart } from '../portfolio/PortfolioPriceChart';\r\nimport { useCompaniesChange } from '../portfolio/useCompaniesChange';\r\nimport { useUserLayer } from '../UserContext';\r\nimport { AssetStructure } from './AssetStructure';\r\nimport { LateralSection } from './LateralSection';\r\nimport { Marcador2 } from './Marcador2';\r\nimport { PerformanceStructure } from './PerformanceStructure';\r\nimport { PerformanceStructureB } from './PerformanceStructureB';\r\nimport Positions from './Positions';\r\nimport { usePortfolioGenerator } from \"../portfolio/portfolioGenerator2\";\r\n\r\nconst netReturnHelper = \"this is the net return calculated from daily close prices\";\r\nconst byCompany = \"this shows the daily return for each individual asset over the time\";\r\nconst weigthed = \"this shows the real impact of every indivual asset on the daily net return of the investment portfolio as a whole\";\r\n\r\nexport const Middleware = (props) => {\r\n  usePortfolioGenerator();\r\n  const { state } = useDataLayer();\r\n  const { portfolioSeriesReady, stockLibrary } = state;\r\n  const { userState } = useUserLayer();\r\n\r\n  // we need to check that potfolio history is not empty before render userMain\r\n  // and we need to check we have all posesion's historical prices\r\n\r\n  const { available, loading } = useCompaniesChange();\r\n  console.log(state.stockLibrary, \"stokklibrai\");\r\n  if (!userState.isAuthenticated) {\r\n    return <Redirect to={{\r\n      pathname: \"/login\",\r\n      search: \"?redirect=portfolio\",\r\n    }} />;\r\n  }\r\n  if (!state.areHistoricPricesReady) {\r\n    return <p>Initializing...</p>\r\n  }\r\n  if (!state.stockLibrary.length) {\r\n    return <NoUnitsDialog />;\r\n  }\r\n  return (\r\n    // tenemos que crear un useEngine para generar el portfolioHistory\r\n\r\n    <main className=\"dasboard-grid--desktop\">\r\n      <div className=\"principal\">\r\n\r\n        {/* <div>\r\n                {posessionsReady ?\r\n                    <Component /> : <div>loading...</div>}\r\n                </div> */}\r\n        <div className=\"\">\r\n\r\n          <HeaderChart title=\"Net Return\" helperText={netReturnHelper} />\r\n          {portfolioSeriesReady\r\n            ? <PortfolioPriceChart datos={state.portfolioSeries}\r\n            // quotes={quotes}\r\n            />\r\n            : <p>Loading...</p>\r\n\r\n          }\r\n        </div>\r\n        <div>\r\n          <HeaderChart title=\"Net Return by asset\" helperText={byCompany} />\r\n          <PerformanceStructure {...{ available, loading }} />\r\n        </div>\r\n        <div>\r\n          <HeaderChart title=\"Weighted net return by asset\" helperText={weigthed} />\r\n          <PerformanceStructureB />\r\n        </div>\r\n      </div>\r\n      <div className=\"secondary\">\r\n        <StyledContainer>\r\n\r\n          <Positions />\r\n        </StyledContainer>\r\n        <div>\r\n          <HeaderChart title=\"Portfolio Structure\" helperText={weigthed} />\r\n          <AssetStructure />\r\n        </div>\r\n      </div>\r\n    </main>\r\n\r\n  );\r\n};\r\n\r\nconst TansitionGrow = React.forwardRef((props, ref) => (\r\n  <Grow ref={ref} {...props} />\r\n));\r\n\r\nconst NoUnitsDialog = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push(\"/\");\r\n  };\r\n  return <Dialog\r\n    TransitionComponent={TansitionGrow}\r\n    open={open}\r\n    onClose={handleClose}\r\n  >\r\n    <DialogTitle>Don't have any stock yet</DialogTitle>\r\n    <DialogContentText>\r\n      Start adding stocks to be able to see performance metrics\r\n            </DialogContentText>\r\n    <DialogActions>\r\n      <Button\r\n        onClick={handleClose}\r\n      >\r\n        Ok\r\n                </Button>\r\n    </DialogActions>\r\n  </Dialog >;\r\n};\r\n\r\nconst StyledContainer = styled.div({\r\n  height: \"400px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n});\r\n\r\nconst StyledHeader = styled.div({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n});\r\nconst HeaderChart = ({ title, helperText }) => (\r\n  <StyledHeader className=\"chart-header\">\r\n    <h3>{title}</h3>\r\n    <Tooltip title={helperText} enterDelay={500} leaveDelay={200}>\r\n      <IconButton size=\"small\">\r\n        <HelpIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </Tooltip>\r\n  </StyledHeader>\r\n);\r\n\r\nHeaderChart.propsTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  helperText: PropTypes.string,\r\n};\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDataLayer } from './Context'\r\nimport { userActivity } from './portfolio/logicPruebasConAdd'\r\n\r\nexport const useTemporaryPossesions = () => {\r\n    const { state, dispatch } = useDataLayer()\r\n    const length = useRef(0)\r\n    const iteration = useRef(0)\r\n    useEffect(() => {\r\n        if (state.userActivity.length > 0) {\r\n            length.current = state.userActivity.length\r\n            userActivity.forEach((op, index, arr) => {\r\n                console.log(index, \"opixxo\")\r\n                dispatch({\r\n                    type: \"ADD_PORTFOLIO_CURRENT_POSSESIONS\",\r\n                    payload: {\r\n                        ticker: op.details.ticker,\r\n                        amount: op.details.amount,\r\n                        operationType: op.operationType,\r\n                        cashNetOperation: 0\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type: \"ADD_UNIQUE_STOCKS\",\r\n                    payload: {\r\n                        ticker: op.details.ticker,\r\n                    }\r\n                })\r\n                index + 1 === arr.length && dispatch({ type: \"ENABLE\" })\r\n\r\n            })\r\n        }\r\n    }, [state.userActivity])\r\n\r\n    // useEffect(() => {\r\n    //     iteration.current += 1\r\n    //     console.log(\"botonto\")\r\n    //     console.log(iteration.current, length.current, \"zorrona\")\r\n    //     if (iteration.current === 2) {\r\n    //         dispatch({ type: \"ENABLE\" })\r\n    //     }\r\n    // }, [state.currentPossesions])\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { KeymetricsChart } from '../../charts/KeymetricsChart';\r\nimport { useUILayer } from '../../ContextUI';\r\nimport { useMountApproval } from '../../utils/useMountApproval';\r\nimport { CovidSection2 } from '../covid/CovidSection2';\r\nimport { News } from '../principal/elements/News';\r\nimport { CompanySection } from './CompanySection';\r\nimport { Financials } from './Financials';\r\n\r\n\r\nexport const ControllerCompany = () => {\r\n\r\n    const { path } = useRouteMatch()\r\n    useMountApproval()\r\n    \r\n    \r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={`${path}/overview/:company`} exact>\r\n                <CompanySection />\r\n            </Route>\r\n            <Route path={`${path}/keymetrics/:company`} exact>\r\n                <KeymetricsChart />\r\n            </Route>\r\n            <Route path={`${path}/financials/:company`} exact>\r\n                <Financials />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useUILayer } from '../ContextUI'\r\n\r\nexport const useMountApproval = () => {\r\n    const { setMountApproval } = useUILayer()\r\n    useEffect(() => {\r\n        setMountApproval(false)\r\n\r\n    }, [])\r\n\r\n}\r\n","import React from 'react'\r\nimport { Transition } from 'react-transition-group'\r\nimport { useUILayer } from '../ContextUI'\r\n\r\nexport const Overlay = () => {\r\n    const { showOverlay } = useUILayer();\r\n    const defaultStyles = {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        backgroundColor: \"rgba(0,0,0,0.7)\",\r\n        transition: \"opacity 0.2s ease\",\r\n        zIndex: 4\r\n    };\r\n    const transitionStyles = {\r\n        entering: { opacity: 0 },\r\n        entered: { opacity: 1 },\r\n        exiting: { opacity: 1 },\r\n        exited: { opacity: 0 }\r\n    };\r\n    return (\r\n \r\n            <Transition\r\n                in={showOverlay}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={300}\r\n            >\r\n                {(state) => (\r\n                    <div\r\n                        style={{\r\n                            ...defaultStyles,\r\n                            ...transitionStyles[state]\r\n                        }}\r\n                    />\r\n                )}\r\n            </Transition>\r\n     \r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react'\r\nimport Highcharts, { chart } from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useChartReflow } from '../utils/useChartReflow';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useDataLayer } from '../Context';\r\nimport { convertUnixToHuman } from '../utils/datesUtils';\r\n\r\nHighcharts.setOptions({\r\n    global: {\r\n        useUTC: false\r\n    }\r\n});\r\n\r\n//tenemos que usar otra grafica para la vista details de este grafico para solucionar setCurrentPerformance errror\r\n\r\nexport const PortfolioChartPeople = ({ datos, title, setCurrentPerformance = () => null }) => {\r\n\r\n    const chart = useRef(null)\r\n    //useChartReflow(chart.current)\r\n    const { state: { addFirstSerie } } = useDataLayer()\r\n    const [dataset, setDataset] = useState(\"\")\r\n\r\n\r\n    //la fecha de la grafica siempre es un dia menos respecto a las generatedseries\r\n\r\n    const prepareData = () => {\r\n        let cleanData = [];\r\n        let firstDate\r\n        Object.keys(datos).forEach((date, index) => {\r\n            console.log(date, \"duuta\")\r\n            const actualDate = date.split(\"-\").map((val) => parseInt(val));\r\n            const formatedDate = new Date(\r\n                actualDate[0],\r\n                actualDate[1] - 1,\r\n                actualDate[2]\r\n            );\r\n            const unixTime = formatedDate.getTime();\r\n            if (!index) {\r\n                firstDate = unixTime - 1\r\n            }\r\n            cleanData.push({ ...datos[date], date: unixTime })\r\n        })\r\n        let readyData = cleanData.map(item => ([item.date, Math.floor(item.liquidativeValue)]))\r\n        readyData = [[firstDate, 1000], ...readyData]\r\n        getCurrentPerformance(readyData, result => {\r\n            setCurrentPerformance(result)\r\n        })\r\n        //prepend first point in 1000pts in firstDate \r\n        if (addFirstSerie) {\r\n\r\n        }\r\n        setDataset(readyData)\r\n    }\r\n\r\n    const getCurrentPerformance = (data, cb) => {\r\n        const lastLiquidative = data[data.length - 1][1]\r\n        cb((lastLiquidative - 1000) / 1000 * 100)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (datos) {\r\n\r\n            prepareData(datos)\r\n\r\n        }\r\n    }, [datos])\r\n\r\n    const options = {\r\n        id: \"people-overview-stockchart\",\r\n        chart: {\r\n            type: \"areaspline\",\r\n            //zoomType: \"x\",\r\n            events: {\r\n                selection: function (e) {\r\n                    e && console.log(e);\r\n                },\r\n                load: function (e) {\r\n                    chart.current = this\r\n                }\r\n            },\r\n\r\n            animation: false,\r\n            margin: [0, 0, 0, 0],\r\n            //height: '100%',\r\n            spacing: [0, 0, 0, 0],\r\n            borderWidth: 0,\r\n            crisp: false,\r\n        },\r\n        title: {\r\n            text: \"\"\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: ''\r\n            },\r\n            lineWidth: 0,\r\n            gridLineWidth: 0,\r\n            lineColor: 'transparent',\r\n            minorTickLength: 0,\r\n            tickLength: 0,\r\n            labels: {\r\n                enabled: false\r\n            },\r\n            minPadding: 0,\r\n            maxPadding: 0\r\n            // endOnTick: false,\r\n            // startOnTick: false,\r\n            // visible: false\r\n        },\r\n        xAxis: {\r\n\r\n            crosshair: false, //hover effect of column\r\n            lineWidth: 0, //removes axis line\r\n            gridLineWidth: 0, //removes charts background line\r\n            lineColor: 'transparent',\r\n            minorTickLength: 0, //removes minor axis ticks \r\n            tickLength: 0, //removes  axis ticks \r\n\r\n            labels: {\r\n                enabled: false\r\n            },\r\n            //this remove little padding between highhcarts container and chart\r\n            minPadding: 0,\r\n            maxPadding: 0\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                pointPadding: 0.2,\r\n                borderWidth: 0\r\n            },\r\n            series: {\r\n                animation: false,\r\n                marker: {\r\n                    enabled: false,\r\n                    states: {\r\n                        hover: {\r\n                            enabled: false\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        rangeSelector: {\r\n            enabled: false\r\n        },\r\n        navigator: {\r\n            enabled: false\r\n        },\r\n        scrollbar: {\r\n            enabled: false\r\n        },\r\n\r\n\r\n        tooltip: {\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n\r\n        series: [\r\n            {\r\n                data: dataset,\r\n                // dataGrouping: {\r\n                //     units: [\r\n                //         [\"day\", [1, 2, 3, 4, 5, 8, 16]],\r\n                //         [\"week\", [1, 2, 3, 4]],\r\n                //         [\"month\", [1, 2, 3, 4, 6]],\r\n                //     ],\r\n                //     smoothed: true,\r\n                // },\r\n\r\n                color: {\r\n                    linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },\r\n                    stops: [\r\n                        [0, '#FF0080'],\r\n                        [1, '#FFFFFF']\r\n                    ]\r\n                }\r\n            },\r\n        ],\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                dataset &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                    constructorType={\"chart\"}\r\n                    containerProps={{ class: \"people-overview-stockchart\" }}\r\n                />}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDataLayer } from '../Context'\r\nimport { convertHumanToUnixInit } from '../utils/datesUtils'\r\nimport { rounder } from '../utils/numFormatter'\r\n\r\nexport const useCompaniesChangePersona = ({ generatedSeries, portfolioHistory, currentPossesions }) => {\r\n\r\n    // const { state: { generatedSeries, portfolioHistory, areHistoricPricesReady, currentPossesions }, dispatch } = useDataLayer()\r\n    const [{ available, loading }, setAvailability] = useState({ available: false, loading: true })\r\n    const [companiesChange, setCompaniesChange] = useState(\"\")\r\n\r\n\r\n    const generateSeries = () => {\r\n        let result = {}\r\n        //inicialize our object with ticker keys as empty arr\r\n        currentPossesions.forEach(({ ticker }) => {\r\n            result = {\r\n                ...result,\r\n                [ticker]: []\r\n            }\r\n        })\r\n        let change = 0\r\n        //aqui deberiamos cojer solo las que tienen mayor % peso\r\n        //ojo al generatedSeries que puede que no se haya creao aun\r\n\r\n\r\n        Object.keys(generatedSeries.dates).forEach(date => {\r\n\r\n            //**si es indefinido, y es el primer día, close será la quote y prevDayPrice será el coste (en generatedSeries)\r\n            if (portfolioHistory[date] !== undefined) {\r\n                //si es indefinido usamos la quote\r\n                let unixDate = convertHumanToUnixInit(date)\r\n                Object.keys(portfolioHistory[date]).forEach(ticker => {\r\n                    const wasInPort = generatedSeries.dates[date].positions.find(item => ticker === item.ticker)\r\n                    if (wasInPort) {\r\n                        console.log(wasInPort, \"wasInport\")\r\n                        const { close } = portfolioHistory[date][ticker]\r\n                        const prevDayPrice = result[ticker] && result[ticker].length > 0 && result[ticker][result[ticker].length - 1][2]\r\n                        if (prevDayPrice) {\r\n                            //mira aqui\r\n                            change = (close - prevDayPrice) * 100 / prevDayPrice\r\n                        } else {\r\n                            console.log(close, \"clooose\")\r\n\r\n                            change = (close - wasInPort.unitaryCost) * 100 / wasInPort.unitaryCost\r\n                        }\r\n                        result = {\r\n                            ...result,\r\n                            [ticker]:\r\n                                [\r\n                                    ...result[ticker],\r\n                                    [unixDate, rounder(change), close]\r\n                                ]\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        console.log(result, \"compachnage\")\r\n        return result\r\n    }\r\n\r\n    // const simulateSeries = () => {\r\n    //     console.log(\"ejecutiio\")\r\n    //     let result = {}\r\n    //     //we just need one date to draw one point, unlike portfolioChart\r\n    //     const now = Date.now()\r\n    //     //inicialize our object with ticker keys as empty arr\r\n    //     currentPossesions.stocks.forEach(({ ticker }) => {\r\n    //         result = {\r\n    //             ...result,\r\n    //             [ticker]: []\r\n    //         }\r\n    //     })\r\n    //     currentPossesions.stocks.forEach((asset) => {\r\n    //         const stock = simulation.quotes.find(item => item.ticker === asset.ticker)\r\n    //         const priceRightNow = stock.priceInfo.adjClose\r\n    //         const priceInitialMoment = asset.unitaryCost\r\n    //         console.log(asset.ticker, priceRightNow, priceInitialMoment, \"chan\")\r\n    //         const change = ((priceRightNow - priceInitialMoment) / priceInitialMoment) * 100\r\n    //         console.log(\"chang\", change)\r\n    //         result = {\r\n    //             ...result,\r\n    //             [asset.ticker]:\r\n    //                 [\r\n    //                     ...result[asset.ticker],\r\n    //                     [now, rounder(change)]\r\n    //                 ]\r\n    //         }\r\n    //     })\r\n    //     return result\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     if (addFirstSerie && simulation.quotes) {\r\n    //         const simulatedDataset = simulateSeries()\r\n    //         dispatch({ type: \"STORE_COMPANIES_CHANGE\", payload: simulatedDataset })\r\n    //         setAvailability({ loading: false, available: true })\r\n    //         return\r\n    //     }\r\n\r\n    // }, [areHistoricPricesReady, generatedSeries, simulation])\r\n\r\n    useEffect(() => {\r\n        // if (addFirstSerie) {\r\n        //     //if it's true, we anulate this useEffect to use the above one\r\n        //     return\r\n        // }\r\n\r\n        // //if it's weekend\r\n        // if (!Object.keys(portfolioHistory).length) {\r\n        //     setAvailability({ loading: false, available: false })\r\n        //     return\r\n        // }\r\n        //default case\r\n\r\n        const dataset = generateSeries()\r\n        setCompaniesChange(dataset)\r\n       // dispatch({ type: \"STORE_COMPANIES_CHANGE\", payload: dataset })\r\n        setAvailability({ loading: false, available: true })\r\n\r\n\r\n    }, [])\r\n    return { companiesChange }\r\n}\r\n\r\n","import React, { useState, useEffect, useReducer, useRef } from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { Divider, IconButton, Paper, TextField } from '@material-ui/core'\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport { Sorter } from '../../dashboard/Sorter'\r\nimport { SearcherPositions } from '../../dashboard/SearcherPositions';\r\nimport { CustomCircularProgress } from '../../components/components/CustomCircularProgress';\r\nimport { formatter } from '../../utils/numFormatter';\r\n\r\nconst logoReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case \"SET_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                logos: action.payload,\r\n                successLogo: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const PositionsPersonas = ({ currentPossesions, companiesChange }) => {\r\n\r\n    const [readyState, setReadyState] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [{ quotes }, setQuotes] = useState({ quotes: \"\" })\r\n    const defaultData = useRef(null)\r\n    const [{ logos, error, successLogo }, dispatch] = useReducer(logoReducer, { logos: [], loading: false, error: null, successLogo: false })\r\n    const [openSearcher, setOpenSearcher] = useState(false)\r\n    const [openSorter, setOpenSorter] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        //init requests\r\n\r\n        if (currentPossesions.length > 0) {\r\n            console.log(\"axactua\")\r\n            requestAdditionalInfo(currentPossesions)\r\n            const tickars = currentPossesions.map(item => item.ticker)\r\n            fetchQuotes(tickars)\r\n        }\r\n    }, [currentPossesions])\r\n\r\n    const getCompanyChange = (ticker) => {\r\n        if (!companiesChange) {\r\n            return 0\r\n        }\r\n        const compChangeArr = companiesChange[ticker]\r\n        if (compChangeArr.length) {\r\n            return compChangeArr[compChangeArr.length - 1][1]\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log(successLogo, quotes, \"quee coja\")\r\n\r\n        if (successLogo && quotes) {\r\n            const stocks = [...currentPossesions]\r\n            const stocksWithLogos = stocks.map(asset => {\r\n\r\n                asset[\"change\"] = getCompanyChange(asset.ticker)\r\n                const theStockLogo = logos.find(stock => asset.ticker.toUpperCase() === stock.ticker.toUpperCase())\r\n                const { logourl, weburl } = theStockLogo\r\n                //if logo is missing will come as empty string\r\n                asset[\"logo\"] = logourl ?\r\n                    logourl : `https://logo.clearbit.com/${weburl}?size=50`\r\n\r\n                asset[\"name\"] = theStockLogo[\"company_name\"]\r\n                const theStockQuote = quotes.find(stock => asset.ticker.toUpperCase() === stock.ticker.toUpperCase())\r\n                asset[\"value\"] = theStockQuote.priceInfo.close * asset.amount\r\n                return asset\r\n            })\r\n            defaultData.current = stocksWithLogos\r\n            setReadyState(stocksWithLogos)\r\n            setLoading(false)\r\n        }\r\n    }, [successLogo, quotes, companiesChange])\r\n\r\n    const [selected, setSelected] = useState(\"\")\r\n\r\n    const sortState = (field) => {\r\n        switch (field) {\r\n            case \"alphabetical\":\r\n                setReadyState(prev => prev.sort((a, b) => a - b))\r\n                return\r\n            case \"Relevance\":\r\n                setReadyState(prev => prev.sort((a, b) => a.value - b.value))\r\n                return\r\n            case \"change\":\r\n                setReadyState(prev => prev.sort((a, b) => a.change - b.change))\r\n                return\r\n            default:\r\n                return\r\n        };\r\n    }\r\n    const handleSelected = (what) => {\r\n        if (selected === what) {\r\n            setSelected(\"\")\r\n            setOpenSorter(null);\r\n            return\r\n        }\r\n        setSelected(what)\r\n    }\r\n    const handleSorting = (what) => {\r\n        sortState(what)\r\n        setOpenSorter(null);\r\n    }\r\n\r\n    const backToInitial = () => {\r\n        setReadyState(defaultData.current)\r\n    }\r\n\r\n    const requestAdditionalInfo = (stocks) => {\r\n        setLoading(true)\r\n        dispatch({ type: \"SET_LOADING\" })\r\n        fetch(\"http://localhost:8001/api/v1/recurringTasks/companiesInfo/companies_url\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ positions: stocks })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => { dispatch({ type: \"SET_SUCCESS\", payload: res }) })\r\n            .catch(err => { dispatch({ type: \"SET_ERROR\", payload: err.message }) })\r\n    }\r\n\r\n\r\n    const fetchQuotes = (tickers) => {\r\n        fetch(\"http://localhost:8001/api/v1/recurringTasks/companiesInfo/quotes\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ tickers })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res, \"ruuus\")\r\n                setQuotes(prev => ({ ...prev, quotes: res[0] }))\r\n            })\r\n    }\r\n    const [query, setQuery] = useState(\"\")\r\n    useEffect(() => {\r\n        if (readyState) {\r\n            const updatedList = defaultData.current.filter(item => item.name.toLowerCase().includes(query.toLowerCase()) || item.ticker.toLowerCase().includes(query.toLowerCase()))\r\n            setReadyState(updatedList)\r\n        }\r\n    }, [query])\r\n    const handleOpenSearcher = () => {\r\n        setOpenSorter(null)\r\n        setOpenSearcher(true)\r\n    }\r\n    const handleOpenSorter = (e) => {\r\n        setOpenSearcher(false)\r\n        setOpenSorter(e.currentTarget)\r\n    }\r\n    return (\r\n        <Paper className=\"positions\">\r\n            {loading ?\r\n                <CustomCircularProgress />\r\n                :\r\n                <>\r\n                    <header>\r\n                        <h3>My Assets</h3>\r\n                        <div className=\"header-actions\">\r\n                            {openSearcher &&\r\n                                <SearcherPositions {...{ query, setQuery }} />\r\n                            }\r\n                            {openSorter &&\r\n                                <Sorter {...{ openSorter, setOpenSorter, setReadyState, handleSorting, handleSelected, selected }} />\r\n                            }\r\n                            <IconButton\r\n                                onClick={handleOpenSearcher}\r\n                            >\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={handleOpenSorter}\r\n                            >\r\n                                <SortByAlphaIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </header>\r\n                    {/* <ul>\r\n                {logos.map(item => <li>\r\n                    {item.logo}\r\n                </li>)}\r\n            </ul> */}\r\n                    <div className=\"positions-body\">\r\n                        <ul>\r\n                            {readyState && readyState.map(item =>\r\n                                <li\r\n                                    key={item.name}\r\n                                >\r\n                                    <Divider />\r\n\r\n                                    <img className=\"logo\" src={item.logo} alt={`${item.ticker}-logo`} />\r\n                                    <div className=\"additional-wrap\">\r\n                                        <p className=\"field-2\">\r\n                                            <h5>{item.ticker} ({item.name})</h5>\r\n                                            <p>Qty: {item.amount}</p>\r\n                                        </p>\r\n                                        <p className=\"field-3\">\r\n                                            <p>{formatter.format(item.value)}</p>\r\n                                            <p>{item.change}%</p>\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </>}\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { Paper } from '@material-ui/core';\r\nimport { CustomCircularProgress } from '../../components/components/CustomCircularProgress';\r\n\r\n\r\nexport const PerformanceStructurePeople = ({ companiesChange, available = true }) => {\r\n    const [dataReady, setDataReady] = useState(\"\")\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    // useEffect(() => {\r\n\r\n    //     initialData.forEach((item, index) => {\r\n    //         if (index % 5 === 0) {\r\n    //             data1.current = [...data1.current, [item[0], -Math.round(Math.random() * 100)]]\r\n    //             data2.current = [...data2.current, [item[0], -Math.round(Math.random() * 100)]]\r\n    //         } else {\r\n    //             data1.current = [...data1.current, [item[0], Math.round(Math.random() * 100)]]\r\n    //             data2.current = [...data2.current, [item[0], Math.round(Math.random() * 100)]]\r\n    //         }\r\n    //     })\r\n    //     setDataset(true)\r\n    // }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (companiesChange) {\r\n            setLoading(false)\r\n        }\r\n        const _dataReady = prepareDataset(companiesChange)\r\n        setDataReady(_dataReady)\r\n\r\n    }, [companiesChange])\r\n\r\n\r\n    const prepareDataset = (data) => {\r\n        console.log(data, \"dutitu\")\r\n        let readyData = []\r\n        Object.entries(data).forEach(arr => {\r\n            console.log(arr, \"avoora\")\r\n            let ticker = arr[0]\r\n            const data = arr[1].filter(point => Math.abs(point[1]) > 0.1)\r\n            readyData = [...readyData,\r\n            {\r\n                type: \"column\",\r\n                name: ticker,\r\n                data,\r\n                // centerInCategory: true\r\n            }]\r\n        })\r\n        return readyData\r\n    }\r\n\r\n    const chartOptions = {\r\n        chart: {\r\n            type: \"column\",\r\n            alignTicks: false,\r\n        },\r\n\r\n        // rangeSelector: {\r\n        //     selected: 1\r\n        // },\r\n\r\n        title: {\r\n            text: 'AAPL Stock Volume'\r\n        },\r\n        plotOptions: {\r\n            // column: {\r\n            //     centerInCategory: true,\r\n            // },\r\n            series: {\r\n                dataGrouping: {\r\n                    approximation: \"average\",\r\n                    units: [[\r\n                        'week', // unit name\r\n                        [1] // allowed multiples\r\n                    ], [\r\n                        'month',\r\n                        [1, 2, 3, 4, 6]\r\n                    ]]\r\n                },\r\n            }\r\n        },\r\n        //poner esto crea bugs \r\n        // xAxis: {\r\n        //     categories: dataReady && dataReady.map(item => item.name)\r\n        // },\r\n        series: dataReady\r\n\r\n    }\r\n\r\n    if (loading) {\r\n        return <p>loading...</p>\r\n    }\r\n    return (\r\n        <Paper className=\"performance-chart1\">\r\n\r\n            {!available && <p>Data is not available untill next day after you submited a operation, if you submited in weekend wait till monday</p>}\r\n            {!companiesChange && <CustomCircularProgress />}\r\n            {\r\n                dataReady &&\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={chartOptions}\r\n                    constructorType={\"stockChart\"}\r\n\r\n                />}\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { Paper } from '@material-ui/core';\r\nimport { convertHumanToUnixInit } from '../../utils/datesUtils';\r\n\r\n\r\nexport const PerformanceStructureBPersonas = ({ companiesImpact }) => {\r\n    const [chartData, setChartData] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    //const [availableTomorrow, setAvailableTomorrow] = useState(false)\r\n\r\n    const prepareDataset = () => {\r\n        let readyData = {}\r\n        Object.keys(companiesImpact).forEach(date => {\r\n            companiesImpact[date].forEach(asset => {\r\n                if (readyData[asset.ticker] === undefined) {\r\n                    readyData = {\r\n                        ...readyData,\r\n                        [asset.ticker]: []\r\n                    }\r\n                }\r\n                const unixDate = convertHumanToUnixInit(date)\r\n                //we are clasifying \"other\" as a ticker/category\r\n                const isThereAndRelevant = companiesImpact[date].find(item => item.ticker === asset.ticker)\r\n                if (isThereAndRelevant) {\r\n                    readyData[asset.ticker] = [\r\n                        ...readyData[asset.ticker],\r\n                        [unixDate, isThereAndRelevant.performance]\r\n                    ]\r\n                }\r\n\r\n            })\r\n        })\r\n        console.log(readyData, \"ruuudi\")\r\n        if (readyData.other && readyData.other.length > 0) {\r\n            //if sum of all others is less than absolute 0.1 we won't show category other for that date neither\r\n            const relevantOthers = readyData.other.filter(item => Math.abs(item[1]) > 0.1)\r\n            readyData = { ...readyData, relevantOthers }\r\n        }\r\n        return readyData\r\n    }\r\n\r\n    const prepareForChart = (data, cb) => {\r\n        let readySeries = []\r\n        Object.entries(data).forEach(assetData => {\r\n            const ticker = assetData[0]\r\n            const data = assetData[1]\r\n            readySeries = [...readySeries,\r\n            {\r\n                type: \"column\",\r\n                name: ticker,\r\n                data\r\n            }\r\n            ]\r\n        })\r\n        cb(readySeries)\r\n    }\r\n    useEffect(() => {\r\n        // console.log(companiesImpact, generatedSeries, \"sorios\")\r\n        // if (!companiesImpact.ready || !generatedSeries.ready) {\r\n        //     setLoading(true)\r\n        //     return\r\n        // }\r\n        // if (!companiesImpact.data) {\r\n        //     setLoading(false)\r\n        //     setAvailableTomorrow(true)\r\n        // }\r\n\r\n\r\n        setLoading(false)\r\n        const data = prepareDataset()\r\n        prepareForChart(data, (result) => {\r\n            setChartData(result)\r\n        })\r\n\r\n    }, [])\r\n\r\n    const chartOptions = {\r\n        chart: {\r\n            type: \"column\",\r\n            alignTicks: false,\r\n        },\r\n\r\n        // rangeSelector: {\r\n        //     selected: 1\r\n        // },\r\n\r\n        title: {\r\n            text: 'AAPL Stock Volume'\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                stacking: \"normal\"\r\n                // centerInCategory: true,\r\n            },\r\n            series: {\r\n                dataGrouping: {\r\n                    approximation: \"average\",\r\n                    units: [[\r\n                        'week', // unit name\r\n                        [1] // allowed multiples\r\n                    ], [\r\n                        'month',\r\n                        [1, 2, 3, 4, 6]\r\n                    ]]\r\n                },\r\n            }\r\n        },\r\n        //poner esto crea bugs \r\n        // xAxis: {\r\n        //     categories: dataReady && dataReady.map(item => item.name)\r\n        // },\r\n        series: chartData\r\n    }\r\n    return (\r\n        <Paper>\r\n            {loading && <p>Loading...</p>}\r\n            {/* {availableTomorrow && <p>Data is not available untill next day after you submited a operation, if you submited in weekend wait till monday</p>} */}\r\n\r\n            { chartData && <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={chartOptions}\r\n                constructorType={\"stockChart\"}\r\n            />}\r\n        </Paper>\r\n    )\r\n}\r\n","import { Paper } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { DonutChart } from '../../charts/DonutChart'\r\n\r\n\r\n\r\nexport const AssetStructurePeople = ({ portfolioHistory, currentPossesions }) => {\r\n\r\n    const [readyData, setReadyData] = useState(\"\")\r\n    const getMarketValueByStock = () => {\r\n        let arrByCompany = []\r\n        let totalMarketVal = 0\r\n        const dates = Object.keys(portfolioHistory)\r\n        const lastDate = dates[dates.length - 1]\r\n        Object.entries(portfolioHistory[lastDate]).forEach(([key, price]) => {\r\n            const asset = currentPossesions.find(asset => asset.ticker === key)\r\n            if (asset) {\r\n                const amount = asset.amount\r\n                const marketVal = price.close * amount\r\n                totalMarketVal += marketVal\r\n                arrByCompany = [\r\n                    ...arrByCompany,\r\n                    {\r\n                        ticker: key,\r\n                        marketVal\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n        return arrByCompany.map(item => {\r\n            item[\"proportion\"] = (item.marketVal / totalMarketVal) * 100\r\n            return item\r\n        })\r\n        // stocks.forEach(poss => {\r\n        //     console.log(state.portfolioHistoryByCompany)\r\n        //     const stockHistory = state.portfolioHistoryByCompany[poss.ticker]\r\n        //     console.log(stockHistory, \"hastory\")\r\n        //     let marketVal;\r\n        //     if (stockHistory && stockHistory.length > 0) {\r\n        //         const lastRegister = stockHistory[stockHistory.length - 1]\r\n        //         const lastRegisterClosePrice = lastRegister[2]\r\n        //         marketVal = lastRegisterClosePrice * poss.amount\r\n\r\n        //     } else {\r\n        //         //here means that this is a new stock, and as we just update daily, the market value will be equal to its cost\r\n        //         const asset = state.currentPossesions.stocks.find(asset => asset.ticker === poss.ticker)\r\n        //         marketVal = asset.amount * asset.unitaryCost\r\n        //     }\r\n        //     totalMarketVal += marketVal\r\n        //     arrByCompany = [...arrByCompany,\r\n        //     {\r\n        //         ticker: poss.ticker,\r\n        //         marketVal\r\n        //     }]\r\n        // })\r\n        // console.log(arrByCompany, \"elmarketall\")\r\n        // return arrByCompany.map(item => {\r\n        //     item[\"proportion\"] = (item.marketVal / totalMarketVal) * 100\r\n        //     return item\r\n        // })\r\n    }\r\n\r\n    const prepareData = (data, cb) => {\r\n        cb(data.map(item => [item.ticker, item.proportion]))\r\n    }\r\n    useEffect(() => {\r\n        if (currentPossesions.length > 0) {\r\n            const data = getMarketValueByStock()\r\n            prepareData(data, (result) => {\r\n                setReadyData(result)\r\n            })\r\n\r\n        }\r\n    }, [])\r\n    return (\r\n        <Paper>\r\n            { readyData.length && <DonutChart data={readyData} />}\r\n        </Paper>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Accordion, AccordionDetails, AccordionSummary, makeStyles, Typography } from '@material-ui/core';\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport const OperationList = ({ operations }) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <GridHeader />\r\n            {operations.map((op, index) => {\r\n                return (\r\n                    <Accordion\r\n                        key={index}\r\n                        expanded={expanded === `panel${index}`}\r\n                        onChange={handleChange(`panel${index}`)}\r\n                    >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n\r\n                            <Gridi {...{ op }} />\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Typography>\r\n                                Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.\r\n                                Aliquam eget maximus est, id dignissim quam.\r\n          </Typography>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Gridi = ({ op }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { details: { ticker, amount, unitaryCost } } = op\r\n    const rows = [\r\n        {\r\n            id: 1,\r\n            date: op.date,\r\n            type: op.operationType,\r\n            ticker: ticker,\r\n            amount: amount,\r\n            price: unitaryCost\r\n        },\r\n    ];\r\n\r\n    const columns = [\r\n        { field: \"id\", hide: true },\r\n        { field: \"date\", headerName: \"Column 1\", flex: 1 },\r\n        { field: \"type\", headerName: \"Column 2\", flex: 1 },\r\n        { field: \"ticker\", headerName: \"Column 2\", flex: 1 },\r\n        { field: \"amount\", headerName: \"Column 2\", flex: 1 },\r\n        { field: \"price\", headerName: \"Column 2\", flex: 1 },\r\n    ];\r\n\r\n    const handleClick = (params) => {\r\n        if (params.field === \"ticker\") {\r\n            history.push(`/companies/overview/${params.value}`)\r\n        }\r\n    }\r\n\r\n    return <DataGrid rows={rows} columns={columns}\r\n        headerHeight={0}\r\n        hideFooter={true}\r\n        autoHeight={true}\r\n        density=\"standard\"\r\n        onCellClick={handleClick}\r\n    />;\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    accordeon: {\r\n        display: \"none\"\r\n    }\r\n})\r\nconst GridHeader = () => {\r\n    const styles = useStyles()\r\n    const rows = [{\r\n        id: 1,\r\n        date: \"\",\r\n        type: \"\",\r\n        ticker: \"\",\r\n        amount: \"\",\r\n        price: \"\"\r\n    }];\r\n    const columns = [\r\n        { field: \"id\", hide: true },\r\n        { field: \"date\", headerName: \"date\", flex: 1 },\r\n        { field: \"type\", headerName: \"type\", flex: 1 },\r\n        { field: \"ticker\", headerName: \"ticker\", flex: 1 },\r\n        { field: \"amount\", headerName: \"amount\", flex: 1 },\r\n        { field: \"price\", headerName: \"price\", flex: 1 },\r\n        { field: \"extra space\", headerName: \"\", width: 50 }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"operations-header\"\r\n        >\r\n            <DataGrid rows={rows} columns={columns}\r\n                hideFooter={true}\r\n                autoHeight={true}\r\n                rowHeight={0}\r\n                classes={{\r\n                    overlay: styles.accordeon,\r\n                }}\r\n                density=\"compacted\"\r\n            //style={{ paddingLeft: \"1rem\" }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { PortfolioChartPeople } from './PortfolioChartPeople';\r\nimport { useCompaniesChangePersona } from './useCompaniesChangePersona';\r\nimport { PositionsPersonas } from \"./charts/PositionsPersonas\";\r\nimport { PerformanceStructurePeople } from './charts/PerformanceStructurePeople';\r\nimport { PerformanceStructureBPersonas } from './charts/PerformanceStructureBPersonas';\r\nimport { AssetStructurePeople } from './charts/AssetStructurePeople';\r\nimport { OperationList } from './OperationList';\r\n\r\nexport const ChartsSection = ({ data }) => {\r\n  console.log(data, \"datonata\");\r\n  const chart1Wrapper = useRef(null)\r\n  const {\r\n    prices, currentStocks, possesionsSeries, companiesImpact, readyOperations,\r\n  } = data;\r\n  const { companiesChange } = useCompaniesChangePersona(\r\n    {\r\n      generatedSeries: possesionsSeries,\r\n      portfolioHistory: prices,\r\n      currentPossesions: currentStocks,\r\n    },\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <main className=\"dasboard-grid--desktop\">\r\n        <div className=\"principal\">\r\n          <div ref={chart1Wrapper}>\r\n            <PortfolioChartPeople datos={data?.portfolio} title={`${data?.user.username} Portfolio`}\r\n              ref={chart1Wrapper}\r\n            />\r\n          </div>\r\n          <PerformanceStructurePeople {...{ companiesChange }} />\r\n          <PerformanceStructureBPersonas {...{ companiesImpact }} />\r\n        </div>\r\n        <div className=\"secondary\">\r\n          <PositionsPersonas {...{ companiesChange }}\r\n            currentPossesions={currentStocks}\r\n          />\r\n          <AssetStructurePeople\r\n            portfolioHistory={prices}\r\n            currentPossesions={currentStocks}\r\n          />\r\n        </div>\r\n      </main>\r\n      <OperationList operations={readyOperations} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { userActivity } from '../portfolio/logicPruebasConAdd'\r\nimport { PortfolioPriceChart } from '../portfolio/PortfolioPriceChart'\r\nimport { StockShop } from '../portfolio/StockShop2'\r\nimport { ChartsSection } from './ChartsSection'\r\nimport { PeopleData } from './interfaces'\r\nimport { PortfolioChartPeople } from './PortfolioChartPeople'\r\ninterface ParamType {\r\n    id: string\r\n}\r\n\r\ninterface IpeopleDetail {\r\n    data: PeopleData | null,\r\n    loading: boolean,\r\n    error: string\r\n}\r\n\r\nexport const PeopleDetails = () => {\r\n    const { id } = useParams<ParamType>()\r\n    const [{ data, loading, error }, setState] = useState<IpeopleDetail>({ data: null, loading: false, error: \"\" })\r\n    const [currentPrice, setCurrentPrice] = useState<number | null>(null)\r\n\r\n    useEffect(() => {\r\n        console.log(\"randarad\")\r\n        setState(prev => ({ ...prev, loading: true }))\r\n        fetch(`http://localhost:8001/api/v1/people/${id}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    loading: false,\r\n                    data: res\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    error: err.message,\r\n                    loading: false\r\n                }))\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(data, \"la datana\")\r\n        getPortfolioPrice()\r\n    }, [data])\r\n\r\n    const getPortfolioPrice = () => {\r\n        // const dataKeys = Object.keys(data)\r\n        // const lastKey = dataKeys[dataKeys.length - 1]\r\n        if (!data) {\r\n            return\r\n        }\r\n        console.log(data, \"portfoliou\")\r\n        const portfolio = Object.keys(data.portfolio)\r\n        const lastDate = portfolio[portfolio.length - 1]\r\n        setCurrentPrice(data.portfolio[lastDate].liquidativeValue)\r\n    }\r\n    const shopProps = {\r\n        loading: false,\r\n        error: \"\",\r\n        currentPrice\r\n    }\r\n    return (\r\n        <div>\r\n            {loading ? <p>Loading...</p>\r\n                : error ? <p>{error}</p>\r\n                    : <>\r\n                        <StockShop ticker={data?.user.username}\r\n                            {...shopProps}\r\n                            assetType=\"peopleFund\"\r\n                            fundId={id}\r\n                        />\r\n                        {data &&\r\n\r\n                            <ChartsSection {...{ data }} />}\r\n                    </>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { ElementRef, LegacyRef, ReactNode, useEffect, useRef, useState } from 'react'\r\nimport { PortfolioPriceChart } from '../portfolio/PortfolioPriceChart'\r\nimport { PeopleItem, User } from './interfaces'\r\nimport styled from \"styled-components\"\r\nimport { makeStyles, Paper } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { PortfolioChartPeople } from './PortfolioChartPeople'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\n\r\nexport const UserItem = ({ person }) => {\r\n    const { user, portfolio } = person\r\n    const [currentPerformance, setCurrentPerformance] = useState(null)\r\n    \r\n    return (\r\n        <Paper\r\n            className=\"people-item\"\r\n        >\r\n\r\n            {\r\n                user.username &&\r\n                <UserInfo>\r\n                    <div\r\n                        className=\"people-item__header\"\r\n                    >\r\n                        <Link to={`/people/${user.userId}`}>\r\n                            <ImagePeople user={user} />\r\n                        </Link>\r\n                        {/* <h3>\r\n                            {user.firstName && user.firstName}\r\n                            {user.lastName && user.lastName}\r\n                        </h3> */}\r\n                        <h6 className=\"people-item__username\">\r\n                        <Link to={`/people/${user.userId}`}>{user.username}\r\n                        </Link>\r\n                        </h6>\r\n                    </div>\r\n                </UserInfo>}\r\n            <Portfolio>\r\n                {(chartWrapper) =>\r\n                    <PortfolioChartPeople datos={portfolio} title={`${user.firstName} Portfolio`}\r\n                        {...{ setCurrentPerformance, chartWrapper }}\r\n                    />}\r\n            </Portfolio>\r\n\r\n            <PerformanceStatus {...{ currentPerformance }} />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst UserInfo = ({ children }) => <>{children}</>\r\n\r\n\r\nconst Portfolio = ({ children }) => {\r\n    const chartWrapper = useRef(null)\r\n\r\n    return <div\r\n        ref={chartWrapper}\r\n        className=\"people-item__chartWrapper\"\r\n    >{children(chartWrapper)}</div>\r\n}\r\n\r\n\r\n\r\nconst ImagePeople = ({ user }) => {\r\n    const [imgLoaded, setImgLoaded] = useState(false)\r\n\r\n    return (\r\n        <div className=\"people-item__image-container\">\r\n            {\r\n                user.image ?\r\n                    <img src={`http://localhost:8001/${user.image}`}\r\n                        className={imgLoaded ?\r\n                            \"people-item__image--loaded\" : \"people-item__image\"}\r\n                        onLoad={() => { setImgLoaded(true) }}\r\n                    />\r\n                    :\r\n                    <img src=\"https://hope.be/wp-content/uploads/2015/05/no-user-image.gif\"\r\n                        className={imgLoaded ? \"people-item__image--loaded\" : \"people-item__image\"}\r\n                        onLoad={() => { setImgLoaded(true) }}\r\n                    />\r\n            }\r\n\r\n            {!imgLoaded && <Skeleton style={{ width: \"100%\", height: \"100%\" }} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PerformanceStatus = ({ currentPerformance }) => {\r\n\r\n    if (!currentPerformance) {\r\n        return null\r\n    }\r\n    return <p\r\n        className=\"people__item__performace\"\r\n    ><ArrowUpwardIcon style={{ transform: \"scale(0.7)\" }} />{currentPerformance}%</p>\r\n}","import { LinearProgress } from '@material-ui/core'\r\nimport React, { useEffect, useReducer } from 'react'\r\nimport { PeopleItem } from './interfaces'\r\nimport { UserItem } from './UserItem.js'\r\n\r\ninterface userMain {\r\n    data: PeopleItem[] | null\r\n    loading: boolean\r\n    error: string\r\n}\r\ntype State = { type: \"fetching\", payload: boolean }\r\n    | { type: \"success\", payload: PeopleItem[] }\r\n    | { type: \"error\", payload: string }\r\n\r\nconst reducer = (state: userMain, action: State) => {\r\n    switch (action.type) {\r\n        case \"fetching\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case \"success\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n        case \"error\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const PersonasList = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, { data: null, loading: true, error: \"\" })\r\n\r\n    const { data, loading, error } = state\r\n    const getPeople = () => {\r\n        return fetch(\"http://localhost:8001/api/v1/people/main\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                return res.map((item: any) => {\r\n                    const { portfolio } = item\r\n                    let parsedPortfolio = portfolio\r\n                    if (typeof portfolio === \"string\") {\r\n                        parsedPortfolio = JSON.parse(portfolio)\r\n                    }\r\n                    return { ...item, portfolio: parsedPortfolio }\r\n                })\r\n            })\r\n            .then(res => { dispatch({ type: \"success\", payload: res }) })\r\n            .catch(err => { dispatch({ type: \"error\", payload: err.message }) })\r\n    }\r\n    useEffect(() => {\r\n        console.log(data, \"doooto\")\r\n    }, [data])\r\n    const divStilos: React.CSSProperties = {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-evenly\",\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPeople()\r\n    }, [])\r\n    return (\r\n        <div style={divStilos}>\r\n            {loading ? <LinearProgress />\r\n                : error ? <p>{error}</p>\r\n                    : data && data.map((person) => {\r\n                        return <UserItem key={person.user.username} {...{ person }} />\r\n                    })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//const UserItem =()=>null","import React from 'react'\r\nimport {Route, useRouteMatch} from \"react-router-dom\"\r\nimport { PeopleDetails } from './PeopleDetails'\r\nimport { PersonasList } from './PersonasList'\r\nexport const PeopleRouter = () => {\r\n    const {path} = useRouteMatch()\r\n    return (\r\n        <>\r\n        <Route path={path} exact>\r\n            <PersonasList/>\r\n        </Route>\r\n        <Route path={`${path}/:id`}>\r\n            <PeopleDetails/>\r\n        </Route>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Draft from \"draft-js\";\r\nimport { Button, ButtonGroup, withStyles } from \"@material-ui/core\";\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nconst { Editor, EditorState, RichUtils, getDefaultKeyBinding } = Draft;\r\n\r\n\r\n\r\nexport class TextEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { editorState: EditorState.createEmpty() };\r\n        this.editor = React.createRef()\r\n        this.focus = () => this.editor.current.focus();\r\n        this.onChange = editorState => this.setState({ editorState });\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    reply = () => {\r\n        alert(this.state.editorState.getCurrentContent().getPlainText('\\u0001'))\r\n        const replyBody = this.state.editorState.getCurrentContent().getPlainText('\\u0001')\r\n        switch (this.props.type) {\r\n            case \"reply\":\r\n                this.props.handleReply(replyBody, this.props.parentId, this.props.ancestorId)\r\n                return\r\n            case \"post\":\r\n                this.props.handleNewPost(replyBody, this.props.parentId)\r\n                return\r\n            default:\r\n                return\r\n        }\r\n    }\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(\r\n                e,\r\n                this.state.editorState,\r\n                4 /* maxDepth */\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType));\r\n    }\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(\r\n            RichUtils.toggleInlineStyle(this.state.editorState, inlineStyle)\r\n        );\r\n    }\r\n    render() {\r\n        const { editorState } = this.state;\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = \"RichEditor-editor\";\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (\r\n                contentState\r\n                    .getBlockMap()\r\n                    .first()\r\n                    .getType() !== \"unstyled\"\r\n            ) {\r\n                className += \" RichEditor-hidePlaceholder\";\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"RichEditor-root\">\r\n                <div className=\"RichEditor-editor\" onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        ref={this.editor}\r\n                        spellCheck={true}\r\n                    />\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <InlineStyleControls\r\n                        editorState={editorState}\r\n                        onToggle={this.toggleInlineStyle}\r\n                    />\r\n                    <BlockStyleControls\r\n                        editorState={editorState}\r\n                        onToggle={this.toggleBlockType}\r\n                    />\r\n                    <Button onClick={this.reply}>Reply</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2\r\n    }\r\n};\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case \"blockquote\":\r\n            return \"RichEditor-blockquote\";\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nconst styles = {\r\n    root: { minWidth: \"40px\" }\r\n}\r\nfunction PowererButton(props) {\r\n    const { classes, children } = props\r\n    return <Button classes={{ root: classes.root }} {...props}>\r\n        {children}\r\n    </Button>\r\n}\r\n\r\nconst CustomButton = withStyles(styles)(PowererButton)\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = e => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n    render() {\r\n        const { classes } = this.props\r\n        let className = \"RichEditor-styleButton\";\r\n        if (this.props.active) {\r\n            className += \" RichEditor-activeButton\";\r\n        }\r\n        return (\r\n            <CustomButton className={className} onClick={this.onToggle}\r\n\r\n            >\r\n                {this.props.label}\r\n            </CustomButton>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst BLOCK_TYPES = [\r\n    { label: \"H1\", style: \"header-one\" },\r\n    { label: \"H2\", style: \"header-two\" },\r\n    { label: \"H3\", style: \"header-three\" },\r\n    { label: \"H4\", style: \"header-four\" },\r\n    { label: \"H5\", style: \"header-five\" },\r\n    { label: \"H6\", style: \"header-six\" },\r\n    { label: <FormatQuoteIcon />, style: \"blockquote\" },\r\n    { label: <FormatListNumberedIcon />, style: \"unordered-list-item\" },\r\n    { label: <FormatListBulletedIcon />, style: \"ordered-list-item\" },\r\n\r\n];\r\nconst BlockStyleControls = props => {\r\n    const { editorState } = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getType();\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n\r\n            {BLOCK_TYPES.map((type, index) => (\r\n                <StyleButton\r\n                    key={index}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nvar INLINE_STYLES = [\r\n    { label: <FormatBoldIcon />, style: \"BOLD\" },\r\n    { label: <FormatItalicIcon />, style: \"ITALIC\" },\r\n    { label: <FormatUnderlinedIcon />, style: \"UNDERLINE\" },\r\n];\r\nconst InlineStyleControls = props => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n                {INLINE_STYLES.map((type, index) => (\r\n                    <StyleButton\r\n                        key={index}\r\n                        active={currentStyle.has(type.style)}\r\n                        label={type.label}\r\n                        onToggle={props.onToggle}\r\n                        style={type.style}\r\n                    />\r\n                ))}\r\n            </ButtonGroup>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from \"styled-components\"\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { TextEditor } from \"./TextEditor\"\r\nimport { useDataLayer } from '../../Context';\r\nimport { useUserLayer } from '../../UserContext';\r\nimport { convertUnixToHuman } from '../../utils/datesUtils';\r\nimport { ContactlessOutlined } from '@material-ui/icons';\r\nimport { Likes } from './Likes';\r\n\r\nexport interface PostPnp {\r\n    postId: number,\r\n    msg: string,\r\n    likes: number,\r\n    username: string,\r\n    date: string,\r\n    avatar: string,\r\n    tags: string[],\r\n    answers: Post[] | [],\r\n    parentId: null | number,\r\n    usersLiked: string[]\r\n}\r\nexport interface Post extends PostPnp {\r\n    ancestorId: number,\r\n    answers: Post[] | []\r\n}\r\n\r\nconst fakeData: PostPnp[] = [\r\n    {\r\n        postId: 1,\r\n        parentId: null,\r\n        msg: \"I’ve seen the original, nice twist. If I was writing the algorithm it would probably come back with infinite eggs because I forgot to close the loop somewhere\",\r\n        likes: 13,\r\n        username: \"Perico Palotes\",\r\n        date: \"15-08-2020\",\r\n        avatar: \"https://avatars.stocktwits.com/production/3327008/large-1607135425.png\",\r\n        tags: [\"Tesla\"],\r\n        usersLiked: [],\r\n        answers: [\r\n            {\r\n                postId: 2,\r\n                parentId: 1,\r\n                username: \"mamarraxo\",\r\n                msg: \"I’ve seen the original, nice twist. If I was writing the algorithm it would probably come back with infinite eggs because I forgot to close the loop somewhere\",\r\n                date: \"15-08-2020\",\r\n                likes: 2,\r\n                avatar: \"https://avatars.stocktwits.com/production/3327008/large-1607135425.png\",\r\n                tags: [\"Tesla\"],\r\n                ancestorId: 1,\r\n                usersLiked: [],\r\n                answers: [\r\n                    {\r\n                        postId: 3,\r\n                        parentId: 2,\r\n                        username: \"mamarraxo\",\r\n                        msg: \"I’ve seen the original, nice twist. If I was writing the algorithm it would probably come back with infinite eggs because I forgot to close the loop somewhere\",\r\n                        date: \"15-08-2020\",\r\n                        likes: 2,\r\n                        answers: [],\r\n                        avatar: \"https://avatars.stocktwits.com/production/3327008/large-1607135425.png\",\r\n                        tags: [\"Tesla\"],\r\n                        ancestorId: 1,\r\n                        usersLiked: []\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                postId: 4,\r\n                parentId: 1,\r\n                username: \"mamarraxo\",\r\n                msg: \"I’ve seen the original, nice twist. If I was writing the algorithm it would probably come back with infinite eggs because I forgot to close the loop somewhere\",\r\n                likes: 2,\r\n                date: \"15-08-2020\",\r\n                avatar: \"https://avatars.stocktwits.com/production/3327008/large-1607135425.png\",\r\n                tags: [\"Tesla\"],\r\n                ancestorId: 1,\r\n                usersLiked: [],\r\n                answers: [\r\n                    {\r\n                        postId: 5,\r\n                        parentId: 4,\r\n\r\n                        username: \"mamarraxo\",\r\n                        msg: \"I’ve seen the original, nice twist. If I was writing the algorithm it would probably come back with infinite eggs because I forgot to close the loop somewhere\",\r\n                        likes: 2,\r\n                        date: \"15-08-2020\",\r\n                        answers: [],\r\n                        avatar: \"https://avatars.stocktwits.com/production/3327008/large-1607135425.png\",\r\n                        ancestorId: 1,\r\n                        tags: [\"Tesla\"],\r\n                        usersLiked: []\r\n\r\n                    },\r\n                    {\r\n                        postId: 6,\r\n                        parentId: 4,\r\n                        username: \"mamarraxo\",\r\n                        msg: \"I’ve seen the original, nice twist. If I was writing the algorithm it would probably come back with infinite eggs because I forgot to close the loop somewhere\",\r\n                        likes: 2,\r\n                        date: \"15-08-2020\",\r\n                        answers: [],\r\n                        avatar: \"https://avatars.stocktwits.com/production/3327008/large-1607135425.png\",\r\n                        tags: [\"Tesla\"],\r\n                        ancestorId: 1,\r\n                        usersLiked: []\r\n\r\n                    },\r\n                ]\r\n            },\r\n        ],\r\n    }\r\n]\r\n\r\nconst PostWrapper = styled.div({\r\n    background: \"lightblue\",\r\n    marginBottom: \"100px\",\r\n    display: \"grid\",\r\n})\r\n\r\nconst LongColumn = styled.div({\r\n\r\n})\r\n\r\nconst initial: [] = []\r\n\r\nexport const FeedViews = () => {\r\n    const [posts, setPosts] = useState<PostPnp[] | []>(initial)\r\n    const [error, setError] = useState(\"\")\r\n    const { state } = useUserLayer()\r\n    const handleNewPost = (content: string) => {\r\n\r\n        const post = {\r\n            username: \"Manilox\",\r\n            avatar: \"https://i.pinimg.com/originals/29/24/89/292489e7d0bf8ce7d5ffd81be62d0800.png\",\r\n            msg: content,\r\n            date: convertUnixToHuman(Date.now()),\r\n        }\r\n        fetch(\"http://localhost:8001/api/v1/posts\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(post),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => { setPosts(prev => ([...prev, res])) })\r\n            .catch(err => { throw new Error(err.message) })\r\n\r\n    }\r\n\r\n\r\n    const updatePost = (updatedPost: any) => {\r\n        console.log(updatedPost, \"updated post\")\r\n        console.log(posts, \"state before update\")\r\n        const updatedPosts = (posts as PostPnp[]).map(post => {\r\n            if (post.postId === updatedPost.postId) {\r\n                return updatedPost\r\n            }\r\n            return post\r\n        })\r\n        console.log(updatedPosts, \"updatedstattee\")\r\n\r\n        setPosts(updatedPosts)\r\n    }\r\n\r\n    const handleReply = (content: string, parentId: number, ancestorId: number) => {\r\n        const newPost = {\r\n            parentId,\r\n            ancestorId,\r\n            username: \"Manilox\",\r\n            avatar: \"https://i.pinimg.com/originals/29/24/89/292489e7d0bf8ce7d5ffd81be62d0800.png\",\r\n            msg: content,\r\n            date: convertUnixToHuman(Date.now()),\r\n            tags: [\"whateeever\"],\r\n        }\r\n\r\n        fetch(\"http://localhost:8001/api/v1/posts/reply\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(newPost),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => { updatePost(res[0]) })\r\n            .catch(err => { throw new Error(err.message) })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8001/api/v1/posts\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res, \"all posts\")\r\n                setPosts(res)\r\n            })\r\n            .catch(err => { setError(err.message) })\r\n    }, [])\r\n    // const addPost = async (parentId: number, postInfo: Post) => {\r\n    //     const postsCopy = [...posts]\r\n    //     let encontrado = false\r\n    //     const loopi = (arr: Post[] | [], resolve: () => void) => {\r\n    //         if (arr.length) {\r\n    //             (arr as Post[]).forEach((post: Post) => {\r\n    //                 if (post.postId === parentId) {\r\n    //                     (post.answers as any).push(postInfo)\r\n    //                     resolve()\r\n    //                 }\r\n    //                 else {\r\n    //                     loopi(post.answers, resolve)\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //     }\r\n    //     const updatePost = (): Promise<void> => {\r\n    //         //as soon as we find postId parent we resolve, to optimize\r\n    //         return new Promise(resolve => {\r\n    //             postsCopy.forEach(post => {\r\n    //                 if (post.postId === parentId) {\r\n    //                     (post.answers as Post[]).push(postInfo)\r\n    //                     resolve()\r\n    //                 }\r\n    //                 else {\r\n    //                     loopi(post.answers, resolve)\r\n    //                 }\r\n    //             })\r\n\r\n    //         })\r\n    //     }\r\n    //     await updatePost()\r\n    //     setPosts(postsCopy)\r\n    // }\r\n\r\n    console.log(posts, \"posttttt\")\r\n\r\n    return (\r\n        <div style={{ marginTop: \"100px\" }}>\r\n            {error && <p>{error}</p>}\r\n            {\r\n                posts.length &&\r\n                (posts as PostPnp[]).map((item: PostPnp) => {\r\n                    return (\r\n                        <FeedPost\r\n                            key={item.postId}\r\n                            post={item}\r\n                            handleReply={handleReply}\r\n                            updatePost={updatePost}\r\n                        />\r\n                    )\r\n                })}\r\n            <TextEditor\r\n                email=\"manilo@gmail.com\"\r\n                postId={0}\r\n                handleNewPost={handleNewPost}\r\n                type=\"post\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    post: PostPnp,\r\n    handleReply: (content: string, parentId: number, ancestorId: number) => void,\r\n    updatePost: (updatedPost: any) => void\r\n}\r\n\r\n//here is where first reply is handled, parentId = ancestorId\r\nconst FeedPost: React.FC<Props> = ({ post, handleReply, updatePost }) => {\r\n\r\n    const [inputOpened, setInputOpened] = useState(false)\r\n\r\n    const { state } = useUserLayer()\r\n\r\n    function toggleEditor() {\r\n        setInputOpened(prev => !prev)\r\n    }\r\n\r\n    const handleLike = (postId: number) => {\r\n        fetch(`http://localhost:8001/api/v1/posts/like?username=Manilox&postId=${postId}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res, \"respuesta\");\r\n                updatePost(res)\r\n            })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"feed-wrapper\">\r\n            <div className=\"tall-part\">\r\n                <img src={post.avatar} />\r\n                <div className=\"line-wrapper\">\r\n                    <p className=\"line\"></p>\r\n                </div>\r\n            </div>\r\n            <div className=\"feed-main\">\r\n                <header className=\"feed-header\">\r\n                    <p>{post.username}</p>\r\n                    <p>{post.date}</p>\r\n                </header>\r\n                <Likes\r\n                    post={post}\r\n                    {...{ handleLike }}\r\n                />\r\n                <div className=\"feed-body\">\r\n                    <div className=\"feed-msg\">\r\n                        {post.msg}\r\n                    </div>\r\n                    <div className=\"feed-footer\">\r\n                        <IconButton\r\n                            onClick={toggleEditor}\r\n                        >\r\n                            <MessageIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    {inputOpened &&\r\n                        <div className=\"editor-wrapper\">\r\n                            <TextEditor\r\n                                email=\"manilo@gmail.com\"\r\n                                parentId={post.postId}\r\n                                ancestorId={post.postId}\r\n                                handleReply={handleReply}\r\n                                type=\"reply\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {!!post.answers.length &&\r\n                    (post.answers as any[]).map((reply: Post) => {\r\n                        return <FeedItem\r\n                            key={reply.postId}\r\n                            {...{ reply, handleReply, handleLike, updatePost }} />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface PropsReply {\r\n    reply: Post,\r\n    handleReply: (content: string, parentId: number, ancestorId: number) => void,\r\n    updatePost: (updatedPost: any) => void,\r\n    handleLike: (postId: number) => void\r\n}\r\n\r\nconst FeedItem: React.FC<PropsReply> = ({ reply, handleReply, handleLike, updatePost }) => {\r\n\r\n    const [inputOpened, setInputOpened] = useState(false)\r\n    const [likes, setLikes] = useState(reply.likes)\r\n    const { state } = useUserLayer()\r\n\r\n    function toggleEditor() {\r\n        setInputOpened(prev => !prev)\r\n    }\r\n    console.log(reply, \"iiitem\")\r\n\r\n\r\n    return (\r\n        <div className=\"feed-wrapper\">\r\n            <div className=\"tall-part\">\r\n                <img src={reply.avatar} />\r\n                <div className=\"line-wrapper\">\r\n                    <p className=\"line\"></p>\r\n                </div>\r\n            </div>\r\n            <div className=\"feed-main\">\r\n                <header className=\"feed-header\">\r\n                    <p>{reply.username}</p>\r\n                    <p>{reply.date}</p>\r\n                </header>\r\n                <Likes\r\n                    post={reply}\r\n                    {...{ handleLike }}\r\n                />\r\n                <div className=\"feed-body\">\r\n                    <div className=\"feed-msg\">\r\n                        {reply.msg}\r\n                    </div>\r\n                    <div className=\"feed-footer\">\r\n                        <IconButton\r\n                            onClick={toggleEditor}\r\n                        >\r\n                            <MessageIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    {inputOpened &&\r\n                        <div className=\"editor-wrapper\">\r\n                            <TextEditor\r\n                                email=\"manilo@gmail.com\"\r\n                                parentId={reply.postId}\r\n                                handleReply={handleReply}\r\n                                ancestorId={reply.ancestorId}\r\n                                type=\"reply\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {!!reply.answers.length &&\r\n                    (reply.answers as any[]).map((reply: Post) => {\r\n                        return <FeedItem\r\n                            key={reply.postId}\r\n                            {...{ reply, handleReply, handleLike, updatePost }} />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// const FeedResponse = () => {\r\n//     <div className=\"feed-wrapper\">\r\n//         <div className=\"tall-part\">\r\n//             <img src={item.avatar} />\r\n//             {item.answers.length && <p class=\"line\"></p>}\r\n//         </div>\r\n//         <div className=\"feed-main\">\r\n//             <header className=\"feed-header\">\r\n//                 <p>{item.username}</p>\r\n//                 <p>{item.date}</p>\r\n//             </header>\r\n//             <div className=\"feed-body\">\r\n//                 {item.body}\r\n//             </div>\r\n//         </div>\r\n//         <div className=\"feed-footer\">\r\n//         </div>\r\n//         {item.answers.length &&\r\n//             item.answers.map(item => {\r\n//                 <FeedResponse {...{ item }} />\r\n//             })}\r\n//     </div>\r\n// }","import { Button } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nexport const FacebookButton = ({ href }) => {\r\n    return (\r\n        <a\r\n            href={href}\r\n        >\r\n            <Button\r\n                size=\"large\"\r\n                startIcon={<FacebookIcon\r\n                    style={{ width: \"26px\", height: \"100%\", color: \"white\" }}\r\n                />}\r\n                style={{ background: \"#3b5998\", color: \"white\", width: \"100%\" }}\r\n\r\n            >\r\n                Continue with Facebook\r\n        </Button>\r\n        </a>\r\n    )\r\n}","import { Button, Dialog, DialogContent, makeStyles, Slide, TextField, useMediaQuery, useTheme } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { useLocation } from 'react-use'\r\nimport { useUILayer } from '../ContextUI'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { FacebookButton } from './SocialButtons'\r\nimport { useIAuth } from './useIAuth'\r\n\r\nconst useStyles = makeStyles({\r\n    formField: {\r\n        marginBottom: \"10px\"\r\n    }\r\n})\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [{ error, loading }, setStatus] = useState({ error: null, loading: false })\r\n    const { userDispatch, userState: { token } } = useUserLayer()\r\n\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const redirect = history.location.search ? history.location.search.split(\"=\")[1] : \"\"\r\n\r\n    const theme = useTheme()\r\n    const isSmallViewport = useMediaQuery(theme.breakpoints.down(\"sm\"))\r\n\r\n    const handleLogin = (e) => {\r\n        console.log(\"upa\")\r\n        e.preventDefault()\r\n        setStatus(prev => ({ ...prev, loading: true }))\r\n        fetch(\"http://localhost:8001/api/v1/auth/login\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email, password }),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw new Error(\"error in passport middleware\");\r\n                return res\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res, \"reases\")\r\n                localStorage.setItem(\"token\", JSON.stringify(res.token))\r\n                userDispatch({ type: \"SET_USER_AND_TOKEN\", payload: { email, token: res.token } })\r\n                setStatus(prev => ({ ...prev, loading: false }))\r\n                //setPermissionObtained(true)\r\n            })\r\n            .catch(err => {\r\n                //setPermissionObtained(false)\r\n                setStatus(({ error: err.message, loading: false }))\r\n            })\r\n    }\r\n\r\n    const styles = useStyles()\r\n\r\n    console.log(token, \"infotoken\")\r\n    if (token) {\r\n        return <Redirect to={{ pathname: `/${redirect}` }} />\r\n    }\r\n    if (error) {\r\n        return <p>{error}</p>\r\n    }\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            TransitionComponent={Transition}\r\n            onClose={() => { history.goBack() }}\r\n        >\r\n            <div\r\n                className=\"form\"\r\n            >\r\n                <h1\r\n                    className=\"form__title\"\r\n                >Sign in</h1>\r\n\r\n                <div className=\"formLocal\">\r\n                    <form onSubmit={handleLogin}>\r\n                        <TextField\r\n                            size={isSmallViewport ? \"small\" : \"large\"}\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            label=\"email\"\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value)\r\n                            }}\r\n                            required\r\n                            classes={{ root: styles.formField }}\r\n                        />\r\n                        <TextField\r\n                            size={isSmallViewport ? \"small\" : \"large\"}\r\n                            type=\"password\" name=\"password\"\r\n                            value={password}\r\n                            label=\"password\"\r\n                            onChange={(e) => {\r\n                                setPassword(e.target.value)\r\n                            }}\r\n                            required\r\n                            classes={{ root: styles.formField }}\r\n                        />\r\n\r\n                        <Button type=\"submit\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >Continue</Button>\r\n                        <div\r\n                            className=\"form__footer\"\r\n                        >\r\n                            <p>Need to sign up?</p>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    history.push(redirect ? `/register?redirect=${redirect}` : \"/register\", { background: location })\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Signup\r\n                        </Button>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <h5 className=\"form__or\">\r\n                    - OR -\r\n            </h5>\r\n                <div\r\n                    className=\"formOauth\"\r\n                >\r\n                    <FacebookButton\r\n                        href=\"http://localhost:8001/api/v1/auth/oauth/facebook\"\r\n                    />\r\n                    <FacebookButton\r\n                        href=\"http://localhost:8001/api/v1/auth/oauth/google\"\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useIAuth } from './useIAuth'\r\n\r\nexport const ProtectedRoute = () => {\r\n\r\n    const { hasPermission, loading } = useIAuth()\r\n    //ojo loading tiene que empezar como true\r\n    if (loading) {\r\n        return <p>loading..</p>\r\n    }\r\n    return (\r\n        <>\r\n            { hasPermission ?\r\n                <div>\r\n                    Mira que horto,\r\n\r\n                    sip estás autenticado\r\n        </div>\r\n                :\r\n                // <p>no estas auth</p>\r\n                <Redirect to={{ pathname: \"/pruebaLogin\" }} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useUserLayer } from '../UserContext'\r\n\r\nexport const useIAuth = () => {\r\n    const [hasPermission, setHasPermission] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const { userState, userDispatch } = useUserLayer()\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch(\"http://localhost:8001/api/v1/auth/post\", {\r\n            headers: {\r\n                \"Authorization\": `bearer ${userState.token}`\r\n            },\r\n        }).then(res => {\r\n            console.log(res, \"resposns\")\r\n            if (!res.ok) throw new Error(\"token not valid\")\r\n            console.log(\"success nena\", res)\r\n            setHasPermission(true)\r\n            setLoading(false)\r\n        })\r\n            .catch(err => {\r\n                setHasPermission(false)\r\n                setLoading(false)\r\n                console.log(err.message)\r\n            })\r\n    }, [])\r\n    return { hasPermission, loading }\r\n}\r\nexport const useIAuthh = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const { userState, userDispatch } = useUserLayer()\r\n    useEffect(() => {\r\n        //if there's no token user will have to login\r\n        console.log(userState.token, \"qe sddkfjdk\")\r\n        if (!userState.token) {\r\n            console.log(\"setting user null\")\r\n            setLoading(false)\r\n            userDispatch({ type: \"SET_USER_NULL\" })\r\n            return\r\n        }\r\n        //if there's token we have to check if it's valid\r\n        else if (userState.token) {\r\n            setLoading(true)\r\n            fetch(\"http://localhost:8001/api/v1/auth/secret\", {\r\n                headers: {\r\n                    \"Authorization\": `bearer ${userState.token}`\r\n                },\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) throw new Error(\"token not valid\");\r\n                    return res\r\n                })\r\n                .then(res => res.json())\r\n                //if token is valid we extract the userData from the token itself and send it to the client\r\n                .then(res => {\r\n                    console.log(res, \"resposns\")\r\n                    userDispatch({ type: \"SET_USER\", payload: { email: res.email } })\r\n                    console.log(\"success nena\", res)\r\n                    setLoading(false)\r\n                })\r\n\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    //necesary to initialize components that needs to know if user information is ready, like FOllowingDispatcher\r\n                    userDispatch({ type: \"SET_USER_NULL\" })\r\n                    console.log(err.message)\r\n                })\r\n        }\r\n    }, [userState.token])\r\n\r\n    return { loading }\r\n}\r\n\r\n// export const useAuthLogin = (setHasTried, hasTried) => {\r\n//     const [hasPermission, setHasPermission] = useState(false)\r\n//     const [loading, setLoading] = useState(true)\r\n//     const { userState: { token } } = useUserLayer()\r\n//     useEffect(() => {\r\n//         if (hasTried) {\r\n//             setLoading(true)\r\n//             fetch(\"http://localhost:8001/api/v1/auth/post\", {\r\n//                 headers: {\r\n//                     \"Authorization\": `bearer ${token}`\r\n//                 },\r\n//             }).then(res => {\r\n//                 console.log(res, \"resposns\")\r\n//                 if (!res.ok) throw new Error(\"token not valid\")\r\n//                 setHasTried(false)\r\n//                 console.log(\"success nena\", res)\r\n//                 setHasPermission(true)\r\n//                 setLoading(false)\r\n//             })\r\n//                 .catch(err => {\r\n//                     setHasPermission(false)\r\n//                     setLoading(false)\r\n//                     setHasTried(false)\r\n//                     console.log(err.message)\r\n//                 })\r\n//         }\r\n//     }, [hasTried])\r\n//     return { hasPermission, loading }\r\n// }\r\n","import { Button, Dialog, FilledInput, FormControl, FormHelperText, Grow, IconButton, Input, InputAdornment, InputLabel, makeStyles, Slide, TextField, useMediaQuery, useTheme, withStyles } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { useDebounce } from '../utils/useDebounce'\r\nimport { FacebookButton } from './SocialButtons'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formField: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    helperText: {\r\n        color: \"red\"\r\n    },\r\n    textField: {\r\n        width: \"100%\"\r\n    },\r\n    dialog: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: \"none\"\r\n        }\r\n    }\r\n}))\r\nexport const Register = () => {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rpassword, setRpassword] = useState(\"\")\r\n    const { userDispatch } = useUserLayer()\r\n    const [serverError, setServerError] = useState(null)\r\n    const [success, setSuccess] = useState(false)\r\n    const debouncedUsername = useDebounce(username, 800)\r\n    const debouncedEmail = useDebounce(email, 800)\r\n    const [validatedFields, setValidatedFields] = useState(\r\n        {\r\n            email: { error: null, valid: null },\r\n            username: { error: null, valid: null },\r\n            password: { error: null, valid: null }\r\n        }\r\n\r\n    )\r\n\r\n    const checkPasswords = () => {\r\n        if (password && rpassword) {\r\n            if (password !== rpassword) {\r\n                setValidatedFields(prev => ({\r\n                    ...prev,\r\n                    password: { error: \"passwords must match\", valid: false }\r\n                }))\r\n            } else {\r\n                setValidatedFields(prev => ({\r\n                    ...prev,\r\n                    password: { error: null, valid: true }\r\n                }))\r\n            }\r\n        } else {\r\n            setValidatedFields(prev => ({\r\n                ...prev,\r\n                password: { error: null, valid: null }\r\n            }))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkPasswords()\r\n    }, [password, rpassword])\r\n    const history = useHistory()\r\n    console.log(history, \"historyya\")\r\n    const redirect = history.location.search ? history.location.search.split(\"=\")[1] : \"\"\r\n\r\n\r\n    useEffect(() => {\r\n        if (!debouncedUsername) {\r\n            setValidatedFields(prev => ({\r\n                ...prev,\r\n                username: { error: null, valid: null }\r\n            }))\r\n            return\r\n        }\r\n\r\n        fetch(\"http://localhost:8001/api/v1/validation/users\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username: debouncedUsername }),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.json().then(data => {\r\n                if (!res.ok) throw new Error(data.msg);\r\n                setValidatedFields(prev => ({\r\n                    ...prev,\r\n                    username: { error: null, valid: true }\r\n                }))\r\n            }))\r\n            .catch(err => {\r\n                console.log(err, \"error\")\r\n                setValidatedFields(prev => ({\r\n                    ...prev,\r\n                    username: { valid: null, error: err.message }\r\n                }))\r\n            })\r\n    }, [debouncedUsername])\r\n\r\n    useEffect(() => {\r\n        if (!debouncedEmail) {\r\n            setValidatedFields(prev => ({\r\n                ...prev,\r\n                email: { error: null, valid: null }\r\n            }))\r\n            return;\r\n        }\r\n\r\n        fetch(\"http://localhost:8001/api/v1/validation/email\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email: debouncedEmail }),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => res.json().then(data => {\r\n                if (!res.ok) throw new Error(data.msg);\r\n                setValidatedFields(prev => ({\r\n                    ...prev,\r\n                    email: { error: null, valid: true }\r\n                }))\r\n            }))\r\n            .catch(err => {\r\n                console.log(err, \"error\")\r\n                setValidatedFields(prev => ({\r\n                    ...prev,\r\n                    email: { valid: null, error: err.message }\r\n                }))\r\n            })\r\n    }, [debouncedEmail])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (rpassword !== password) {\r\n            alert(\"password don't match\")\r\n            return\r\n        }\r\n        handleRegister()\r\n    }\r\n    const handleRegister = () => {\r\n        fetch(\"http://localhost:8001/api/v1/auth/register\", {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username, email, password }),\r\n            method: \"POST\"\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw new Error(\"what the hell\");\r\n                return res\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.token, \"setting token\")\r\n                userDispatch({ type: \"SET_TOKEN\", payload: res.token })\r\n                userDispatch({ type: \"SET_USER\", payload: { email } })\r\n                localStorage.setItem(\"token\", JSON.stringify(res.token))\r\n                history.push(\"/\")\r\n                setSuccess(true)\r\n            })\r\n            .catch(err => { setServerError(err.message) })\r\n    }\r\n\r\n    const styles = useStyles()\r\n    if (success) {\r\n        //this is not working properly\r\n        return <Redirect to={`/${redirect}`} />\r\n    }\r\n    if (serverError) {\r\n        return <p>{serverError}</p>\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            TransitionComponent={Transition}\r\n            className={styles.dialog}\r\n            classes={{ paperWidthFalse: styles.dialog }}\r\n            maxWidth={false}\r\n            onClose={()=>history.goBack()}\r\n        >\r\n            <div\r\n                className=\"form\"\r\n            >\r\n                <h1\r\n                    className=\"form__title\"\r\n                >\r\n                    Register\r\n            </h1>\r\n                <div\r\n                    className=\"formLocal\"\r\n                >\r\n                    <form onSubmit={handleSubmit}\r\n                    >\r\n\r\n                        <CustomFormField\r\n                            label=\"username\"\r\n                            field={username}\r\n                            onChange={(e) => { setUsername(e.target.value) }}\r\n                            styles={styles}\r\n                            validation={validatedFields.username}\r\n                            type=\"text\"\r\n                        />\r\n                        <CustomFormField\r\n                            label=\"email\"\r\n                            field={email}\r\n                            onChange={(e) => { setEmail(e.target.value) }}\r\n                            styles={styles}\r\n                            validation={validatedFields.email}\r\n                            type=\"text\"\r\n                        />\r\n                        <VisibilityToggler>\r\n                            {(visible, toggletVisibility) => {\r\n                                return (\r\n                                    <CustomFormField\r\n                                        isPassword={true}\r\n                                        label=\"password\"\r\n                                        field={password}\r\n                                        onChange={(e) => { setPassword(e.target.value) }}\r\n                                        styles={styles}\r\n                                        validation={validatedFields.password}\r\n                                        type={visible ? \"text\" : \"password\"}\r\n                                        endAdornment={<InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={toggletVisibility}\r\n                                            //onMouseDown={handleMouseDownPassword}\r\n                                            >\r\n                                                {visible ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>}\r\n                                    >\r\n                                    </CustomFormField>\r\n                                )\r\n                            }}\r\n                        </VisibilityToggler>\r\n                        <VisibilityToggler>\r\n                            {(visible, toggletVisibility) => {\r\n                                return (\r\n                                    <CustomFormField\r\n                                        isPassword={true}\r\n                                        label=\"repeat password\"\r\n                                        field={rpassword}\r\n                                        onChange={(e) => { setRpassword(e.target.value) }}\r\n                                        styles={styles}\r\n                                        validation={validatedFields.password}\r\n                                        type={visible ? \"text\" : \"password\"}\r\n                                        endAdornment={<InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={toggletVisibility}\r\n                                            //onMouseDown={handleMouseDownPassword}\r\n                                            >\r\n                                                {visible ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>}\r\n                                    >\r\n                                    </CustomFormField>\r\n                                )\r\n                            }}\r\n                        </VisibilityToggler>\r\n\r\n                        <Button\r\n                            disabled={!validatedFields.username.valid || !validatedFields.email.valid}\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >submit</Button>\r\n                    </form>\r\n                </div>\r\n                <h5 className=\"form__or\">\r\n                    - OR -\r\n            </h5>\r\n                <div\r\n                    className=\"formOauth\"\r\n                >\r\n                    <FacebookButton\r\n                        href=\"http://localhost:8001/api/v1/auth/oauth/facebook\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst CustomFormField = ({ field, type, onChange, label, styles, validation, endAdornment, isPassword = false }) => {\r\n    const theme = useTheme()\r\n    const isSmallViewport = useMediaQuery(theme.breakpoints.down(\"sm\"))\r\n    return (\r\n        <FormControl\r\n            fullWidth\r\n            error={!!validation.error}\r\n            variant=\"filled\"\r\n            required\r\n            className={styles.formField}\r\n            size={isSmallViewport ? \"small\" : \"medium\"}\r\n        >\r\n            <InputLabel htmlFor={label}\r\n            >{label}</InputLabel>\r\n            <FilledInput\r\n                id={label}\r\n                error={!!validation.error}\r\n                type={type}\r\n                value={field}\r\n                onChange={onChange}\r\n                endAdornment={\r\n                    validation.valid ?\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                            >\r\n                                <CheckCircleIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                        : isPassword ?\r\n                            endAdornment\r\n                            :\r\n                            null\r\n                }\r\n            />\r\n            {!!validation.error && <FormHelperText\r\n                classes={{ root: styles.helperText }}\r\n            >{validation.error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst VisibilityToggler = ({ children }) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const toggleVisibility = () => {\r\n        setVisible(prev => !prev)\r\n    }\r\n    return (\r\n        children(visible, toggleVisibility)\r\n    )\r\n}\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n    return <Grow direction=\"up\" ref={ref} {...props} />;\r\n});","import { Badge, Chip, Collapse } from '@material-ui/core';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { time_ago } from \"../../utils/datesUtils\"\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { GiphyFetch } from '@giphy/js-fetch-api'\r\nimport \"../../styles/feed/feed.scss\"\r\nimport { Transition } from 'react-transition-group';\r\nimport { CustomCircularProgress } from '../../components/components/CustomCircularProgress';\r\n\r\n\r\n\r\nconst Post = ({ message, selectPost, selectImg, isSelected = false }) => {\r\n    const [{ conversationData, error, loading }, setConversationData] = useState({ conversationData: null, error: null, loading: true })\r\n    const { user, created_at } = message\r\n    const time = useRef(time_ago(new Date(created_at).getTime()))\r\n\r\n    const chart = message.entities.chart ? message.entities.chart : null\r\n    const giphy = message.entities.giphy ? message.entities.giphy : null\r\n    //id ratio\r\n    const [{ gifUrl, gifLoading, gifError }, setGif] = useState({ gifUrl: \"\", gifLoading: false, gifError: null })\r\n\r\n    const getRandomNum = () => {\r\n        const randomLike = [0, 0, 1, 3, Math.round(Math.random() * 10)]\r\n        //console.log(randomLike, \"la arr\")\r\n        return randomLike[Math.round(Math.random() * 4)]\r\n    }\r\n    const randomNum = useRef(getRandomNum())\r\n\r\n    console.log(\"rereeenderoo\")\r\n\r\n    useEffect(() => {\r\n        if (giphy) {\r\n            setGif(prev => ({ ...prev, loading: true }))\r\n            const gf = new GiphyFetch('dly39yAKgF2Yppvpsyxi9mLIG35m1eiR')\r\n            gf.gif(giphy.id)\r\n                //.then(res => res.json())\r\n                .then(({ data }) => { setGif(prev => ({ ...prev, gifLoading: false, gifUrl: data.embed_url })) })\r\n                .catch(err => { setGif(prev => ({ ...prev, gifLoading: false, gifError: err.message })) })\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        //if (!isSelected) return;\r\n        console.log(\"mounting again\")\r\n        setConversationData(prev => ({ ...prev, loading: true }))\r\n        fetch(`https://api.stocktwits.com/api/2/streams/conversation/${message.id}.json`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                //error means no replies found for message\r\n                if (res.errors) {\r\n                    setConversationData({ error: true, conversationData: null, laoding: false })\r\n                }\r\n                setConversationData(prev =>\r\n                    ({ ...prev, conversationData: res, loading: false }))\r\n            })\r\n            .catch(err => {\r\n                setConversationData(prev =>\r\n                    ({ error: true, conversationData: null, laoding: false }))\r\n            })\r\n    }, [message])\r\n\r\n    const replyGuard = () => {\r\n        if (conversationData &&\r\n            conversationData.messages &&\r\n            conversationData.messages.length > 0) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    console.log(conversationData, \"conversdataaa\")\r\n    if (message.entities) {\r\n        console.log(message.entities, \"entitieees\")\r\n    }\r\n    return (\r\n        <div className={isSelected ? \"post is-selected\" : \"post\"}\r\n            onClick={() => { selectPost(message) }}\r\n        >\r\n            <div className=\"post-avatar\">\r\n                <img className=\"avatar\" src={user.avatar_url} alt={user.username} />\r\n            </div>\r\n            <div className=\"post-body\">\r\n                <div className=\"post-header\">\r\n                    {message.entities.sentiment ?\r\n                        <Chip\r\n                            size=\"small\"\r\n                            label={message.entities.sentiment.basic}\r\n                            style={{marginRight: \"1rem\"}}\r\n                        />\r\n                        : null\r\n                    }\r\n                    <span>\r\n                        {time.current}\r\n                    </span>\r\n                </div>\r\n                <p className=\"message-text\">\r\n                    {message.body}\r\n                </p>\r\n                {chart && <img src={chart.original} alt=\"chart caption\"\r\n                    className={isSelected ? \"body-img bigger\" : \"body-img\"}\r\n                    onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        selectImg(chart.original)\r\n                    }}\r\n                />\r\n                }\r\n                {giphy && <Giff {...{ gifUrl, gifLoading, gifError }} />}\r\n                <div className=\"post-footer\">\r\n                    <Badge badgeContent={randomNum.current} color=\"secondary\"\r\n                        className=\"badge\"\r\n                    >\r\n                        <FavoriteBorderIcon />\r\n                    </Badge>\r\n                    {\r\n                        error ?\r\n                            <Badge badgeContent={0} color=\"secondary\"\r\n                                className=\"badge\"\r\n                            >\r\n                                <ChatBubbleOutlineIcon />\r\n                            </Badge>\r\n                            :\r\n                            conversationData ?\r\n                                <Badge badgeContent={conversationData.parent.conversation.replies} color=\"secondary\"\r\n                                    className=\"badge\"\r\n                                >\r\n                                    <ChatBubbleOutlineIcon />\r\n                                </Badge>\r\n                                :\r\n                                <ChatBubbleOutlineIcon />\r\n                    }\r\n\r\n                </div>\r\n                <div\r\n                    \r\n                >\r\n\r\n                    <Transition\r\n                        in={isSelected}\r\n                        unmountOnExit\r\n                        mountOnEnter\r\n\r\n                    >\r\n                        {(state) => {\r\n\r\n                            return <Collapse\r\n                                in={conversationData && conversationData.messages}\r\n                            >\r\n\r\n                                <div\r\n\r\n                                className=\"post-reply-list\"\r\n                                >\r\n                                    {conversationData && conversationData.messages && conversationData.messages.map((msg) => <Reply message={msg} key={msg.user.username} />)}\r\n\r\n                                </div>\r\n\r\n                            </Collapse>\r\n                        }}\r\n                    </Transition>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst defaultStyles = {\r\n    // display: \"flex\", flexDirection: \"column\",\r\n    // transition: \"opacity 0.5s ease\",\r\n    background: \"orange\"\r\n    //opacity: 0\r\n}\r\nconst transitionStyles = {\r\n    entering: { opacity: 0 },\r\n    entered: { opacity: 1 },\r\n    exiting: { opacity: 1 },\r\n    exited: { opacity: 0 },\r\n}\r\nconst Giff = ({ gifUrl, gifLoading, gifError }) => {\r\n\r\n    return (\r\n        <> { gifLoading ? <p>Loading...</p>\r\n            : gifError ? <p>{gifError}</p>\r\n                :\r\n                <iframe src={gifUrl} width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>}\r\n        </>\r\n    )\r\n\r\n}\r\nPost.defaultProps = {\r\n    selectPost: (param) => null\r\n}\r\n\r\nconst Reply = ({ message }) => {\r\n    const { user, created_at } = message\r\n    return (\r\n        <div\r\n        className=\"post-reply\"\r\n        >\r\n            <div className=\"post-avatar\">\r\n                <img className=\"avatar\" src={user.avatar_url} alt={user.username} />\r\n            </div>\r\n            <div className=\"post-body\">\r\n                <div className=\"post-header\">\r\n                    {message.entities.sentiment ?\r\n                        <Chip\r\n                            size=\"small\"\r\n                            label={message.entities.sentiment.basic}\r\n                        />\r\n                        : null\r\n                    }\r\n                    {/* <span>\r\n                        {time_ago(time)}\r\n                    </span> */}\r\n                </div>\r\n                <p className=\"message-text\">\r\n                    {message.body}\r\n                </p>\r\n                <div className=\"post-footer\">\r\n                    <Badge badgeContent={0} color=\"secondary\">\r\n                        <FavoriteBorderIcon />\r\n                    </Badge>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Post)","import React, { useEffect, useRef, useState } from 'react'\r\n//import { usercontext, useUserLayer } from '../../UserContext'\r\nimport Post from './Post'\r\nimport gsap from \"gsap\"\r\nimport { Backdrop, Button, Dialog, IconButton } from '@material-ui/core'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nexport class FollowingDispatcher extends React.Component {\r\n\r\n    //static contextType = usercontext\r\n    constructor(props, context) {\r\n        super(props, context)\r\n    }\r\n    state = {\r\n        loading: true,\r\n        data: null,\r\n        error: null,\r\n        responseType: null,\r\n        backdropOpen: false,\r\n        selectedPost: null,\r\n        rotatingIcon: false,\r\n        imgSelected: null\r\n    }\r\n    // messageRef = React.createRef()\r\n    // timeline = gsap.timeline()\r\n\r\n    componentDidMount() {\r\n        if (this.props.valores.userState.ready) {\r\n\r\n            this.fetchInterests()\r\n        }\r\n    }\r\n\r\n    //we have to sort all message by date, and store them by chunks \r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(prevState, prevProps, \"prevv propss\")\r\n        if (prevState.data !== this.state.data) {\r\n            console.log(this.state.data, \"data recibida\")\r\n\r\n        }\r\n        //in case user navigate to /interests directly in url\r\n        if (prevProps.valores !== this.props.valores) {\r\n            console.log(\"valores change\", this.props.valores.userState.ready)\r\n            if (this.props.valores.userState.ready) {\r\n                this.fetchInterests()\r\n            }\r\n        }\r\n    }\r\n\r\n    prepareData(res) {\r\n        console.log(res.data, \"jooooiia\")\r\n        if (!res.data || !res.data.length) {\r\n            console.log(\"es nulo\")\r\n            return null\r\n        }\r\n        const sortedData = res.data\r\n            .map(msg => {\r\n                const unixTime = new Date(msg.created_at).getTime()\r\n                msg.unixTime = unixTime\r\n                return msg\r\n            })\r\n            .sort((previous, current) => current.unixTime - previous.unixTime);\r\n        console.log(sortedData, \"sortedData\")\r\n        if (this.state.responseType === \"trending\") {\r\n            return sortedData\r\n        }\r\n        if (this.state.responseType === \"interests\") {\r\n            const chunkedData = this.chunkData(sortedData, 30)\r\n            return chunkedData\r\n        }\r\n    }\r\n\r\n    chunkData(arr, postsXChunk) {\r\n        let result = []\r\n        const chunkNumber = Math.round(arr.length / postsXChunk)\r\n        this.props.setChunkCount(chunkNumber)\r\n        const sobrantes = arr.length - postsXChunk * chunkNumber\r\n        let iteration = 0\r\n        Array(chunkNumber).fill(null).forEach(() => {\r\n            result = [...result, arr.slice(iteration, iteration + 30)]\r\n            iteration += 30\r\n        })\r\n        if (sobrantes) result = [...result, arr.slice(iteration, iteration + sobrantes)];\r\n\r\n        return result\r\n    }\r\n    fetchInterests() {\r\n        this.setState({\r\n            rotatingIcon: true,\r\n            data: null,\r\n        })\r\n        fetch(`http://localhost:8001/api/v1/interests/populate?email=${this.props.valores.userState.info.email}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({ responseType: res.type })\r\n                //this.props._setResponseType(res.type)\r\n                const readyData = this.prepareData(res)\r\n                console.log(readyData, \"readyData bibor\")\r\n                this.setState({\r\n                    loading: false,\r\n                    data: readyData,\r\n                    rotatingIcon: false\r\n                })\r\n                if (this.state.responseType === \"interests\") {\r\n                    this.props._setIsDataReadyScroll(readyData !== null)\r\n                }\r\n            })\r\n            .catch(err => { this.setState({ laoding: false, error: err.message, rotatingIcon: false }) })\r\n    }\r\n\r\n    selectPost = (post) => {\r\n        // console.log(this.state.data, \"dataoo\")\r\n        //const selection = this.state.data.find(post => post.id === id)\r\n        console.log(\"selectpost fired\")\r\n        this.setState({ selectedPost: post, backdropOpen: true })\r\n    }\r\n    unselectPost = () => {\r\n        { this.setState({ backdropOpen: false, selectedPost: null }) }\r\n    }\r\n\r\n    selectImg = (url) => {\r\n        console.log(\"selectIMG fired\")\r\n\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            imgSelected: url\r\n        }))\r\n    }\r\n\r\n    unselectImg = () => {\r\n        this.setState(prev => ({ ...prev, imgSelected: null }))\r\n    }\r\n    render() {\r\n        console.log(this.props.valores.userState, \"wopo\")\r\n        //console.log(this.context.userState.info, \"los proops\")\r\n        const { data, loading, responseType, backdropOpen, selectedPost, rotatingIcon, imgSelected } = this.state\r\n        console.log(data, \"lo dataa\")\r\n        const { currentChunk } = this.props\r\n        if (loading) {\r\n            return <h3>Loading...</h3>\r\n        }\r\n\r\n        if (responseType === \"interests\") {\r\n            return (\r\n                <>\r\n                    <div>\r\n                        {data && data.length &&\r\n                            data.slice(0, currentChunk).map((chunk, index) => {\r\n                                console.log(chunk, \"qe collons chu\")\r\n                                return (<PostChunk key={index} {...{ chunk }}\r\n                                    selectPost={this.selectPost}\r\n                                    selectImg={this.selectImg}\r\n                                />\r\n                                )\r\n                            }\r\n                            )\r\n                        }\r\n                    </div>\r\n                    {selectedPost &&\r\n                        <ModalSelection\r\n                            isOpen={backdropOpen}\r\n                            unselectPost={this.unselectPost}>\r\n                            <Post message={selectedPost} selectPost={this.selectPost} isSelected={true} />\r\n                        </ModalSelection>\r\n                    }\r\n                    {\r\n                        imgSelected &&\r\n                        <ModalImg\r\n                            open={!!imgSelected}\r\n                            unselectImg={this.unselectImg}\r\n                        >\r\n                            <img src={imgSelected} alt=\"image\" />\r\n                        </ModalImg>\r\n                    }\r\n\r\n                </>\r\n            )\r\n        }\r\n        if (responseType === \"trending\") {\r\n            return (\r\n                <>\r\n                    <Button\r\n                        startIcon={<RefreshIcon className={rotatingIcon ? \"rotating-icon\" : \"\"} />}\r\n                        onClick={() => { this.fetchInterests() }}\r\n                    >\r\n                        Refresh\r\n                </Button>\r\n                    {data && <GsapFadeInStagger>\r\n                        {data.map(message => (\r\n                            <Post {...{ message }}\r\n                                selectPost={this.selectPost}\r\n                            />\r\n                        ))}\r\n                    </GsapFadeInStagger>}\r\n\r\n                    {selectedPost &&\r\n                        <ModalSelection\r\n                            isOpen={backdropOpen}\r\n                            unselectPost={this.unselectPost}>\r\n                            <Post message={selectedPost} selectPost={this.selectPost} isSelected={true} />\r\n                        </ModalSelection>\r\n                    }\r\n\r\n                </>\r\n            )\r\n        }\r\n        return <p>No responseType returned from server</p>\r\n    }\r\n}\r\n\r\nconst ModalSelection = ({ unselectPost, children, isOpen }) => {\r\n    return (\r\n        <Dialog open={isOpen}\r\n            onClick={unselectPost}\r\n            //style={{ zIndex: 100 }}\r\n            maxWidth={false}\r\n        //fullScreen\r\n        >\r\n\r\n            { children}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst ModalImg = ({ children, open, unselectImg }) => {\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={unselectImg}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <div\r\n                style={{ position: \"relative\" }}\r\n            >\r\n                {children}\r\n                <IconButton\r\n                    onClick={unselectImg}\r\n                >\r\n                    <CloseIcon\r\n                        style={{ position: \"absolute\", right: \"0\", top: \"0\", fontSize: \"35px\" }}\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst GsapFadeInStagger = ({ children }) => {\r\n    const chunkRef = useRef(null)\r\n    const timeline = gsap.timeline()\r\n    useEffect(() => {\r\n        timeline.to(chunkRef.current.childNodes, {\r\n            //y: 100,\r\n            opacity: 1,\r\n            ease: \"power3.inOut\",\r\n            duration: 0.4,\r\n            stagger: 0.1\r\n        });\r\n    }, [])\r\n    return (\r\n        <div ref={chunkRef}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PostChunk = ({ chunk, selectPost, selectImg }) => {\r\n\r\n    return <GsapFadeInStagger>\r\n        {chunk.map((message, index) => (\r\n            <Post key={message.id} {...{ message, selectPost, selectImg }} />\r\n        ))}\r\n    </GsapFadeInStagger>\r\n}\r\n\r\n\r\nconst Koko = ({ message }) => {\r\n    return <div>{message.body}</div>\r\n}","import { debounce } from '@material-ui/core'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useIntersection } from 'react-use'\r\n\r\nexport const PopulateOnScroll = ({ children }) => {\r\n    const [chunkCount, setChunkCount] = useState(0)\r\n    const [isDataReadyScroll, _setIsDataReadyScroll] = useState(false)\r\n    const [currentChunk, setCurrentChunk] = useState(1)\r\n    const interestionRef = useRef(null)\r\n    const intersection = useIntersection(interestionRef, {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 1\r\n    })\r\n\r\n    const debounce = useRef(false)\r\n    useEffect(() => {\r\n        console.log(intersection, \"interseccion baby\")\r\n        if (!isDataReadyScroll) return;\r\n        if (intersection && intersection.intersectionRatio < 1.5 && currentChunk <= chunkCount) {\r\n            console.log(\"interesected\")\r\n            if (!debounce.current) {\r\n                debounce.current = true\r\n                setCurrentChunk(prev => prev + 1)\r\n                console.log(\"intersection crossed\")\r\n                let timeout = setTimeout(() => {\r\n                    debounce.current = false\r\n                    clearTimeout(timeout)\r\n                }, 800)\r\n            }\r\n        }\r\n    }, [intersection])\r\n    return (\r\n        <div>\r\n            {children({ setChunkCount, _setIsDataReadyScroll, currentChunk })}\r\n            {/* <div style={{ height: \"20px\" }}\r\n                ref={interestionRef}\r\n            >\r\n            </div> */}\r\n\r\n                <div style={{ height: \"20px\" }}\r\n                    ref={interestionRef}\r\n                >\r\n                </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n//import {HashRouter, Route, Switch} from \"react-dom\"\r\n\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CssBaseline } from \"@material-ui/core\";\r\nimport { Navbar } from \"./components/Navbar\";\r\nimport { Sidebar } from \"./components/Sidebar\";\r\nimport { Principal } from \"./views/principal/principal\";\r\nimport { KeymetricsChart } from \"./charts/KeymetricsChart\"\r\nimport { CovidSection2 } from \"./views/covid/CovidSection2\";\r\nimport { News } from \"./views/principal/elements/News\";\r\nimport { Financials } from \"./views/company/Financials\";\r\nimport { useUILayer } from \"./ContextUI\";\r\nimport { CompanySection } from \"./views/company/CompanySection\";\r\nimport { IndexesController } from \"./views/indexes/IndexesController\";\r\nimport { useDataLayer } from \"./Context\";\r\nimport { useEngine } from \"./portfolio/Engine\";\r\nimport { Middleware } from \"./dashboard/Middleware2\";\r\nimport { useTemporaryPossesions } from \"./useTemporaryPossesions\";\r\nimport { UserContextt, useUserLayer } from \"./UserContext\";\r\nimport { StackedColumn } from \"./charts/StackedColumn\";\r\nimport { ControllerCompany } from \"./views/company/ControllerCompany\";\r\nimport { Overlay } from \"./components/Overlay\";\r\nimport { PeopleRouter } from \"./Personas/PeopleRouter\";\r\nimport { FeedViews } from \"./views/seguidores/FeedViews\";\r\nimport { Login } from \"./Auth/Login\";\r\nimport { ProtectedRoute } from \"./Auth/ProtectedRoute\";\r\nimport { Register } from \"./Auth/Register\";\r\nimport { FollowingDispatcher } from \"./views/seguidores/FollowingDispatcher\";\r\nimport { PopulateOnScroll } from \"./views/seguidores/PopulateOnScroll\";\r\nimport { useIAuthh } from \"./Auth/useIAuth\";\r\nimport { ContactDetails } from \"./Auth/ContactDetails\";\r\nimport { convertUnixToHuman } from \"./utils/datesUtils\";\r\nimport { AuthMiddleware, UpdateInfoView } from \"./Auth/UpdateInfoView\";\r\nimport { useRemoveCredits } from \"./utils/useRemoveCredits\";\r\nimport { ProfileSidebar } from \"./Auth/ProfileSidebar\";\r\nimport { useHandleProfileImage } from \"./utils/useHandleProfileImage\";\r\nimport { OperationList } from \"./Personas/OperationList\";\r\nimport Cookie from \"js-cookie\"\r\nimport { RssFeedTwoTone } from \"@material-ui/icons\";\r\nimport { useSocialAuth } from \"./utils/useSocialAuth\";\r\nimport { CSSTransition, Transition, TransitionGroup } from \"react-transition-group\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    position: \"relative\"\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    overflowX: \"hidden\",\r\n    position: \"relative\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      padding: \"24px 60px\",\r\n      paddingTop: 0,\r\n    }\r\n  },\r\n  toolbar: {\r\n    width: \"100%\",\r\n    height: (props) => props.location.pathname.split(\"/\")[1] === \"companies\" ? \"112px\" : \"64px\"\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    transition: \"background 0.4s ease\",\r\n    backgroundColor: (props) => props.showOverlay ? \"black\" : \"transparent\"\r\n  }\r\n}));\r\n\r\nconst date = convertUnixToHuman(Date.now())\r\n\r\n//we need to check when we buy or sell a new stock, the dashboard charts includes it\r\nconst App = () => {\r\n  //useSocialAuth()\r\n  useEngine()\r\n\r\n  const { loading } = useIAuthh()\r\n  //const loading = false\r\n\r\n  const { userState, userDispatch } = useUserLayer()\r\n  const { state, dispatch } = useDataLayer()\r\n  console.log(userState.info, \"infoo userstate\")\r\n  useHandleProfileImage()\r\n  useEffect(() => {\r\n    if (!userState.isAuthenticated) {\r\n      return\r\n    }\r\n    const { email } = userState.info\r\n    if (email) {\r\n      fetch(\"http://localhost:8001/api/v1/operations\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ email }),\r\n        method: \"POST\"\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          res.readyOperations && dispatch({ type: \"ADD_DIRECT_HISTORY\", payload: res.readyOperations })\r\n\r\n          res.currentStocks && dispatch({\r\n            type: \"SET_INITIAL_POSSESIONS\", payload: {\r\n              stocks: res.currentStocks,\r\n              cash: res.userCash\r\n            }\r\n          })\r\n\r\n          if (res.userData) {\r\n            //we extract all keys but the image as it will be handled separately\r\n            const { image, ...rest } = res.userData\r\n            res.userData.static_image ?\r\n              userDispatch({ type: \"ADD_USER_INFO\", payload: rest })\r\n              :\r\n              userDispatch({ type: \"ADD_USER_INFO\", payload: { ...rest, imageUrl: image } })\r\n          }\r\n\r\n\r\n\r\n          console.log(\"hellow\")\r\n          res.interests && dispatch({ type: \"STORE_USER_INTEREST\", payload: res.interests });\r\n          console.log(\"hellowa\")\r\n          res.uniqueStocks &&\r\n            dispatch({ type: \"SET_INITIAL_UNIQUE_STOCKS\", payload: res.uniqueStocks })\r\n          console.log(\"hellowaa\")\r\n          if (!res.initialDate) {\r\n            //means portfolio has been created today\r\n            dispatch({ type: \"SET_FIRST_SERIE\", payload: true })\r\n          } else {\r\n            if (res.initialDate.split(\"T\")[0] === date) {\r\n              //this is set as well in the stock shop everytime wew buy firstDay, but this will handle user refresh situation.\r\n              dispatch({ type: \"SET_FIRST_SERIE\", payload: true })\r\n            }\r\n          }\r\n          console.log(\"hellowaai\")\r\n          dispatch({ type: \"ENABLE\" })\r\n        })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n    else {\r\n      throw new Error(\"the user is authenticated but we don't have its credentials, wtf\")\r\n    }\r\n\r\n  }, [userState.isAuthenticated, userState.email])\r\n\r\n\r\n  const saveTokenInLocalstorage = () => {\r\n    const token = Cookie.getJSON(\"token\")\r\n    if (token) {\r\n      localStorage.setItem(\"token\", token)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    saveTokenInLocalstorage()\r\n    const worker = new Worker(\"worker.js\")\r\n    worker.postMessage(\"comeme el culo\")\r\n    worker.onmessage = e => {\r\n      console.log(e.data, \"web worker funciona\")\r\n    }\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(history, location, \"a ver diferencias\")\r\n\r\n  const [selection, setSelection] = useState(\"\");\r\n  const { setSidebarOpen, showOverlay } = useUILayer()\r\n  const classes = useStyles({ location, showOverlay });\r\n\r\n  const [width, setWidth] = useState(0);\r\n\r\n\r\n\r\n  // const inicializadorStadoPrueba = () => {\r\n  //   dispatch({ type: \"ADD_DIRECT_HISTORY\", payload: userActivity })\r\n  // }\r\n  // useTemporaryPossesions()\r\n  // useEffect(() => {\r\n  //   inicializadorStadoPrueba()\r\n  // }, [])\r\n\r\n\r\n  console.log(state.areHistoricPricesReady, \"ostiau\")\r\n\r\n  useEffect(() => {\r\n    console.log(selection, \"seleccciooon\")\r\n    if (selection) {\r\n      console.log(selection, \"que webox\")\r\n      const { name, ticker } = selection\r\n      dispatch({ type: \"SET_COMPANY\", payload: { name, ticker } })\r\n      history.push(`/companies/overview/${selection.ticker}`)\r\n    }\r\n  }, [selection])\r\n\r\n\r\n  useEffect(() => {\r\n    const { name, ticker } = state.currentCompany\r\n    if (name && ticker) {\r\n      dispatch({\r\n        type: \"ADD_VISITED_COMPANY\",\r\n        payload: { ticker: ticker.toUpperCase(), name }\r\n      })\r\n\r\n    }\r\n  }, [state.currentCompany])\r\n\r\n\r\n  // console.log(authState, \"tu muelo\")\r\n  // if (authState.isPending) {\r\n  //   return <div>puto maricon ...</div>\r\n  // }\r\n\r\n  // console.log(selection, \"seleeeection\")\r\n  // console.log(userState.info, \"que colluns\")\r\n\r\n  const authRoutes = [\r\n    { path: \"/login\", Component: Login },\r\n    { path: \"/register\", Component: Register },\r\n  ]\r\n  //used to trick switch and render route as if it was the current url (we'll show login/register overlay)\r\n  let background = location.state && location.state.background\r\n\r\n  if (loading) {\r\n    return <h4>Checking credentials</h4>\r\n  }\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Overlay />\r\n      <CssBaseline />\r\n      <Navbar />\r\n      <Sidebar />\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Button onClick={() => { history.push(\"/pruebaPorfolio\") }}></Button>\r\n        <Switch location={background || location}>\r\n          <Route path=\"/companies\">\r\n            <ControllerCompany />\r\n          </Route>\r\n\r\n          <Route path=\"/news/:category\" >\r\n            <News principal={true} />\r\n          </Route>\r\n          <Route path=\"/covid19\" >\r\n            <CovidSection2 />\r\n          </Route>\r\n\r\n          <Route path=\"/indexes/:field\" >\r\n            <IndexesController />\r\n          </Route>\r\n          <Route path=\"/portfolio\" >\r\n            <Middleware />\r\n          </Route>\r\n          <Route path=\"/operations\">\r\n            <AuthMiddleware>\r\n              <OperationList operations={state.userActivity} />\r\n            </AuthMiddleware>\r\n          </Route>\r\n          <Route path=\"/people\" >\r\n            <PeopleRouter />\r\n          </Route>\r\n          <Route path=\"/proba\" >\r\n            <StackedColumn ticker=\"nflx\" />\r\n          </Route>\r\n          {/* <Route path=\"/feed\" >\r\n            <FeedViews />\r\n          </Route> */}\r\n          <Route path=\"/feed\" >\r\n            <UserContextt.Consumer>\r\n              {values => (\r\n                <PopulateOnScroll>\r\n                  {({ _setIsDataReadyScroll, currentChunk, setChunkCount }) => (\r\n                    <FollowingDispatcher valores={values}\r\n                      {...{ _setIsDataReadyScroll, currentChunk, setChunkCount }} />\r\n                  )\r\n                  }\r\n                </PopulateOnScroll>\r\n              )}\r\n            </UserContextt.Consumer>\r\n          </Route>\r\n          <Route path=\"/protectedRuta\" >\r\n            <ProtectedRoute />\r\n          </Route>\r\n          <Route path=\"/uploads\">\r\n            <AuthMiddleware>\r\n              <UpdateInfoView />\r\n            </AuthMiddleware>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Principal setSelection={setSelection} />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {background && <>  <Route path=\"/login\" >\r\n          <Login />\r\n        </Route>\r\n          <Route path=\"/register\" >\r\n            <Register />\r\n          </Route>\r\n        </>}\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst defaultStyle = {\r\n  transition: `opacity 500ms ease-in-out`,\r\n  opacity: 0,\r\n}\r\n\r\nconst transitionStyles = {\r\n  entering: { opacity: 1 },\r\n  entered: { opacity: 1 },\r\n  exiting: { opacity: 0 },\r\n  exited: { opacity: 0 },\r\n};\r\n\r\nexport default App;\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useDataLayer } from \"../Context\"\r\nimport { useUserLayer } from \"../UserContext\"\r\nimport { convertHumanToUnixInit } from \"../utils/datesUtils\"\r\nimport { useLogicPruebas } from \"./logicPruebasConAdd\"\r\n\r\n\r\n//1. Deducimos del historial de operaciones los Tickers que necesitamos\r\n//2. Enviamos esos tickers a nuestro servidor, obtnemos sus precios historicos y los devolvemos de vuelta\r\n//3. combinamos y tranformamos esos precios en el cliente y guardamos el resultado en el estado\r\n//4. el resultado nos sirve para conocer el precio de todas las acciones para cualquier fecha y consultarlo de manera muy eficiente\r\n\r\n\r\nexport const useEngine = () => {\r\n\r\n    useLogicPruebas()\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const { userState } = useUserLayer()\r\n    const { missingTicker } = state\r\n    const { stocks } = state.currentPossesions\r\n\r\n    //WHAT if we don't have any ticker yet?\r\n\r\n    const getPricesHistory = async () => {\r\n        console.log(userState.info, \"fetch price ejecutao\")\r\n        try {\r\n            const request = await fetch(\"http://localhost:8001/api/v1/prices/portfolio_prices\", {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(stocks)\r\n            })\r\n            const data = await request.json()\r\n            return data\r\n        }\r\n        catch (err) {\r\n            throw new Error(err, \" aquiii puta\")\r\n        }\r\n    }\r\n    //missing ticker is a tuple for now\r\n    //deberiamos retornar una promesa aquí\r\n    // const getPricesHistoryMissingTicker = async (missingTicker) => {\r\n    //     // console.log(missingTicker, \"totsstocks missing tikcer\")\r\n    //     // console.log(stocks, \"totsstocks\")\r\n    //     // console.log(JSON.stringify(stocks, \"totsstocks\"))\r\n    //     //we need arry format in the server so we use filter intead of find\r\n    //     const misingTickerOperationInfo =\r\n    //         stocks.\r\n    //             filter(asset => asset.ticker.toUpperCase() === missingTicker.toUpperCase())\r\n    //     console.log(misingTickerOperationInfo, \"woot\")\r\n    //     try {\r\n    //         const request = await fetch(\"http://localhost:8001/portfolio2?missingTicker=true\", {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/json\"\r\n    //             },\r\n    //             method: \"POST\",\r\n    //             body: JSON.stringify(misingTickerOperationInfo)\r\n    //         })\r\n    //         const data = await request.json()\r\n    //         return data\r\n    //     }\r\n    //     catch (err) {\r\n    //         throw new Error(err, \" aquiii puta\")\r\n    //     }\r\n    // }\r\n\r\n\r\n    // //only one at a time right now\r\n    // //this is pointless because we won't know the close proce untill tomorrow\r\n    // //that may be only be usefull when dealing when with real time data\r\n    // const updateData = (data, cb) => {\r\n    //     console.log(data, \"la jodida data\")\r\n    //     const newCompanyData = data[0][missingTicker]\r\n    //     let portfolioHistoryCopy = { ...state.portfolioHistory }\r\n    //     let portfolioHistoryByCompanyCopy = { ...state.portfolioHistoryByCompany }\r\n    //     console.log(portfolioHistoryCopy, \"que wobo\")\r\n    //     console.log(newCompanyData, \"ku pasau\")\r\n    //     newCompanyData.forEach(register => {\r\n    //         const date = register.date.split(\"T\")[0]\r\n    //         if (state.portfolioHistory[date]) {\r\n    //             portfolioHistoryCopy[date] = {\r\n    //                 ...portfolioHistoryCopy[date],\r\n    //                 [missingTicker]: { close: register.close }\r\n    //             }\r\n    //         }\r\n    //         else {\r\n    //             portfolioHistoryCopy[date] = {\r\n    //                 [missingTicker]: { close: register.close }\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     let newCompanyChartData = newCompanyData.map(register => {\r\n    //         const date = register.date.split(\"T\")[0]\r\n    //         return [\r\n    //             convertHumanToUnixInit(date),\r\n    //             register[\"adjClose\"],\r\n    //             register[\"adjHigh\"],\r\n    //             register[\"adjLow\"],\r\n    //             register[\"adjOpen\"]\r\n    //         ]\r\n    //     })\r\n    //     console.log(portfolioHistoryCopy, \"que wobo2\")\r\n    //     console.log(newCompanyChartData, \"perula\", JSON.parse(JSON.stringify(missingTicker)))\r\n    //     portfolioHistoryByCompanyCopy = {\r\n    //         ...portfolioHistoryByCompanyCopy,\r\n    //         [missingTicker]: newCompanyChartData\r\n    //     }\r\n    //     console.log(portfolioHistoryByCompanyCopy, \"perula1\", JSON.parse(JSON.stringify(missingTicker)))\r\n    //     dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_COMPANY_CHART_READY\", payload: portfolioHistoryByCompanyCopy })\r\n\r\n\r\n    //     dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_DATE\", payload: portfolioHistoryCopy })\r\n\r\n    //     cb()\r\n    // }\r\n\r\n    const prepareData = (arr, cb) => {\r\n\r\n        console.log(arr, \"la arrey\")\r\n        const worker = new Worker(\"/worker.js\")\r\n        worker.postMessage(arr)\r\n        worker.onmessage = e => {\r\n            const { portfolioHistoryByDate, portfolioHistoryByCompanies } = e.data\r\n            console.log(portfolioHistoryByDate, portfolioHistoryByCompanies, \"errr work\")\r\n            dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_COMPANY_CHART_READY\", payload: portfolioHistoryByCompanies })\r\n            dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_DATE\", payload: portfolioHistoryByDate })\r\n            cb()\r\n            console.log(portfolioHistoryByCompanies, \"ku pusu\")\r\n\r\n            console.log(arr, \"averaaaa\")\r\n            console.log(portfolioHistoryByDate, \"master\")\r\n        }\r\n    }\r\n\r\n    const __init = async () => {\r\n        //get price data of the user possesions\r\n        console.log(stocks.length, \"tokkee\")\r\n        if (!stocks.length) return\r\n        const initialData = await getPricesHistory()\r\n        console.log(initialData, \"initialprices\")\r\n        //ojo aquí el type que obtemenos de la initialData, \r\n        prepareData(initialData, () => {\r\n            dispatch({ type: \"SET_ARE_HISTORIC_PRICES_READY\", payload: true })\r\n        })\r\n    }\r\n\r\n    //initialize the app\r\n    useEffect(() => {\r\n\r\n        if (state.setPruebaReady) {\r\n            __init()\r\n        }\r\n    }, [state.setPruebaReady])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if(state.setPruebaReady){\r\n    //         console.log(missingTicker, \"missingTicker otstia\")\r\n    //         dispatch({\r\n    //                 type: \"SET_ARE_HISTORIC_PRICES_READY\",\r\n    //                 payload: false\r\n    //             })\r\n    //         const asyncWrapper = async () => {\r\n    //             const missingData = await getPricesHistoryMissingTicker(missingTicker)\r\n    //             updateData(missingData, () => {\r\n    //                 dispatch({dispatch: \"RESTART_MISSING_TICKER\"})\r\n    //                 dispatch({ type: \"SET_ARE_HISTORIC_PRICES_READY\", payload: true })\r\n    //             })\r\n    //         }\r\n    //         asyncWrapper()\r\n    //     }\r\n\r\n    // }, [missingTicker])\r\n\r\n\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useUserLayer } from '../UserContext'\r\n\r\n//we have to handle image separately\r\nexport const useHandleProfileImage = () => {\r\n\r\n    const { userState, userDispatch } = useUserLayer()\r\n    useEffect(() => {\r\n        if (!userState.isAuthenticated) {\r\n            return\r\n        }\r\n        if (!userState.info.static_image) {\r\n            //we already habe handled the image in the useEffect of above\r\n            return\r\n        }\r\n        console.log(userState, \"userState\")\r\n        const { email } = userState.info\r\n\r\n        fetch(\"http://localhost:8001/api/v1/users/image\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email }),\r\n            method: \"POST\"\r\n        })\r\n            //we need to manually catch the error otherwise empty image will be passed as payload.\r\n            .then(res => {\r\n                if (!res.ok) throw new Error(\"no image, is not really an error\")\r\n                return res\r\n            })\r\n            .then(res => res.blob())\r\n            .then(res => { userDispatch({ type: \"UPDATE_IMAGE\", payload: res }) })\r\n            .catch(err => { alert(err.message) })\r\n\r\n\r\n    }, [userState.isAuthenticated, userState.info.static_image])\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"./styles/main.css\"\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { ContextProvider } from './Context';\r\nimport { UIProvider } from './ContextUI';\r\nimport { UserContext } from './UserContext';\r\n\r\n//hasrouter won't work with okta\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserContext>\r\n      <ContextProvider>\r\n        <UIProvider>\r\n          <BrowserRouter>\r\n            <App />\r\n          </BrowserRouter>\r\n        </UIProvider>\r\n      </ContextProvider>\r\n    </UserContext>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n{/*</Security> */ }\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}