[{"C:\\Users\\gonza\\finance-app\\src\\UserContext.js":"1","C:\\Users\\gonza\\finance-app\\src\\portfolio\\logicPruebasConAdd.js":"2","C:\\Users\\gonza\\finance-app\\src\\Personas\\UserItem.tsx":"3","C:\\Users\\gonza\\finance-app\\src\\components\\components\\CustomCircularProgress.js":"4","C:\\Users\\gonza\\finance-app\\src\\components\\subNavigations\\CompanyNav.js":"5","C:\\Users\\gonza\\finance-app\\src\\portfolio\\StockShop.js":"6","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Nasdaq.js":"7","C:\\Users\\gonza\\finance-app\\src\\views\\company\\KeyMetrics.js":"8","C:\\Users\\gonza\\finance-app\\src\\dashboard\\AssetStructure.js":"9","C:\\Users\\gonza\\finance-app\\src\\charts\\linechart.js":"10","C:\\Users\\gonza\\finance-app\\src\\components\\TransitionComponent.js":"11","C:\\Users\\gonza\\finance-app\\src\\Auth\\Register.js":"12","C:\\Users\\gonza\\finance-app\\src\\Auth\\useIAuth.js":"13","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Middleware2.js":"14","C:\\Users\\gonza\\finance-app\\src\\App.js":"15","C:\\Users\\gonza\\finance-app\\src\\components\\Navbar.js":"16","C:\\Users\\gonza\\finance-app\\src\\portfolio\\portfolioGenerator2.js":"17","C:\\Users\\gonza\\finance-app\\src\\index.js":"18","C:\\Users\\gonza\\finance-app\\src\\useTemporaryPossesions.js":"19","C:\\Users\\gonza\\finance-app\\src\\useAuth.js":"20","C:\\Users\\gonza\\finance-app\\src\\SignIn2.js":"21","C:\\Users\\gonza\\finance-app\\src\\SignIn.js":"22","C:\\Users\\gonza\\finance-app\\src\\RegistrationForm.js":"23","C:\\Users\\gonza\\finance-app\\src\\components\\Overlay.js":"24","C:\\Users\\gonza\\finance-app\\src\\charts\\KeymetricsChart.js":"25","C:\\Users\\gonza\\finance-app\\src\\Auth\\ProtectedRoute.js":"26","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\IndexesController.js":"27","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\PopulateOnScroll.js":"28","C:\\Users\\gonza\\finance-app\\src\\SignInForm.js":"29","C:\\Users\\gonza\\finance-app\\src\\utils\\useViewport.js":"30","C:\\Users\\gonza\\finance-app\\src\\portfolio\\PortfolioPriceChart.js":"31","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Marcador.js":"32","C:\\Users\\gonza\\finance-app\\src\\components\\Searcher2.js":"33","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\Post.js":"34","C:\\Users\\gonza\\finance-app\\src\\charts\\DonutChart.js":"35","C:\\Users\\gonza\\finance-app\\src\\utils\\Pipes.js":"36","C:\\Users\\gonza\\finance-app\\src\\charts\\indexesChart2.js":"37","C:\\Users\\gonza\\finance-app\\src\\utils\\useFatch.js":"38","C:\\Users\\gonza\\finance-app\\src\\components\\NewsItem.js":"39","C:\\Users\\gonza\\finance-app\\src\\views\\company\\Rows.js":"40","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\FollowingDispatcher.js":"41","C:\\Users\\gonza\\finance-app\\src\\Auth\\Login.js":"42","C:\\Users\\gonza\\finance-app\\src\\Context.js":"43","C:\\Users\\gonza\\finance-app\\src\\portfolio\\Engine.js":"44","C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructure.js":"45","C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructureB.js":"46","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Positions.js":"47","C:\\Users\\gonza\\finance-app\\src\\Auth\\ContactDetails.js":"48","C:\\Users\\gonza\\finance-app\\src\\serviceWorker.ts":"49","C:\\Users\\gonza\\finance-app\\src\\dashboard\\UserMain.js":"50","C:\\Users\\gonza\\finance-app\\src\\utils\\financeCalculations.js":"51","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\News.js":"52","C:\\Users\\gonza\\finance-app\\src\\dashboard\\LateralSection.js":"53","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\TickerBar2.js":"54","C:\\Users\\gonza\\finance-app\\src\\views\\company\\CompanyChart.js":"55","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Constituents.js":"56","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\principal.js":"57","C:\\Users\\gonza\\finance-app\\src\\Personas\\PeopleRouter.tsx":"58","C:\\Users\\gonza\\finance-app\\src\\views\\company\\FinancialStatements\\IncomeStatement.js":"59","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\Likes.tsx":"60","C:\\Users\\gonza\\finance-app\\src\\views\\company\\DetailsSquare.js":"61","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\Sectors.js":"62","C:\\Users\\gonza\\finance-app\\src\\components\\Cell.js":"63","C:\\Users\\gonza\\finance-app\\src\\portfolio\\useCompaniesChange.js":"64","C:\\Users\\gonza\\finance-app\\src\\components\\Sidebar.js":"65","C:\\Users\\gonza\\finance-app\\src\\views\\company\\ControllerCompany.js":"66","C:\\Users\\gonza\\finance-app\\src\\utils\\useMesure.js":"67","C:\\Users\\gonza\\finance-app\\src\\components\\Multioption.js":"68","C:\\Users\\gonza\\finance-app\\src\\utils\\useMountApproval.js":"69","C:\\Users\\gonza\\finance-app\\src\\views\\company\\FinancialOptions.js":"70","C:\\Users\\gonza\\finance-app\\src\\views\\company\\PeersSquare.js":"71","C:\\Users\\gonza\\finance-app\\src\\views\\covid\\Sliders.js":"72"},{"size":1483,"mtime":1613995380467,"results":"73","hashOfConfig":"74"},{"size":28872,"mtime":1614006255499,"results":"75","hashOfConfig":"74"},{"size":1294,"mtime":1613663688226,"results":"76","hashOfConfig":"74"},{"size":1618,"mtime":1610291129685,"results":"77","hashOfConfig":"74"},{"size":4609,"mtime":1614015075409,"results":"78","hashOfConfig":"74"},{"size":5820,"mtime":1614007748839,"results":"79","hashOfConfig":"74"},{"size":156,"mtime":1605711412858,"results":"80","hashOfConfig":"74"},{"size":2334,"mtime":1608561129906,"results":"81","hashOfConfig":"74"},{"size":2319,"mtime":1613663688238,"results":"82","hashOfConfig":"74"},{"size":2531,"mtime":1606594527518,"results":"83","hashOfConfig":"74"},{"size":1989,"mtime":1607005895516,"results":"84","hashOfConfig":"74"},{"size":5717,"mtime":1614097731368,"results":"85","hashOfConfig":"74"},{"size":3795,"mtime":1613993234800,"results":"86","hashOfConfig":"74"},{"size":2160,"mtime":1614176055840,"results":"87","hashOfConfig":"74"},{"size":9314,"mtime":1614012937857,"results":"88","hashOfConfig":"74"},{"size":4572,"mtime":1613995520837,"results":"89","hashOfConfig":"74"},{"size":12546,"mtime":1614006382809,"results":"90","hashOfConfig":"74"},{"size":1040,"mtime":1608322106668,"results":"91","hashOfConfig":"74"},{"size":1562,"mtime":1608225605796,"results":"92","hashOfConfig":"74"},{"size":819,"mtime":1613917552080,"results":"93","hashOfConfig":"74"},{"size":5522,"mtime":1610907455690,"results":"94","hashOfConfig":"74"},{"size":455,"mtime":1608059587651,"results":"95","hashOfConfig":"74"},{"size":4124,"mtime":1613663688229,"results":"96","hashOfConfig":"74"},{"size":1018,"mtime":1613663688232,"results":"97","hashOfConfig":"74"},{"size":4724,"mtime":1611333256765,"results":"98","hashOfConfig":"74"},{"size":668,"mtime":1613663688204,"results":"99","hashOfConfig":"74"},{"size":628,"mtime":1605723505412,"results":"100","hashOfConfig":"74"},{"size":1672,"mtime":1613917552085,"results":"101","hashOfConfig":"74"},{"size":1868,"mtime":1608404101490,"results":"102","hashOfConfig":"74"},{"size":463,"mtime":1606078800550,"results":"103","hashOfConfig":"74"},{"size":3558,"mtime":1614531144826,"results":"104","hashOfConfig":"74"},{"size":637,"mtime":1608646319792,"results":"105","hashOfConfig":"74"},{"size":1735,"mtime":1609867251793,"results":"106","hashOfConfig":"74"},{"size":5227,"mtime":1613917552086,"results":"107","hashOfConfig":"74"},{"size":1234,"mtime":1609248574030,"results":"108","hashOfConfig":"74"},{"size":90,"mtime":1608554488394,"results":"109","hashOfConfig":"74"},{"size":4178,"mtime":1606997931817,"results":"110","hashOfConfig":"74"},{"size":2424,"mtime":1605785592357,"results":"111","hashOfConfig":"74"},{"size":2707,"mtime":1610903187173,"results":"112","hashOfConfig":"74"},{"size":7221,"mtime":1610571434742,"results":"113","hashOfConfig":"74"},{"size":8528,"mtime":1614020596212,"results":"114","hashOfConfig":"74"},{"size":2516,"mtime":1613996139149,"results":"115","hashOfConfig":"74"},{"size":12604,"mtime":1614002133924,"results":"116","hashOfConfig":"74"},{"size":7080,"mtime":1614006382809,"results":"117","hashOfConfig":"74"},{"size":3575,"mtime":1614095486660,"results":"118","hashOfConfig":"74"},{"size":4579,"mtime":1614176369936,"results":"119","hashOfConfig":"74"},{"size":8873,"mtime":1614002843011,"results":"120","hashOfConfig":"74"},{"size":6426,"mtime":1614081151096,"results":"121","hashOfConfig":"74"},{"size":5295,"mtime":1595505397461,"results":"122","hashOfConfig":"74"},{"size":2255,"mtime":1608643927125,"results":"123","hashOfConfig":"74"},{"size":220,"mtime":1613663688291,"results":"124","hashOfConfig":"74"},{"size":3785,"mtime":1613917552083,"results":"125","hashOfConfig":"74"},{"size":308,"mtime":1608661645022,"results":"126","hashOfConfig":"74"},{"size":1591,"mtime":1613663688307,"results":"127","hashOfConfig":"74"},{"size":5559,"mtime":1609434787599,"results":"128","hashOfConfig":"74"},{"size":4156,"mtime":1605891857388,"results":"129","hashOfConfig":"74"},{"size":1847,"mtime":1613663688308,"results":"130","hashOfConfig":"74"},{"size":468,"mtime":1613663688224,"results":"131","hashOfConfig":"74"},{"size":11693,"mtime":1610570701731,"results":"132","hashOfConfig":"74"},{"size":1261,"mtime":1613663688311,"results":"133","hashOfConfig":"74"},{"size":2164,"mtime":1605640036088,"results":"134","hashOfConfig":"74"},{"size":931,"mtime":1613663688306,"results":"135","hashOfConfig":"74"},{"size":363,"mtime":1610195822613,"results":"136","hashOfConfig":"74"},{"size":2613,"mtime":1614094660577,"results":"137","hashOfConfig":"74"},{"size":7965,"mtime":1613663688233,"results":"138","hashOfConfig":"74"},{"size":1562,"mtime":1610108918469,"results":"139","hashOfConfig":"74"},{"size":649,"mtime":1606232051393,"results":"140","hashOfConfig":"74"},{"size":3436,"mtime":1605208003831,"results":"141","hashOfConfig":"74"},{"size":250,"mtime":1610108918469,"results":"142","hashOfConfig":"74"},{"size":3154,"mtime":1610389738949,"results":"143","hashOfConfig":"74"},{"size":3456,"mtime":1605707127753,"results":"144","hashOfConfig":"74"},{"size":6094,"mtime":1610832840362,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tz5z4e",{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"158"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172","usedDeprecatedRules":"162"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"162"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"151"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"151"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"151"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"151"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"151"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"158"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"151"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"151"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"151"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gonza\\finance-app\\src\\UserContext.js",[],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\logicPruebasConAdd.js",["317","318","319","320","321"],"import { useEffect, useRef } from \"react\";\r\nimport { useDataLayer } from \"../Context\";\r\nimport { convertHumanToUnixInit, convertHumanToUnixInitial, convertUnixToHuman, milisencondsInADay } from \"../utils/datesUtils\";\r\nimport { usePortfolioGenerator } from \"./portfolioGenerator2\";\r\n//we lost lot of time by not realising .map() mutate object, so each time we were changing th eamount of one date we were change all the amount of the past dates as well kind of magically. That is because each date is an array of objects, and this objects are references from the previous object as we generate the the series from the objects of the date before. So everytime we were fining the updatedInfo, we were using the same object (as they werre pointing to he same memory dir), instead of a copy..\r\n\r\n\r\n//we are injecting this from App.js\r\n\r\n\r\n\r\n//let initialTimeUnix = 0\r\n//gastamos 12.000 en acciones de amzn\r\n//vendemos 10 acciones a 3000, ingresando 30.000, ganamos 12.000\r\n\r\nconst findFirstDate = (userActivity) => {\r\n    let valu\r\n    userActivity.forEach(operation => {\r\n        if (operation.isFirstOperation) {\r\n           // console.log(operation.date)\r\n            valu = convertHumanToUnixInit(operation.date)\r\n        }\r\n    })\r\n    return valu\r\n}\r\n\r\n\r\n\r\nconst getTotalDaysElapsed = (initialTime) => {\r\n    //const initialTime = findFirstDate()\r\n    const date = convertUnixToHuman(Date.now())\r\n    //console.log(date, \"duuuu\")\r\n    const todayUnix00 = convertHumanToUnixInit(date)\r\n\r\n    //console.log(todayUnix00,\"duuu2\", initialTime)\r\n    const totalMilisecons = todayUnix00 - initialTime\r\n    if (totalMilisecons > 0) {\r\n        return totalMilisecons / milisencondsInADay\r\n    } else {\r\n        //this will only run in the day 0 \r\n        return 1\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const useLogicPruebas = () => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n\r\n    const createTimelaspse = (initialTime) => {\r\n        const firstDate = convertUnixToHuman(initialTime)\r\n        let timelapse = [firstDate]\r\n        let lastDate= initialTime\r\n        //let initialTime = findFirstDate(state.userActivity)\r\n        const range = getTotalDaysElapsed(initialTime)\r\n        //let unixDate = initialTimeUnix.current\r\n        //console.log(range, \"raaango\")\r\n        //console.log(initialTime, \"ostiatime\")\r\n        Array.from(Array(range).keys()).forEach(_ => {\r\n            lastDate += milisencondsInADay\r\n            timelapse = [...timelapse, convertUnixToHuman(lastDate)]\r\n        })\r\n        return timelapse\r\n    }\r\n\r\n    const handleSell = (costMeanXud, amountSold, priceSold) => {\r\n        const income = (priceSold * amountSold) - (costMeanXud * amountSold)\r\n        return { income }\r\n    }\r\n\r\n    // const addToGeneratedSeries = (newOperation, cb) => {\r\n    //     //we could save the first date in database intead of calculating everytime\r\n    //     console.log(\"queee hostiaaaaaaa\")\r\n    //     let today;\r\n    //     const { unitaryCost, ticker, amount } = newOperation.details\r\n    //     const currentGeneratedSerie = state.generatedSeries\r\n    //     //we need to get today's serie last key\r\n    //     console.log(JSON.parse(JSON.stringify(currentGeneratedSerie)), \"quepaso1\")\r\n    //     if (newOperation.isFirstOperation) {\r\n    //         //the generated serie won't have any date\r\n    //         today = convertUnixToHuman(Date.now())\r\n    //         const updatedSeries = {\r\n    //             ...state.generatedSeries,\r\n    //             dates: {\r\n    //                 [today]: {\r\n    //                     income: 0,\r\n    //                     positions: [\r\n    //                         {ticker, amount, unitaryCost}\r\n    //                     ]\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         cb(updatedSeries)\r\n    //         return\r\n    //         //we leave the function here\r\n    //     }\r\n    //     //realmente ya tenemos la date de hoy en newOperation\r\n    //     today = Object.keys(currentGeneratedSerie.dates)[Object.keys(currentGeneratedSerie.dates).length - 1]\r\n\r\n    //     console.log(state.generatedSeries, \"repuuuuta\")\r\n    //     console.log(JSON.parse(JSON.stringify(today)), \"quepaso2\")\r\n    //     let todayRegister = currentGeneratedSerie.dates[today]\r\n    //     console.log(todayRegister, \"registro de hoy\")\r\n\r\n    //     let alreadyInPortfolio = todayRegister.positions.find(asset => asset.ticker === ticker)\r\n    //     if (alreadyInPortfolio) {\r\n    //         if (newOperation.operationType === \"buy\") {\r\n    //             const newAmount = alreadyInPortfolio.amount + amount\r\n    //             const unitaryCostMean =\r\n    //                 (alreadyInPortfolio.unitaryCost * alreadyInPortfolio.amount) /\r\n    //                 (alreadyInPortfolio.amount + amount)\r\n    //                 +\r\n    //                 (unitaryCost * amount) /\r\n    //                 (alreadyInPortfolio.amount + amount)\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio\r\n    //             }\r\n    //             const readyUnitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n    //             const otherPositions = todayRegister.positions.filter(asset => asset.ticker !== ticker)\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio,\r\n    //                 amount: newAmount,\r\n    //                 unitaryCost: readyUnitaryCost\r\n    //             }\r\n    //             todayRegister = {\r\n    //                 ...todayRegister,\r\n    //                 positions: [\r\n    //                     ...otherPositions,\r\n\r\n    //                 ]\r\n    //             }\r\n    //         } else {\r\n    //             //sell\r\n    //             const newAmount = alreadyInPortfolio.amount - amount\r\n    //             const { income } = handleSell(alreadyInPortfolio.unitaryCost, amount, newOperation.details.priceSold)\r\n    //             //we need to check if there was income for this ticker (if was sold anytime before)\r\n    //             const newIncome = alreadyInPortfolio.income ? alreadyInPortfolio.income + income : income\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio,\r\n    //                 income: newIncome,\r\n    //                 amount: newAmount\r\n    //             }\r\n    //             const otherPositions = todayRegister.positions.filter(asset => asset.ticker !== ticker)\r\n    //             if (newAmount > 0) {\r\n    //                 todayRegister = {\r\n    //                     ...todayRegister,\r\n    //                     positions: [\r\n    //                         ...otherPositions,\r\n    //                         alreadyInPortfolio\r\n    //                     ],\r\n    //                     income: todayRegister.income + income\r\n    //                 }\r\n    //             } else {\r\n    //                 const updatedPositions = todayRegister.positions.filter(asset => asset.ticker === ticker)\r\n    //                 todayRegister = {\r\n    //                     ...todayRegister,\r\n    //                     positions: updatedPositions,\r\n    //                     income: todayRegister.income + income\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //     } else {\r\n    //         if (newOperation.operationType === \"buy\") {\r\n    //             todayRegister = {\r\n    //                 ...todayRegister,\r\n    //                 positions: [...todayRegister.positions,\r\n    //                 { ticker, amount, unitaryCost }]\r\n    //             }\r\n    //         } else {\r\n    //             throw new Error(ticker, amount, \"can't sell stock that don't have\")\r\n    //         }\r\n    //     }\r\n    //     const updatedSeries = {\r\n    //         ...state.generatedSeries,\r\n    //         dates: {\r\n    //             ...state.generatedSeries.dates,\r\n    //             [today]: todayRegister\r\n    //         }\r\n    //     }\r\n    //     console.log(updatedSeries, \"repuuuuta2\")\r\n    //     cb(updatedSeries)\r\n    // }\r\n\r\n    const generateSerieFromBegining = (userActivity, cb) =>{\r\n        const worker = new Worker(\"/worker2.js\")\r\n        worker.postMessage(userActivity)\r\n        worker.onmessage=(e)=>{\r\n            console.log(e.data, \"posesions generated\")\r\n            const possesionGenerated = e.data\r\n            cb(possesionGenerated)\r\n        }\r\n    }\r\n    const generateSerieFromBeginin = (userActivity, cb) => {\r\n \r\n       // console.log(userActivity, \"actividad usuario\")\r\n        const initialTime = findFirstDate(userActivity)\r\n       // console.log(initialTime, \"tiempooo\")\r\n        //console.log(convertUnixToHuman(initialTime), \"crazyy\")\r\n        const timelapse = createTimelaspse(initialTime)\r\n       \r\n        let masterHistory;\r\n        let koko = 0\r\n        masterHistory = {\r\n            income: 0\r\n        }\r\n        //console.log(timelapse, \"timelapse\")\r\n        if (!timelapse.length) {\r\n            masterHistory = {\r\n                ...masterHistory,\r\n                dates: {\r\n                }\r\n            }\r\n        }\r\n        timelapse.forEach(date => {\r\n            masterHistory = {\r\n                ...masterHistory,\r\n                dates: {\r\n                    ...masterHistory.dates,\r\n                    [date]: []\r\n                }\r\n            }\r\n        })\r\n\r\n        //here we initialize an empty array for each date\r\n        console.log(masterHistory, \"maastar\")\r\n        console.log(timelapse, \"timelapse\")\r\n        timelapse.forEach((date, index) => {\r\n            let hasMadeOperationThatDate = false\r\n            userActivity.forEach(operation => {\r\n                //console.log(typeof operation.date,typeof date,date, \"kostia\")\r\n                //console.log(operation.date, date, \"kostia\")\r\n                if (date === operation.date) {\r\n                    //console.log(index, \"iiii\")\r\n                    //console.log(\"hola\")\r\n                    //console.log(date, \"first date\")\r\n                    hasMadeOperationThatDate = true\r\n                    let ticker = operation.details.ticker\r\n                    let amount = operation.details.amount\r\n                    let unitaryCost = operation.details.unitaryCost\r\n                    let priceSold = operation.details.priceSold\r\n\r\n                    //tenemos que comprobar si teniamos alguna cantidad previamente de ese ticker\r\n                    let lastAmount = 0\r\n                    //console.log(JSON.parse(JSON.stringify(masterHistory)), JSON.parse(JSON.stringify(masterHistory.dates)), masterHistory.dates[date], date, \"wata\")\r\n                    const hasAlreadyOperatedThatDay = masterHistory[\"dates\"][date].positions\r\n                    if (hasAlreadyOperatedThatDay) {\r\n                        //console.log(ticker, \"operated twice that day\")\r\n                        const alreadyInPortfolio = masterHistory.dates[date].positions.find(item => item.ticker === ticker)\r\n                        if (alreadyInPortfolio) {\r\n                            lastAmount = alreadyInPortfolio.amount\r\n                            const newAmount =\r\n                                operation.operationType === \"buy\" ?\r\n                                    lastAmount + amount : lastAmount - amount\r\n                            if (operation.operationType === \"buy\") {\r\n                                const updatedInfo = masterHistory.dates[date].positions.map(({ ...posesions }) => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        posesions.amount = newAmount\r\n                                        const unitaryCostMean =\r\n                                            (posesions.unitaryCost * posesions.amount) /\r\n                                            (posesions.amount + amount)\r\n                                            +\r\n                                            (unitaryCost * amount) /\r\n                                            (posesions.amount + amount)\r\n\r\n                                        posesions.unitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n                                    }\r\n                                    return posesions\r\n                                })\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[date],\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            else if (operation.operationType === \"sell\") {\r\n                                let dateIncome, operationIncome;\r\n                                masterHistory.dates[date].positions.forEach(posesions => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        if (index === 0) {\r\n                                           // console.log(posesions.unitaryCost,\r\n                                             //   amount, priceSold, \"incomeee\")\r\n                                        }\r\n                                        const { income } = handleSell(posesions.unitaryCost, amount, priceSold)\r\n                                        if (index === 0) {\r\n                                            //console.log(JSON.parse(JSON.stringify(income, \"incomeee\")))\r\n                                        }\r\n                                        operationIncome = income\r\n\r\n                                        dateIncome = masterHistory.dates[date].income + income\r\n                                    }\r\n                                })\r\n                                let updatedInfo = newAmount !== 0 ?\r\n                                    //if we don't use spreed operatior we will be mutating the original object\r\n                                    masterHistory.dates[date].positions.map(({ ...posesions }) => {\r\n                                        if (posesions.ticker === ticker) {\r\n                                            posesions.amount = newAmount\r\n                                            posesions[\"income\"] = operationIncome\r\n                                        }\r\n                                        return posesions\r\n                                    })\r\n                                    :\r\n                                    masterHistory.dates[date].positions.filter(item => item.ticker !== ticker)\r\n\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: dateIncome,\r\n                                            positions: updatedInfo\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            masterHistory = {\r\n                                ...masterHistory,\r\n                                dates: {\r\n                                    ...masterHistory.dates,\r\n                                    [date]: {\r\n                                        ...masterHistory.dates[date],\r\n                                        positions: [\r\n                                            ...masterHistory.dates[date].positions,\r\n                                            {\r\n                                                ticker,\r\n                                                amount,\r\n                                                unitaryCost\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //if is the first iteration we now this is the initial operation so there're weren stocks before.\r\n                    else {\r\n                        const alreadyInPortfolio = index === 0 ? false : masterHistory.dates[timelapse[index - 1]].positions.find(item => item.ticker === ticker)\r\n                       // console.log(alreadyInPortfolio, \"que concho\")\r\n                        if (alreadyInPortfolio) {\r\n                            lastAmount = alreadyInPortfolio.amount\r\n                            const newAmount =\r\n                                operation.operationType === \"buy\" ?\r\n                                    lastAmount + amount : lastAmount - amount\r\n                            if (operation.operationType === \"buy\") {\r\n                                const updatedInfo = masterHistory.dates[timelapse[index - 1]].positions.map(({ ...posesions }) => {\r\n                         //           console.log(posesions, \"cojones\")\r\n                                    if (posesions.ticker === ticker) {\r\n                                        posesions.amount = newAmount\r\n                                        const unitaryCostMean =\r\n                                            (posesions.unitaryCost * posesions.amount) /\r\n                                            (posesions.amount + amount)\r\n                                            +\r\n                                            (unitaryCost * amount) /\r\n                                            (posesions.amount + amount)\r\n\r\n                                        posesions.unitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n                                    }\r\n                                    return posesions\r\n                                })\r\n\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[timelapse[index - 1]],\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            else if (operation.operationType === \"sell\") {\r\n                                // console.log(JSON.parse(JSON.stringify(masterHistory)), \"antes\", ticker, date, timelapse[index - 1])\r\n                                //let newIncome;\r\n                                let operationIncome;\r\n                                let dateIncome;\r\n                                masterHistory.dates[timelapse[index - 1]].positions.forEach(posesions => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        const { income } = handleSell(posesions.unitaryCost, amount, priceSold)\r\n                                        operationIncome = income\r\n                                        dateIncome = masterHistory.dates[timelapse[index - 1]].income + income\r\n                                    }\r\n                                })\r\n                                let updatedInfo = newAmount !== 0 ?\r\n                                    masterHistory.dates[timelapse[index - 1]].positions.map(({ ...posesions }) => {\r\n                                        if (posesions.ticker === ticker) {\r\n                                            posesions.amount = newAmount\r\n                                            posesions[\"income\"] = operationIncome\r\n                                        }\r\n                                        return posesions\r\n                                    })\r\n                                    :\r\n                                    masterHistory.dates[timelapse[index - 1]].positions.filter(item => item.ticker !== ticker)\r\n                                // console.log(JSON.parse(JSON.stringify(masterHistory)), \"despues\", ticker, date, timelapse[index - 1])\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: dateIncome,\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            //si opera varias en un dia, el codigo no debe pasar x aqui\r\n                            const info = {\r\n                                ticker,\r\n                                amount,\r\n                                unitaryCost\r\n                            }\r\n\r\n                            if (index === 0) {\r\n                                //console.log(info, \"info\")\r\n                                //aunque sea el primer dia\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: 0,\r\n                                            positions: [\r\n                                                info\r\n                                            ]\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n\r\n                            } else {\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[timelapse[index - 1]],\r\n                                            positions: [\r\n                                                ...masterHistory.dates[timelapse[index - 1]].positions,\r\n                                                info\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                   // console.log(\"noooooooooo\")\r\n                }\r\n            })\r\n            if (!hasMadeOperationThatDate) {\r\n                //si no hemos operado copiaremos el contenido del dia anterior\r\n                //console.log(\"no operation that day\")\r\n                koko++\r\n                //console.log(koko, \"recuento\")\r\n                const lastInfo = masterHistory.dates[timelapse[index - 1]]\r\n                //console.log(lastInfo)\r\n                masterHistory = {\r\n                    ...masterHistory,\r\n                    dates: {\r\n                        ...masterHistory.dates,\r\n                        [date]: lastInfo\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        console.log(masterHistory, \"aveeer nena\")\r\n        cb(masterHistory)\r\n    }\r\n    //solo se recalcularan las series cuando el ususario haya echo una nueva operacion y o cuando haya entrado en portolio dashboard\r\n    usePortfolioGenerator()\r\n    useEffect(() => {\r\n        //this needs to fire either when initialState is ready and everytime we add new operation (user activity changes), as we need this to calculate the changes in AssetStructure chart\r\n        console.log(state.userActivity, state.setPruebaReady, state.generatedSeries.ready, \"actu\")\r\n        //setPruebaReady creo que es redundante aqui ya que cuando generatedSeries.status es falso significa que hemos realizado una nueva operacion (deberiamos impedir realizar nueva operacion hasta que no generatedSeries.status sea true again)\r\n        if (state.userActivity.length > 0 && state.setPruebaReady && !state.generatedSeries.ready) {\r\n            console.log(\"exxecutao\")\r\n            //if no userActivity we wont run any code\r\n                generateSerieFromBegining(state.userActivity, (generatedSerie) => {\r\n                    console.log(\"exxecutao2\")\r\n                    dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie })\r\n                })\r\n            //  else {\r\n            //     const newOperation = state.userActivity[state.userActivity.length - 1]\r\n            //     dispatch({ type: \"SET_ARE_GENERATED_SERIES_READY\", payload: false })\r\n            //     addToGeneratedSeries(newOperation, (generatedSerie) => {\r\n            //         dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie })\r\n            //         dispatch({ type: \"SET_ARE_GENERATED_SERIES_READY\", payload: true })\r\n            //         //userRefreshed.current will be alredy false\r\n            //     })\r\n            // }\r\n            \r\n        }\r\n        \r\n       \r\n        // if (state.userActivity.length > 0 && Object.keys(state.portfolioHistory).length > 0) {\r\n        //     generateSerieFromBegining(state.userActivity, (generatedSerie) => { dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie }) })\r\n        // }\r\n    }, [state.setPruebaReady, state.generatedSeries])\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//console.log(createTimelaspse(), \"yea\")\r\n\r\n\r\n\r\n\r\n//makeIt()\r\n//console.log(findFirstDate(), \"aqui\")\r\n\r\n\r\nexport const userActivity = [\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"amzn\",\r\n            amount: 40,\r\n            unitaryCost: 300\r\n\r\n        },\r\n        isFirstOperation: true,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 60,\r\n            unitaryCost: 300\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 40,\r\n            priceSold: 300\r\n\r\n        },\r\n        isFirstOperation: false,\r\n    },\r\n    {\r\n        date: \"2020-06-16\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 40,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-22\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 30,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n    },\r\n    {\r\n        date: \"2020-06-25\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 30,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-07-18\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 10,\r\n            priceSold: 315\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 100,\r\n            unitaryCost: 10\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 20,\r\n            unitaryCost: 10\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"tef\",\r\n            amount: 80,\r\n            unitaryCost: 7\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-09-24\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 120,\r\n            priceSold: 20\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n\r\n    },\r\n    {\r\n        date: \"2020-09-21\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"tef\",\r\n            amount: 45,\r\n            priceSold: 3\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-10-26\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"amzn\",\r\n            amount: 10,\r\n            priceSold: 3000\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    }\r\n]",["322","323"],"C:\\Users\\gonza\\finance-app\\src\\Personas\\UserItem.tsx",["324"],"import React, { ReactNode } from 'react'\r\nimport { PortfolioPriceChart } from '../portfolio/PortfolioPriceChart'\r\nimport { PeopleItem } from './interfaces'\r\nimport styled from \"styled-components\"\r\nimport { makeStyles, Paper } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface IProps {\r\n    person: PeopleItem\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"350px\"\r\n    }\r\n})\r\nexport const UserItem: React.FC<IProps> = ({ person }) => {\r\n    const { user, portfolio } = person\r\n\r\n    const StyledDiv = styled.div`\r\n        width: 200px\r\n    `\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper\r\n            classes={{ root: classes.root }}\r\n        >\r\n            <UserInfo>\r\n                <Link to={`/people/${user.userId}`}>\r\n                    <h3>{user.firstName}</h3>\r\n                </Link>\r\n                <h6>{user.lastName}</h6>\r\n            </UserInfo>\r\n            <Portfolio>\r\n                <PortfolioPriceChart datos={portfolio} title={`${user.firstName} Portfolio`} />\r\n            </Portfolio>\r\n        </Paper>\r\n    )\r\n}\r\n\r\ninterface ICProps {\r\n    children: ReactNode\r\n}\r\nconst UserInfo: React.FC<ICProps> = ({ children }) => <>{children}</>\r\nconst Portfolio: React.FC<ICProps> = ({ children }) => <>{children}</>",["325","326"],"C:\\Users\\gonza\\finance-app\\src\\components\\components\\CustomCircularProgress.js",[],["327","328"],"C:\\Users\\gonza\\finance-app\\src\\components\\subNavigations\\CompanyNav.js",["329"],"import { AppBar, Button, Chip, makeStyles, Tab, Tabs } from '@material-ui/core';\r\nimport React, { forwardRef, useEffect, useState } from 'react'\r\nimport { Transition } from 'react-transition-group';\r\nimport { useMesure } from '../../utils/useMesure';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport { useDataLayer } from '../../Context';\r\nimport { useUILayer } from '../../ContextUI';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { useUserLayer } from '../../UserContext';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarCompany: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    transition: theme.transitions.create([\"top\", \"transform\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    transform: \"translateX(0px)\",\r\n  },\r\n  appBarCompanyShift: {\r\n    transform: `translateX(${drawerWidth}px)`\r\n  },\r\n  tab: {\r\n    marginLeft: \"60px\",\r\n  },\r\n  white: {\r\n    borderColor: \"white\"\r\n  },\r\n}));\r\n\r\nexport const CompanyNav = forwardRef(({ menuCompaniesOpen, topNavigation }) => {\r\n\r\n  const { state: { currentCompany, following }, dispatch } = useDataLayer()\r\n  const { sidebarOpen, setMountApproval } = useUILayer()\r\n  const { userState: { info } } = useUserLayer()\r\n  const { height } = useMesure(topNavigation)\r\n  const history = useHistory()\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  console.log(currentCompany, following, \"muuuuwwww\")\r\n\r\n  const menu2transitions = {\r\n    entering: {\r\n      top: `${height}px`,\r\n    },\r\n    entered: {\r\n      top: `${height}px`,\r\n    },\r\n    exiting: {\r\n      top: \"0px\",\r\n    },\r\n    exited: {\r\n      top: \"0px\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, val) => {\r\n    setTabValue(val)\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const navigate = (url) => {\r\n    history.push(`${url}/${currentCompany.ticker}`)\r\n  }\r\n\r\n  const handleFollow = () => {\r\n    fetch(`http://localhost:8001/api/v1/interests/interests?email=${info.email}&interest=${currentCompany.ticker}`)\r\n      .then(res => res.json())\r\n      .then(interest => {\r\n        if (typeof interest === \"string\") {\r\n          interest = [interest]\r\n        }\r\n        dispatch({ type: \"STORE_USER_INTEREST\", payload: interest })\r\n      })\r\n      .catch(err => { console.log(err.message, \"can't update interest\") })\r\n  }\r\n\r\n  const [isFollowing, setIsFollowing] = useState(false)\r\n  useEffect(() => {\r\n    if (!following.length) {\r\n      setIsFollowing(false)\r\n      return\r\n    }\r\n    //hay que tener en cuenta si esta logeao o no\r\n    const _isFollowing = following.find(tag => tag === currentCompany.ticker)\r\n    setIsFollowing(!!_isFollowing)\r\n\r\n  }, [following])\r\n  return (\r\n    <Transition\r\n      in={menuCompaniesOpen}\r\n      timeout={300}\r\n      // mountOnEnter\r\n      // unmountOnExit\r\n      onExited={() => { setMountApproval(true) }}\r\n    >\r\n      {animationState => (\r\n        <AppBar\r\n          className={clsx(classes.appBarCompany, {\r\n            [classes.appBarCompanyShift]: sidebarOpen\r\n          })}\r\n          style={menu2transitions[animationState]}\r\n        >\r\n          <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\"\r\n            classes={{ root: classes.tab }}\r\n          >\r\n            <Tab label=\"Overview\" {...a11yProps(0)} onClick={() => { navigate(\"/companies/overview/\") }} />\r\n            <Tab label=\"Financials\" {...a11yProps(1)} onClick={() => { navigate(\"/companies/financials/\") }} />\r\n            <Tab label=\"Key metrics\" {...a11yProps(2)} onClick={() => { navigate(\"/companies/keymetrics/\") }} />\r\n            <Tab label=\"News\" {...a11yProps(2)} onClick={() => { history.push(`/news/`) }} />\r\n          </Tabs>\r\n          <FollowingControl {...{ handleFollow, isFollowing }} />\r\n          <Chip label=\"not owned\" size=\"small\" variant=\"outlined\" style={{ color: \"white\" }}\r\n            classes={{\r\n              outlined: classes.white\r\n            }}\r\n          />\r\n        </AppBar>\r\n      )}\r\n    </Transition>\r\n  )\r\n})\r\n\r\nconst FollowingControl = ({ handleFollow, isFollowing }) => {\r\n  return isFollowing ?\r\n    <Button\r\n      startIcon={<LibraryAddCheckIcon />}\r\n      onClick={handleFollow}\r\n    >\r\n      Following\r\n    </Button>\r\n    :\r\n    <Button\r\n      startIcon={<BookmarksIcon />}\r\n      onClick={handleFollow}\r\n    >Follow</Button>\r\n\r\n}",["330","331"],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\StockShop.js",["332","333"],"import { Button, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CustomCircularProgress } from '../components/components/CustomCircularProgress'\r\nimport { useDataLayer } from '../Context'\r\nimport useAuth from '../useAuth'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { convertUnixToHuman } from '../utils/datesUtils'\r\nimport { formatter } from '../utils/numFormatter'\r\nimport { PurchaseDialog } from \"./PurchaseDialog\"\r\nimport styled from \"styled-components\"\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst date = convertUnixToHuman(Date.now())\r\nexport const StockShop = ({ ticker, currentPrice, loading, error, assetType }) => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const { setPruebaReady } = state\r\n\r\n    //const userInfo = useAuth()\r\n\r\n    const { userState } = useUserLayer()\r\n\r\n\r\n    console.log(currentPrice, \"preciooo\")\r\n    const [qty, setQty] = useState(1)\r\n    const [orderTotal, setOrderTotal] = useState(\"\")\r\n    const [modalOpen, setModalOpen] = React.useState(false);\r\n    const [operationType, setOperationType] = React.useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (currentPrice) {\r\n            setOrderTotal(currentPrice * qty)\r\n        }\r\n    }, [qty, currentPrice])\r\n\r\n    const submitOrder = () => {\r\n        if (userState.info.email) {\r\n            let isFirstOperation = state.userActivity.length > 0 ? false : true\r\n            fetch(\"http://localhost:8001/api/v1/operations/addoperation\", {\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    user: userState.info.email,\r\n                    order: {\r\n                        operationType,\r\n                        ticker,\r\n                        amount: qty,\r\n                        price: currentPrice,\r\n                        date,\r\n                        isFirstOperation,\r\n                        assetType\r\n                    }\r\n                })\r\n            })\r\n                .then(success => {\r\n                    //means we have stored it in database\r\n                    dispatch({\r\n                        type: \"ADD_PORTFOLIO_CURRENT_POSSESIONS\",\r\n                        payload: {\r\n                            ticker,\r\n                            amount: qty,\r\n                            operationType,\r\n                            cashNetOperation: orderTotal,\r\n                            date,\r\n                            unitaryPrice: currentPrice\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: \"ADD_UNIQUE_STOCKS\",\r\n                        payload: {\r\n                            ticker,\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: \"STOCK_OPERATION\",\r\n                        payload: {\r\n                            date,\r\n                            operationType,\r\n                            amount: qty,\r\n                            ticker,\r\n                            unitPrice: currentPrice\r\n                        }\r\n                    })\r\n                    dispatch({ type: \"RESTART_GENERATED_SERIES\" })\r\n\r\n                })\r\n                .catch(err => { console.log(err, \"pputa falló\") })\r\n        } else {\r\n            alert(\"please log in\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //when users buys and its balance change we close firstModal\r\n        console.log(\"moneychange\")\r\n        modalOpen && setModalOpen(false)\r\n        //after that we could add a success modal or animation\r\n    }, [state.currentPossesions.userCash])\r\n\r\n    const LoginMessage = styled.div({\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    })\r\n    if (!userState.isAuthenticated) {\r\n        return (\r\n            <LoginMessage>\r\n                <p style={{ marginBottom: \"10px\" }}>\r\n                    <Link to=\"/pruebaLogin\">\r\n                        Login</Link> to invest</p>\r\n                <LockIcon />\r\n            </LoginMessage>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"stock-shop\">\r\n            {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>}\r\n            {/* prueba momentanea */}\r\n            { !setPruebaReady ? <div>Loading initial data...</div>\r\n                : currentPrice &&\r\n                <div>\r\n                    <p>{formatter.format((currentPrice))}</p>\r\n                    <TextField\r\n                        type=\"number\"\r\n                        value={qty}\r\n                        onChange={(e) => { setQty(parseInt(e.target.value)) }}\r\n                    />\r\n                    <div\r\n                        className=\"total-price\">\r\n                        {formatter.format(orderTotal)}\r\n                    </div>\r\n                    {[\"buy\", \"sell\"].map(type => (\r\n                        <Button\r\n                            onClick={() => {\r\n                                setOperationType(type)\r\n                                setModalOpen(true)\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            {type}\r\n                        </Button>\r\n                    ))}\r\n\r\n\r\n                    <PurchaseDialog\r\n                        {...{ modalOpen, setModalOpen, qty, orderTotal, ticker, submitOrder, operationType }}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Nasdaq.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\KeyMetrics.js",["334","335","336","337","338","339","340","341"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\AssetStructure.js",["342","343"],"import { Paper } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { DonutChart } from '../charts/DonutChart'\r\nimport { useDataLayer } from '../Context'\r\n\r\nexport const AssetStructure = () => {\r\n    const { state } = useDataLayer()\r\n    const { stocks } = state.currentPossesions\r\n    const [readyData, setReadyData] = useState(\"\")\r\n    const getMarketValueByStock = () => {\r\n        let arrByCompany = []\r\n        let totalMarketVal = 0\r\n        console.log(stocks, \"staaacks\")\r\n        stocks.forEach(poss => {\r\n            console.log(state.portfolioHistoryByCompany)\r\n            const stockHistory = state.portfolioHistoryByCompany[poss.ticker]\r\n            console.log(stockHistory, \"hastory\")\r\n            let marketVal;\r\n            if(stockHistory && stockHistory.length > 0){\r\n                const lastRegister = stockHistory[stockHistory.length - 1]\r\n                const lastRegisterClosePrice = lastRegister[2]\r\n                marketVal = lastRegisterClosePrice * poss.amount\r\n                \r\n            }else{\r\n                //here means that this is a new stock, and as we just update daily, the market value will be equal to its cost\r\n                const asset = state.currentPossesions.stocks. find(asset=>asset.ticker === poss.ticker)\r\n                marketVal = asset.amount * asset.unitaryCost\r\n            }\r\n            totalMarketVal += marketVal\r\n                arrByCompany = [...arrByCompany,\r\n                {\r\n                    ticker: poss.ticker,\r\n                    marketVal\r\n                }]\r\n        })\r\n        console.log(arrByCompany, \"elmarketall\")\r\n        return arrByCompany.map(item => {\r\n            item[\"proportion\"] = (item.marketVal / totalMarketVal) * 100\r\n            return item\r\n        })\r\n    }\r\n    const prepareData =(data, cb)=>{\r\n        cb(data.map(item=>[item.ticker, item.proportion]))\r\n    }\r\n    useEffect(() => {\r\n        if (stocks.length > 0 && state.areHistoricPricesReady) {\r\n            const data = getMarketValueByStock()\r\n            prepareData(data, (result)=>{\r\n                setReadyData(result)\r\n            })\r\n        }\r\n    }, [stocks, state.areHistoricPricesReady])\r\n    return (\r\n        <Paper>\r\n       { readyData.length && <DonutChart data={readyData}/>}\r\n    </Paper>\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\charts\\linechart.js",["344"],"import React from 'react'\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nexport const Linechart = ({ data }) => {\r\n\r\n    console.log(data, \"poooooooooota\")\r\n    const options = {\r\n        // title: {\r\n        //     text: 'Solar Employment Growth by Sector, 2010-2016'\r\n        // },     \r\n        \r\n        series: [{\r\n            data: data.map(item=>item.close),\r\n            // data: [50, 40, 40, 30, 15, 12, 8, 22,40],\r\n            marker: {\r\n                enabled: false\r\n            },\r\n            animation: false,\r\n        }],\r\n        chart: {\r\n            type: 'line',\r\n            backgroundColor: 'black',\r\n            plotBorderWidth: null,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            plotShadow: false,\r\n            borderWidth: 0,\r\n            plotBorderWidth: 0,\r\n            marginRight: 0\r\n        },\r\n        tooltip: {\r\n            userHTML: true,\r\n            style: {\r\n                padding: 0,\r\n                width: 0,\r\n                height: 0,\r\n            },\r\n            formatter: function () {\r\n                return this.point.residents;\r\n            },\r\n        },\r\n        title: {\r\n            text: ''\r\n        },\r\n        xAxis: {\r\n            enabled: false,\r\n            showEmpty: false,\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: ''\r\n            },\r\n            showEmpty: false,\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            line: {\r\n                lineWidth: 1.5,\r\n            },\r\n            showInLegend: false,\r\n            tooltip: {}\r\n        },\r\n        \r\n\r\n\r\n        // responsive: {\r\n        //     rules: [{\r\n        //         condition: {\r\n        //             maxWidth: 500\r\n        //         },\r\n        //         chartOptions: {\r\n        //             legend: {\r\n        //                 layout: 'vertical',\r\n        //                 align: 'center',\r\n        //                 verticalAlign: 'bottom'\r\n        //             }\r\n        //         }\r\n        //     }]\r\n        // }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { data && <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n                containerProps={{ style: { height: \"100%\" } }}\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\gonza\\finance-app\\src\\components\\TransitionComponent.js",["345","346","347","348","349"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport function TransitionComponent({children, open, setOpenChartModal}) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n      return\r\n    //setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      return\r\n    //setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={()=>{setOpenChartModal(false)}} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {children}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\gonza\\finance-app\\src\\Auth\\Register.js",["350","351"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\useIAuth.js",["352","353","354","355","356"],"import React, { useState, useEffect } from 'react'\r\nimport { useUserLayer } from '../UserContext'\r\n\r\nexport const useIAuth = () => {\r\n    const [hasPermission, setHasPermission] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const { userState, userDispatch } = useUserLayer()\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch(\"http://localhost:8001/api/v1/auth/post\", {\r\n            headers: {\r\n                \"Authorization\": `bearer ${userState.token}`\r\n            },\r\n        }).then(res => {\r\n            console.log(res, \"resposns\")\r\n            if (!res.ok) throw new Error(\"token not valid\")\r\n            console.log(\"success nena\", res)\r\n            setHasPermission(true)\r\n            setLoading(false)\r\n        })\r\n            .catch(err => {\r\n                setHasPermission(false)\r\n                setLoading(false)\r\n                console.log(err.message)\r\n            })\r\n    }, [])\r\n    return { hasPermission, loading }\r\n}\r\nexport const useIAuthh = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const { userState, userDispatch } = useUserLayer()\r\n    useEffect(() => {\r\n        //if there's no token user will have to login\r\n        if (!userState.token) {\r\n            setLoading(false)\r\n            userDispatch({ type: \"SET_USER_NULL\" })\r\n            return\r\n        }\r\n        //if there's token we have to check if it's valid\r\n        else if (userState.token) {\r\n            setLoading(true)\r\n            fetch(\"http://localhost:8001/api/v1/auth/post\", {\r\n                headers: {\r\n                    \"Authorization\": `bearer ${userState.token}`\r\n                },\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) throw new Error(\"token not valid\");\r\n                    return res\r\n                })\r\n                .then(res => res.json())\r\n                //if token is valid we extract the userData from the token itself and send it to the client\r\n                .then(res => {\r\n                    console.log(res, \"resposns\")\r\n                    userDispatch({ type: \"SET_USER\", payload: { email: res.userData.email } })\r\n                    console.log(\"success nena\", res)\r\n                    setLoading(false)\r\n                })\r\n\r\n                .catch(err => {\r\n                    setLoading(false)\r\n                    //necesary to initialize components that needs to know if user information is ready, like FOllowingDispatcher\r\n                    userDispatch({ type: \"SET_USER_NULL\" })\r\n                    console.log(err.message)\r\n                })\r\n        }\r\n    }, [])\r\n}\r\n\r\n// export const useAuthLogin = (setHasTried, hasTried) => {\r\n//     const [hasPermission, setHasPermission] = useState(false)\r\n//     const [loading, setLoading] = useState(true)\r\n//     const { userState: { token } } = useUserLayer()\r\n//     useEffect(() => {\r\n//         if (hasTried) {\r\n//             setLoading(true)\r\n//             fetch(\"http://localhost:8001/api/v1/auth/post\", {\r\n//                 headers: {\r\n//                     \"Authorization\": `bearer ${token}`\r\n//                 },\r\n//             }).then(res => {\r\n//                 console.log(res, \"resposns\")\r\n//                 if (!res.ok) throw new Error(\"token not valid\")\r\n//                 setHasTried(false)\r\n//                 console.log(\"success nena\", res)\r\n//                 setHasPermission(true)\r\n//                 setLoading(false)\r\n//             })\r\n//                 .catch(err => {\r\n//                     setHasPermission(false)\r\n//                     setLoading(false)\r\n//                     setHasTried(false)\r\n//                     console.log(err.message)\r\n//                 })\r\n//         }\r\n//     }, [hasTried])\r\n//     return { hasPermission, loading }\r\n// }\r\n","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Middleware2.js",["357","358","359","360","361","362","363"],"C:\\Users\\gonza\\finance-app\\src\\App.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"C:\\Users\\gonza\\finance-app\\src\\components\\Navbar.js",["378","379","380","381","382","383","384","385"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport { Chip, Tab, Tabs, useTheme } from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { useDataLayer } from \"../Context\";\r\nimport { useUILayer } from \"../ContextUI\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMesure } from \"../utils/useMesure\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport { formatter } from \"../utils/numFormatter\";\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { CompanyNav } from \"./subNavigations/CompanyNav\";\r\nimport { useUserLayer } from \"../UserContext\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport const Navbar = ({ handleDrawerOpen }) => {\r\n  //const { authState, authService } = useOktaAuth();\r\n  const history = useHistory()\r\n  const { state } = useDataLayer()\r\n  const { sidebarOpen } = useUILayer()\r\n  const location = useLocation()\r\n  const topNavigation = useRef(null)\r\n  const [menuCompaniesOpen, setMenuCompaniesOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const masterRoute = location.pathname.split(\"/\").filter(item => item !== \"\")\r\n    console.log(masterRoute[0], \"first pathname query\")\r\n    if (masterRoute[0] === \"companies\") {\r\n      setMenuCompaniesOpen(true)\r\n    }\r\n    else {\r\n      console.log(\"ahora es falso\")\r\n      setMenuCompaniesOpen(false)\r\n    }\r\n\r\n  }, [location])\r\n\r\n  console.log(location, \"locationnnnnn\")\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  // const button = authState.isAuthenticated ?\r\n  //   <button onClick={() => { authService.logout() }}>Logout</button> :\r\n  //   <button onClick={() => { history.push('/login') }}>Login</button>;\r\n\r\n  const { userDispatch } = useUserLayer()\r\n  const logout = (cb) => {\r\n    userDispatch({ type: \"SET_USER_NULL\" })\r\n    cb()\r\n  }\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: sidebarOpen,\r\n        })}\r\n        ref={topNavigation}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: sidebarOpen,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {menuCompaniesOpen ? state.currentCompany.name : \"FinnTrack\"}\r\n          </Typography>\r\n          <div\r\n            style={{ marginLeft: \"auto\", display: \"flex\", alignItems: \"centeryyy\" }}\r\n          >\r\n            <Button variant=\"contained\" color=\"primary\"\r\n              onClick={() => { history.push(\"/login\") }}\r\n            >login</Button>\r\n            <Button variant=\"contained\" color=\"primary\"\r\n              onClick={() => { logout(() => history.push(\"/login\")) }}\r\n            >Logout</Button>\r\n            <Button\r\n              onClick={() => { history.push(\"/portfoliof\") }}\r\n              variant=\"contained\"\r\n            >\r\n              Investment Dashboard\r\n            </Button>\r\n            <Typography>\r\n              {formatter.format(state.currentPossesions.userCash)} $\r\n            </Typography>\r\n          </div>\r\n          <button onClick={() => { history.push(\"/interests\") }}>interests</button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CompanyNav {...{ menuCompaniesOpen, topNavigation }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n","C:\\Users\\gonza\\finance-app\\src\\portfolio\\portfolioGenerator2.js",["386","387","388","389","390","391","392","393","394","395"],"C:\\Users\\gonza\\finance-app\\src\\index.js",["396","397","398"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./styles/main.css\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { ContextProvider } from './Context';\nimport { UIProvider } from './ContextUI';\nimport { AppWithRouterAccess } from './AppWithRouterAccess';\nimport { UserContext } from './UserContext';\n\n//hasrouter won't work with okta\nReactDOM.render(\n  <React.StrictMode>\n    <UserContext>\n      <ContextProvider>\n        <UIProvider>\n          <BrowserRouter>\n            <AppWithRouterAccess />\n          </BrowserRouter>\n        </UIProvider>\n      </ContextProvider>\n    </UserContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n{/*</Security> */ }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","C:\\Users\\gonza\\finance-app\\src\\useTemporaryPossesions.js",["399","400","401"],"import React, { useEffect, useRef } from 'react'\r\nimport { useDataLayer } from './Context'\r\nimport { userActivity } from './portfolio/logicPruebasConAdd'\r\n\r\nexport const useTemporaryPossesions = () => {\r\n    const { state, dispatch } = useDataLayer()\r\n    const length = useRef(0)\r\n    const iteration = useRef(0)\r\n    useEffect(() => {\r\n        if (state.userActivity.length > 0) {\r\n            length.current = state.userActivity.length\r\n            userActivity.forEach((op, index, arr) => {\r\n                console.log(index, \"opixxo\")\r\n                dispatch({\r\n                    type: \"ADD_PORTFOLIO_CURRENT_POSSESIONS\",\r\n                    payload: {\r\n                        ticker: op.details.ticker,\r\n                        amount: op.details.amount,\r\n                        operationType: op.operationType,\r\n                        cashNetOperation: 0\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type: \"ADD_UNIQUE_STOCKS\",\r\n                    payload: {\r\n                        ticker: op.details.ticker,\r\n                    }\r\n                })\r\n                index + 1 === arr.length && dispatch({ type: \"ENABLE\" })\r\n\r\n            })\r\n        }\r\n    }, [state.userActivity])\r\n\r\n    // useEffect(() => {\r\n    //     iteration.current += 1\r\n    //     console.log(\"botonto\")\r\n    //     console.log(iteration.current, length.current, \"zorrona\")\r\n    //     if (iteration.current === 2) {\r\n    //         dispatch({ type: \"ENABLE\" })\r\n    //     }\r\n    // }, [state.currentPossesions])\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\useAuth.js",["402","403","404"],"import { useOktaAuth } from \"@okta/okta-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useUserLayer } from \"./UserContext\"\r\n\r\nconst useAuth = () => {\r\n  const { authState, authService } = useOktaAuth();\r\n  const { userDispatch } = useUserLayer()\r\n\r\n  useEffect(() => {\r\n    if (!authState.isAuthenticated) {\r\n      // When user isn't authenticated, forget any user info\r\n      userDispatch({ type: \"SET_USER_NULL\" })\r\n    } else {\r\n      authService.getUser().then(info => {\r\n        console.log(\"setting user\", info)\r\n        if (!info) {\r\n          userDispatch({ type: \"SET_USER_NULL\" })\r\n        } else {\r\n          userDispatch({ type: \"SET_USER\", payload: info })\r\n        }\r\n      });\r\n    }\r\n  }, [authState, authService]); // Update if authState changes\r\n\r\n};\r\n\r\nexport default useAuth;","C:\\Users\\gonza\\finance-app\\src\\SignIn2.js",["405","406","407"],"import React, { useContext, useRef, useState } from 'react'\r\nimport { Context } from \"./Context\"\r\nimport { Formik, useField, Form } from \"formik\"\r\nimport { TextField, Button, Paper, makeStyles } from \"@material-ui/core\"\r\nimport * as yup from 'yup';\r\nimport { OktaAuth } from '@okta/okta-auth-js';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        marginBottom: \"1.5rem\"\r\n    }\r\n})\r\nexport default function Formm({ issuer }) {\r\n    const { authService } = useOktaAuth();\r\n    const [sessionToken, setSessionToken] = useState();\r\n    const userData = useRef(\"\")\r\n    const classes = useStyles()\r\n    const CustomTextField = ({ label, ...props }) => {\r\n\r\n        const [field, meta] = useField(props)\r\n        const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n        return (<TextField\r\n            label={label}\r\n            {...field}\r\n            {...props}\r\n            helperText={errorText}\r\n            error={!!errorText}\r\n            variant=\"outlined\"\r\n            classes={{ root: classes.root }}\r\n            autoComplete=\"off\"\r\n\r\n        />)\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        username: yup\r\n            .string()\r\n            .required()\r\n            .max(100),\r\n        email: yup\r\n            .string()\r\n            .email()\r\n            .required()\r\n            .max(100),\r\n        apellido: yup\r\n            .string()\r\n            .required()\r\n            .max(100),\r\n        password: yup\r\n            .string()\r\n            .required()\r\n            .max(10000),\r\n    });\r\n\r\n    console.log(validationSchema, \"validacion\")\r\n    const handleSubmit = (values) => {\r\n        const { email, password } = values\r\n\r\n        const oktaAuth = new OktaAuth({\r\n            // If your app is configured to use the Implicit Flow\r\n            // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\r\n            // you will need to uncomment the below line:\r\n            // pkce: false,\r\n            issuer: issuer\r\n        });\r\n        oktaAuth.signIn({ username: email, password })\r\n            .then(res => {\r\n                const sessionToken = res.sessionToken;\r\n                setSessionToken(sessionToken);\r\n                // sessionToken is a one-use token, so make sure this is only called once\r\n                authService.redirect({ sessionToken });\r\n            })\r\n            .catch(err => console.log('Found an error', err));\r\n    };\r\n\r\n    const handleSubmita = (e) => {\r\n        console.log(e.value, \"suuumitao\")\r\n    }\r\n    console.log(userData.current, \"userData\")\r\n\r\n\r\n\r\n    if (sessionToken) {\r\n        // Hide form while sessionToken is converted into id/access tokens\r\n        return null;\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Formik initialValues={{\r\n                username: \"\",\r\n                email: \"\",\r\n                password: \"\"\r\n            }}\r\n\r\n                validationSchema={validationSchema}\r\n                validateOnChange={true}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    console.log(\"trolaos maricon\")\r\n                    setTimeout(() => {\r\n                        handleSubmit(values)\r\n                        setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n\r\n                {(({ values, handleChange, handleBlur, handleSubmit, errors }) => {\r\n                    return (\r\n                        <Paper\r\n                            elevation={3}\r\n                            className=\"form-wrap\"\r\n                        >\r\n                            <h1 className=\"header-form\">Contact Me!</h1>\r\n                            <Form\r\n                                style={{ textAlign: \"left\", padding: \"1.5rem\" }}\r\n                            >\r\n                                <input type=\"hidden\" name=\"form-name\" value=\"form1\" />\r\n                                <div className=\"wrap-input\">\r\n                                    <CustomTextField\r\n                                        required\r\n                                        name=\"username\"\r\n                                        label=\"username\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"wrap-input\">\r\n                                    <CustomTextField\r\n                                        required\r\n                                        name=\"email\"\r\n                                        label=\"email\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"wrap-input\">\r\n                                    <CustomTextField\r\n                                        required\r\n                                        name=\"password\"\r\n                                        label=\"password\"\r\n                                    />\r\n                                </div>\r\n                                <Button type=\"submit\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    disabled={Object.keys(errors).length > 0}\r\n                                >Submit</Button>\r\n                            </Form>\r\n                        </Paper>\r\n                    )\r\n                })}\r\n            </Formik>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\SignIn.js",[],"C:\\Users\\gonza\\finance-app\\src\\RegistrationForm.js",[],"C:\\Users\\gonza\\finance-app\\src\\components\\Overlay.js",[],"C:\\Users\\gonza\\finance-app\\src\\charts\\KeymetricsChart.js",["408"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useFetch } from '../utils/useFetch';\r\nimport { Multioption } from '../components/Multioption';\r\n//those are historical\r\nexport const KeymetricsChart = () => {\r\n    const { company } = useParams()\r\n    const url = `https://financialmodelingprep.com/api/v3/key-metrics/${company.toUpperCase()}?apikey=651d720ba0c42b094186aa9906e307b4`\r\n    \r\n    const [dataset, setDataset] = useState({})\r\n    const hookOptions = {\r\n        explicitUrl: true\r\n    }\r\n\r\n\r\n    const [chosenFields, setChosenFields] = useState(\r\n        [\"tangibleBookValuePerShare\", \"shareholdersEquityPerShare\", \"interestDebtPerShare\"])\r\n\r\n    const { datos, loading, error } = useFetch(url, company, \"metricsHistorical\", hookOptions)\r\n    useEffect(()=>{\r\n        fetch(\"https://financialmodelingprep.com/api/v3/key-metrics/AMZN?apikey=651d720ba0c42b094186aa9906e307b4\")\r\n        .then(res=>res.json())\r\n        .then(resa=>{console.log(resa, \"resa\")})\r\n        .catch(err=>{console.log(err, \"puto error\")})\r\n    },[])\r\n\r\n    const datasetBuilder = (data) => {\r\n        let masterObject = {}\r\n        Object.keys(data[0]).forEach(item => {\r\n            masterObject[item] = []\r\n        })\r\n        data.forEach(record => {\r\n            Object.keys(record).forEach(item => {\r\n                masterObject[item] = [...masterObject[item], record[item]]\r\n            })\r\n        })\r\n        console.log(masterObject, \"master\")\r\n        return masterObject\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"momop\", datos, datos.length)\r\n        if (datos.length > 0) {\r\n            console.log(\"momo\")\r\n            let readyData = datasetBuilder(datos)\r\n            setDataset(readyData)\r\n        }\r\n    }, [datos])\r\n\r\n\r\n    console.log(datos, \"mammmmma\")\r\n\r\n    const options = {\r\n        chart: {\r\n            type: \"spline\"\r\n        },\r\n        title: {\r\n            text: 'Solar Employment Growth by Sector, 2010-2016'\r\n        },\r\n\r\n        // subtitle: {\r\n        //     text: 'Source: thesolarfoundation.com'\r\n        // },\r\n\r\n        // yAxis: {\r\n        //     title: {\r\n        //         text: 'Number of Employees'\r\n        //     }\r\n        // },\r\n\r\n        // xAxis: {\r\n        //     accessibility: {\r\n        //         rangeDescription: 'Range: 2014 to 2017'\r\n        //     }\r\n        // },\r\n        // xAxis: [{\r\n        //     labels: {\r\n        //         formatter: function () {\r\n        //             const arr = dataset.date[0].split(\"-\")\r\n        //             const arrint = arr.map(item=>parseFloat(item))\r\n        //             return Highcharts.dateFormat('%Y %M %d', new Date(arrint));\r\n        //         }\r\n        //     }\r\n        // }],\r\n        xAxis:{\r\n            allowDecimals: false\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'center',\r\n            verticalAlign: 'bottom'\r\n        },\r\n        height: 500,\r\n        plotOptions: {\r\n            series: {\r\n                label: {\r\n                    connectorAllowed: false\r\n                },\r\n                pointStart: 2014\r\n            }\r\n        },\r\n        series: Object.keys(dataset).length > 0 && chosenFields.map(field => {\r\n            console.log(dataset, \"dooota\")\r\n            return ({\r\n                name: field,\r\n                data: dataset[field]\r\n            }\r\n            )\r\n        })\r\n        ,\r\n\r\n        responsive: {\r\n            rules: [{\r\n                condition: {\r\n                    maxWidth: 500\r\n                },\r\n                chartOptions: {\r\n                    legend: {\r\n                        layout: 'vertical',\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && <p>laoding...</p>}\r\n            {error && <p>{error}</p>}\r\n            {Object.keys(dataset).length > 0 &&\r\n                <div style={{ display: \"flex\", marginTop: \"100px\", height: \"550px\", justifyContent: \"flexEnd\" }}>\r\n                    <HighchartsReact\r\n                        highcharts={Highcharts}\r\n                        options={options}\r\n                        containerProps={{ style: { flex: 1 } }}\r\n                    />\r\n                    <Multioption\r\n                        fields={dataset}\r\n                        setChosenFields={setChosenFields}\r\n                        chosenFields={chosenFields}\r\n                    />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\gonza\\finance-app\\src\\Auth\\ProtectedRoute.js",["409"],"C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\IndexesController.js",["410","411"],"import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { BigIndex } from './BigIndex'\r\nimport { IndexesGeneral } from './IndexesGeneral'\r\nimport { Nasdaq } from './Nasdaq'\r\nimport { SP500 } from './SP500'\r\n\r\n//queda pendiente poner el registro completo con csv \r\nexport const IndexesController = () => {\r\n    const { field } = useParams()\r\n    const bigIndexes = [\"sp500\", \"nasdaq\", \"dowjones\"]\r\n    console.log(field, \"campu\")\r\n    return (\r\n        <>\r\n            {bigIndexes.includes(field) ?\r\n                <BigIndex index={field}/>\r\n                : <IndexesGeneral />}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\PopulateOnScroll.js",["412","413"],"C:\\Users\\gonza\\finance-app\\src\\SignInForm.js",[],"C:\\Users\\gonza\\finance-app\\src\\utils\\useViewport.js",["414"],"import React, { useEffect, useState } from 'react'\r\n\r\nexport const useViewport = () => {\r\n    const [viewport, setViewport] = useState(window.innerWidth)\r\n    const updateViewport = () => {\r\n        setViewport(window.innerWidth)\r\n    }\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"resize\", updateViewport)\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateViewport)\r\n        }\r\n    }, [])\r\n    return { viewport }\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\portfolio\\PortfolioPriceChart.js",["415","416"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\Marcador.js",[],"C:\\Users\\gonza\\finance-app\\src\\components\\Searcher2.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\Post.js",["417","418"],"C:\\Users\\gonza\\finance-app\\src\\charts\\DonutChart.js",["419","420"],"import React, { useState, useEffect } from 'react'\r\nimport Highcharts from \"highcharts\"\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nexport const DonutChart = ({data}) => {\r\n    const chartOptions = {\r\n        chart: {\r\n            type: 'pie',\r\n        },\r\n        title: {\r\n            text: 'Contents of Highsoft\\'s weekly fruit delivery'\r\n        },\r\n        subtitle: {\r\n            text: '3D donut in Highcharts'\r\n        },\r\n        plotOptions: {\r\n            pie: {\r\n                innerSize: 100,\r\n            }\r\n        },\r\n        series: [{\r\n            name: 'Delivered amount',\r\n            data\r\n        }]\r\n        // series: [{\r\n        //     name: 'Delivered amount',\r\n        //     data: [\r\n        //         ['Bananas', 8],\r\n        //         ['Kiwi', 3],\r\n        //         ['Mixed nuts', 1],\r\n        //         ['Oranges', 6],\r\n        //         ['Apples', 8],\r\n        //         ['Pears', 4],\r\n        //         ['Clementines', 4],\r\n        //         ['Reddish (bag)', 1],\r\n        //         ['Grapes (bunch)', 1]\r\n        //     ]\r\n        // }]\r\n    }\r\n    return (\r\n        <HighchartsReact\r\n        highcharts={Highcharts}\r\n        options={chartOptions}\r\n        />\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\utils\\Pipes.js",[],"C:\\Users\\gonza\\finance-app\\src\\charts\\indexesChart2.js",["421","422","423","424","425"],"C:\\Users\\gonza\\finance-app\\src\\utils\\useFatch.js",["426","427","428"],"C:\\Users\\gonza\\finance-app\\src\\components\\NewsItem.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\Rows.js",["429","430","431","432"],"import {\r\n    Collapse,\r\n    IconButton,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { formatter } from \"../../utils/numFormatter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        background: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        // [theme.breakpoints.up(\"sm\")]: {\r\n        //     width: \"700px\"\r\n        // },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"1000px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1250px\"\r\n        }\r\n    },\r\n    tableConatiner: {\r\n\r\n    },\r\n\r\n    iconButton: {\r\n        padding: 0\r\n    },\r\n\r\n    cell: {\r\n        borderBottom: \"none\"\r\n    },\r\n    sectionTitleCell: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            // paddingLeft: 0, paddingRight: 0\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n\r\n            // paddingLeft: 0, paddingRight: \"35px\"\r\n        }\r\n    },\r\n    subtitles: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            // maxWidth: \"130px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            // maxWidth: \"none\",\r\n            // width: \"200px\"\r\n        },\r\n        // maxWidth: \"none\"\r\n    }\r\n}))\r\n\r\n\r\nconst TableCellSmall = withStyles({\r\n    root: {\r\n        transform: \"translateX(1.5rem)\",\r\n        // whiteSpace: \"nowrap\"\r\n    }\r\n})(TableCell)\r\nconst TableCellXSmall = withStyles({\r\n    root: {\r\n        transform: \"translateX(3rem)\",\r\n        // whiteSpace: \"nowrap\"\r\n    }\r\n})(TableCell)\r\n\r\nconst makeShortInt = (item) => formatter.format(parseInt(item) / 1000000).replace(\".00\", \"\")\r\nexport const TableSectionChunk = ({ title, data, lookupKey, open, setOpen }) => {\r\n    const classes = useStyles()\r\n    console.log(data, \"la datona\")\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n            style={{padding: \"0.5rem\", width: \"40px\", textAlign: \"center\"}}\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    onClick={() => { setOpen(prev => !prev) }}\r\n                >\r\n                    {open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell\r\n                classes={{ root: classes.sectionTitleCell }}\r\n                colSpan={2}\r\n                >\r\n                <p\r\n                //style={{width: \"120px\"}}\r\n                \r\n                >{title}</p></TableCell>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                >\r\n                    {makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\nexport const TableSubtitleChunk = ({ title, data, lookupKey, hackWidth }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                classes={{ root: classes.cell }}\r\n                style={{padding: \"0.5rem\", width: \"40px\", textAlign: \"center\"}}\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    <KeyboardArrowUpIcon />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCellSmall\r\n                classes={{ root: classes.cell }}\r\n                colSpan={2}>\r\n                <p\r\n                    className={classes.subtitles}\r\n                >{title}</p>\r\n            </TableCellSmall>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                    style={{ width: hackWidth + \"px\" }}\r\n                    classes={{ root: classes.cell }}\r\n                >{makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\nexport const TableSubSubtitleChunk = ({ title, data, lookupKey, hackWidth }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                classes={{ root: classes.cell }}\r\n                \r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    <KeyboardArrowUpIcon />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCellXSmall\r\n                classes={{ root: classes.cell }}\r\n\r\n                colSpan={2}>\r\n                <p\r\n                    className={classes.subtitles}\r\n                >{title}</p>\r\n            </TableCellXSmall>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                    classes={{ root: classes.cell }}\r\n                    style={{ width: hackWidth + \"px\" }}\r\n                >{makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport const Collapsible = ({ children, renderTitleSection }) => {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <TableBody>\r\n            {renderTitleSection(open, setOpen)}\r\n            <TableRow\r\n            //  style={{...defaultStyles, ...transitionStyles[state]}}\r\n            >\r\n                <TableCell colSpan={8} className=\"nested-cell\">\r\n                    <Collapse\r\n                        in={open}\r\n                        mountOnEnter\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                    >\r\n                        <Table >\r\n                            <TableBody>\r\n                                {children}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport const TableSectionAlone = ({ title, data, lookupKey }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell>\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    {<KeyboardArrowDownIcon />}\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell\r\n                classes={{ root: classes.sectionTitleCell }}\r\n                colSpan={2}\r\n               >\r\n                <p\r\n                //style={{width: \"120px\"}}\r\n                >{title}</p></TableCell>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                >\r\n                    {makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\FollowingDispatcher.js",["433","434","435","436","437"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\Login.js",["438","439"],"C:\\Users\\gonza\\finance-app\\src\\Context.js",[],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\Engine.js",["440","441","442","443","444","445"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useDataLayer } from \"../Context\"\r\nimport { convertHumanToUnixInit } from \"../utils/datesUtils\"\r\nimport { useLogicPruebas } from \"./logicPruebasConAdd\"\r\n\r\n\r\n//1. Deducimos del historial de operaciones los Tickers que necesitamos\r\n//2. Enviamos esos tickers a nuestro servidor, obtnemos sus precios historicos y los devolvemos de vuelta\r\n//3. combinamos y tranformamos esos precios en el cliente y guardamos el resultado en el estado\r\n//4. el resultado nos sirve para conocer el precio de todas las acciones para cualquier fecha y consultarlo de manera muy eficiente\r\n\r\n\r\nexport const useEngine = () => {\r\n\r\n    useLogicPruebas()\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const { missingTicker } = state\r\n    const { stocks } = state.currentPossesions\r\n\r\n    //WHAT if we don't have any ticker yet?\r\n\r\n    const getPricesHistory = async () => {\r\n        try {\r\n            const request = await fetch(\"http://localhost:8001/api/v1/prices/portfolio_prices\", {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(stocks)\r\n            })\r\n            const data = await request.json()\r\n            return data\r\n        }\r\n        catch (err) {\r\n            throw new Error(err, \" aquiii puta\")\r\n        }\r\n    }\r\n    //missing ticker is a tuple for now\r\n    //deberiamos retornar una promesa aquí\r\n    // const getPricesHistoryMissingTicker = async (missingTicker) => {\r\n    //     // console.log(missingTicker, \"totsstocks missing tikcer\")\r\n    //     // console.log(stocks, \"totsstocks\")\r\n    //     // console.log(JSON.stringify(stocks, \"totsstocks\"))\r\n    //     //we need arry format in the server so we use filter intead of find\r\n    //     const misingTickerOperationInfo =\r\n    //         stocks.\r\n    //             filter(asset => asset.ticker.toUpperCase() === missingTicker.toUpperCase())\r\n    //     console.log(misingTickerOperationInfo, \"woot\")\r\n    //     try {\r\n    //         const request = await fetch(\"http://localhost:8001/portfolio2?missingTicker=true\", {\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/json\"\r\n    //             },\r\n    //             method: \"POST\",\r\n    //             body: JSON.stringify(misingTickerOperationInfo)\r\n    //         })\r\n    //         const data = await request.json()\r\n    //         return data\r\n    //     }\r\n    //     catch (err) {\r\n    //         throw new Error(err, \" aquiii puta\")\r\n    //     }\r\n    // }\r\n\r\n\r\n    // //only one at a time right now\r\n    // //this is pointless because we won't know the close proce untill tomorrow\r\n    // //that may be only be usefull when dealing when with real time data\r\n    // const updateData = (data, cb) => {\r\n    //     console.log(data, \"la jodida data\")\r\n    //     const newCompanyData = data[0][missingTicker]\r\n    //     let portfolioHistoryCopy = { ...state.portfolioHistory }\r\n    //     let portfolioHistoryByCompanyCopy = { ...state.portfolioHistoryByCompany }\r\n    //     console.log(portfolioHistoryCopy, \"que wobo\")\r\n    //     console.log(newCompanyData, \"ku pasau\")\r\n    //     newCompanyData.forEach(register => {\r\n    //         const date = register.date.split(\"T\")[0]\r\n    //         if (state.portfolioHistory[date]) {\r\n    //             portfolioHistoryCopy[date] = {\r\n    //                 ...portfolioHistoryCopy[date],\r\n    //                 [missingTicker]: { close: register.close }\r\n    //             }\r\n    //         }\r\n    //         else {\r\n    //             portfolioHistoryCopy[date] = {\r\n    //                 [missingTicker]: { close: register.close }\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     let newCompanyChartData = newCompanyData.map(register => {\r\n    //         const date = register.date.split(\"T\")[0]\r\n    //         return [\r\n    //             convertHumanToUnixInit(date),\r\n    //             register[\"adjClose\"],\r\n    //             register[\"adjHigh\"],\r\n    //             register[\"adjLow\"],\r\n    //             register[\"adjOpen\"]\r\n    //         ]\r\n    //     })\r\n    //     console.log(portfolioHistoryCopy, \"que wobo2\")\r\n    //     console.log(newCompanyChartData, \"perula\", JSON.parse(JSON.stringify(missingTicker)))\r\n    //     portfolioHistoryByCompanyCopy = {\r\n    //         ...portfolioHistoryByCompanyCopy,\r\n    //         [missingTicker]: newCompanyChartData\r\n    //     }\r\n    //     console.log(portfolioHistoryByCompanyCopy, \"perula1\", JSON.parse(JSON.stringify(missingTicker)))\r\n    //     dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_COMPANY_CHART_READY\", payload: portfolioHistoryByCompanyCopy })\r\n\r\n\r\n    //     dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_DATE\", payload: portfolioHistoryCopy })\r\n\r\n    //     cb()\r\n    // }\r\n\r\n    const prepareData = (arr, cb) => {\r\n        \r\n        console.log(arr, \"la arrey\")\r\n        const worker = new Worker(\"/worker.js\")\r\n        worker.postMessage(arr)\r\n        worker.onmessage = e => {\r\n            const { portfolioHistoryByDate, portfolioHistoryByCompanies } = e.data\r\n            console.log(portfolioHistoryByDate, portfolioHistoryByCompanies, \"errr work\")\r\n            dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_COMPANY_CHART_READY\", payload: portfolioHistoryByCompanies })\r\n            dispatch({ type: \"STORE_PORTFOLIO_HISTORY_BY_DATE\", payload: portfolioHistoryByDate })\r\n            cb()\r\n            console.log(portfolioHistoryByCompanies, \"ku pusu\")\r\n\r\n            console.log(arr, \"averaaaa\")\r\n            console.log(portfolioHistoryByDate, \"master\")\r\n        }\r\n    }\r\n\r\n    const __init = async () => {\r\n        //get price data of the user possesions\r\n        console.log(stocks.length, \"tokkee\")\r\n        if (!stocks.length) return\r\n        const initialData = await getPricesHistory()\r\n        console.log(initialData, \"initialprices\")\r\n         //ojo aquí el type que obtemenos de la initialData, \r\n        prepareData(initialData, () => {\r\n            dispatch({ type: \"SET_ARE_HISTORIC_PRICES_READY\", payload: true })\r\n        })\r\n    }\r\n\r\n    //initialize the app\r\n    useEffect(() => {\r\n\r\n        if (state.setPruebaReady) {\r\n            __init()\r\n        }\r\n    }, [state.setPruebaReady])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if(state.setPruebaReady){\r\n    //         console.log(missingTicker, \"missingTicker otstia\")\r\n    //         dispatch({\r\n    //                 type: \"SET_ARE_HISTORIC_PRICES_READY\",\r\n    //                 payload: false\r\n    //             })\r\n    //         const asyncWrapper = async () => {\r\n    //             const missingData = await getPricesHistoryMissingTicker(missingTicker)\r\n    //             updateData(missingData, () => {\r\n    //                 dispatch({dispatch: \"RESTART_MISSING_TICKER\"})\r\n    //                 dispatch({ type: \"SET_ARE_HISTORIC_PRICES_READY\", payload: true })\r\n    //             })\r\n    //         }\r\n    //         asyncWrapper()\r\n    //     }\r\n\r\n    // }, [missingTicker])\r\n\r\n\r\n}\r\n\r\n","C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructure.js",["446","447","448","449","450","451","452","453"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructureB.js",["454","455","456","457"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\Positions.js",["458","459","460","461","462","463","464"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\ContactDetails.js",["465","466","467","468"],"C:\\Users\\gonza\\finance-app\\src\\serviceWorker.ts",[],["469","470"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\UserMain.js",["471","472"],"import React, { useEffect, useState } from 'react'\r\nimport { useDataLayer } from '../Context'\r\nimport { Marcador } from './Marcador'\r\nimport { StockDispatcher } from './StockDispatcher'\r\n\r\nexport const UserMain = () => {\r\n\r\n    const { state } = useDataLayer()\r\n    const [stocks, setStocks] = useState([])\r\n    //const [metadata, setMetadata] = useState(\"\")\r\n    //tenemos que comprobar que cuando entramos al dashboard (por segunda vez), si hay algun stock nuevo que antes no tuviesemos\r\n    useEffect(() => {\r\n        if (state.areHistoricPricesReady > 0) {\r\n            console.log(state.currentPossesions, \"los tenemos\")\r\n            setStocks(state.currentPossesions.stocks)\r\n            //getHistoricals(state.currentPossesions.stocks)\r\n        }\r\n    }, [state.areHistoricPricesReady])\r\n\r\n    \r\n\r\n    return (\r\n        <div\r\n            className=\"user-dashboard\"\r\n        >\r\n            { stocks.length > 0\r\n                &&\r\n                stocks.map(asset => {\r\n                    return (\r\n                        <div\r\n                            className=\"user-dashboard--item\"\r\n                            key={asset.ticker}\r\n                        >\r\n\r\n                            <StockDispatcher\r\n                                ticker={asset.ticker.toUpperCase()}\r\n                            />\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n                )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// const getHistoricals = async (posesions) => {\r\n//     console.log(posesions, \"posesiones\")\r\n//     const tickersArr = posesions.map(item => item.ticker.toUpperCase())\r\n//     try {\r\n//         const request = await fetch(\"http://localhost:8001/portfolio?dates=true\", {\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             },\r\n//             method: \"POST\",\r\n//             body: JSON.stringify(tickersArr)\r\n//         })\r\n//         const datos = await request.json()\r\n//         const readyData = {}\r\n//         datos.forEach(item => {\r\n//             readyData[item.ticker] = { startDate: item.startDate, endDate: item.endDate }\r\n//         })\r\n//         setMetadata(readyData)\r\n//     }\r\n//     catch (err) {\r\n//         console.log(err)\r\n//     }\r\n// }","C:\\Users\\gonza\\finance-app\\src\\utils\\financeCalculations.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\News.js",["473","474","475","476","477","478","479"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { useFetch } from '../../../utils/useFetch'\r\nimport { useFetchWithCors } from '../../../utils/useFetchWithCors'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { GridComposition, NewsItem, NewsItemOver } from '../../../components/NewsItem'\r\nimport { useViewport } from '../../../utils/useViewport'\r\nimport { CompassCalibrationOutlined } from '@material-ui/icons'\r\nimport { useIntersection } from 'react-use';\r\n\r\n\r\nexport const News = ({ principal = false, title, classnames }) => {\r\n    // const {data, loading, error} = useFetchWithCors(\"http://localhost:8001/news\", \"news\", true)\r\n    const { category } = useParams()\r\n    const options = { explicitUrl: true }\r\n    const { datos, loading, error } = useFetch(`https://finnhub.io/api/v1/news?category=${category}&token=btm6dp748v6ud360stcg`, category, \"news\", options)\r\n\r\n    const [datosGrid, setDatosGrid] = useState(\"\")\r\n    const [newsPerPage, setNewsPerPage] = useState(4)\r\n    const debounce = useRef(false)\r\n    const { viewport } = useViewport()\r\n\r\n    const intersectionRef = React.useRef(null);\r\n    const intersection = useIntersection(intersectionRef, {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 1\r\n    });\r\n\r\n    const isLoadingImgs = useRef()\r\n    const arrangeDatos = (data) => {\r\n        let gridArr = []\r\n        let initialNum = 0\r\n        let finalNum = 3\r\n        Array(Math.round(data.length / 3)).fill(0).forEach(() => {\r\n            let chunk = data.slice(initialNum, finalNum)\r\n            gridArr = [...gridArr, chunk]\r\n            initialNum += 3\r\n            finalNum += 3\r\n            console.log(finalNum, \"xii\")\r\n        })\r\n        console.log(gridArr, \"xwww\")\r\n        setDatosGrid(gridArr)\r\n    }\r\n    useEffect(() => {\r\n        if (datos.length > 0) {\r\n            arrangeDatos(datos)\r\n        }\r\n    }, [datos])\r\n\r\n    const [showingSkeletong, setShowingSkeleton] = useState(false)\r\nconsole.log(intersection, \"intersec\")\r\nlet debounceTimer\r\n    useEffect(() => { \r\n        if (intersection && intersection.intersectionRatio < 1.5 && !debounce.current) {\r\n            setNewsPerPage(prev => prev + 1)\r\n            debounce.current = true\r\n            debounceTimer = setTimeout(()=>{\r\n                debounce.current = false\r\n                clearTimeout(debounceTimer)\r\n            }, 500)\r\n        }\r\n\r\n    }, [intersection])\r\n\r\n    console.log(datos.length, \"ojones\")\r\n    return (\r\n        <div className={classnames}>\r\n            {   datos.length > 0 && principal ?\r\n                <>\r\n                    {loading && <p>loading...</p>}\r\n                    {error && <p>{error}</p>}\r\n\r\n\r\n                    <> {viewport < 1000 ?\r\n                        datos.map(item => <NewsItem item={item} />)\r\n                        :\r\n                        (<>\r\n\r\n                            { datosGrid && datosGrid.slice(1, newsPerPage).map((item, index) =>\r\n                                <GridComposition\r\n                                    key={index}\r\n                                    chunk={item}\r\n                                    index={index}\r\n                                />)}\r\n                            {/* { datos && datos.slice(3, datos.length).map(item => <NewsItemOver item={item} />)} */}\r\n                        </>)\r\n                    }\r\n                    </>\r\n\r\n                </>\r\n                :\r\n                <>\r\n                    {datos.length > 0 && datos.map(item => <NewsItem item={item} />)}\r\n                </>\r\n            }\r\n            {datos.length && <div\r\n                ref={intersectionRef}\r\n                style={{ height: \"20px\" }}\r\n            ></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nNews.defaultProps = {\r\n    title: () => null\r\n}","C:\\Users\\gonza\\finance-app\\src\\dashboard\\LateralSection.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\TickerBar2.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\CompanyChart.js",["480","481","482","483","484","485","486","487","488","489","490","491","492"],"C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Constituents.js",["493","494","495"],"import { Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { CustomCircularProgress } from \"../../components/components/CustomCircularProgress\";\r\nimport { useDataLayer } from \"../../Context\";\r\nimport { useFatch } from \"../../utils/useFatch\";\r\n\r\nexport const Constituents = ({ category, categorySan }) => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const subCategory = \"constituents\"\r\n    const url = `https://finnhub.io/api/v1/index/constituents?symbol=${categorySan[1]}&token=btm6dp748v6ud360stcg`\r\n    const options = { explicitUrl: true }\r\n    const debounce = useRef(false)\r\n    const { datos, loading, error } = useFatch(url, subCategory, category, options)\r\n    const readyTickers = useRef({})\r\n    const [constituents, setConstituents] = useState(\"\")\r\n    // const functionPromise =(ticker)=>{\r\n    //     return (fetch(`https://finnhub.io/api/v1/quote?symbol=${ticker}&token=btm6dp748v6ud360stcg`)\r\n    //     .then(res=>res.json())\r\n    //     .then(res=>{readyTickers.current[ticker]=res})\r\n    //     .catch(err=>err.message))\r\n    // }\r\n    // useEffect(()=>{\r\n    //     const fetchAllIndexConstituents =async(arr)=>{\r\n    //         return await Promise.all(arr.map(ticker=>functionPromise(ticker)))\r\n    //     }\r\n    //     if(state.indexes[category] && state.indexes[category][subCategory]){\r\n    //         const constituentsArr = state.indexes[category][subCategory]\r\n    //         console.log(constituentsArr, \"gogol\")\r\n    //        const dataFinal = fetchAllIndexConstituents(constituentsArr.constituents)\r\n    //        console.log(dataFinal, \"gogo\")\r\n    //     }\r\n    // },[state.indexes])\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8001/prueba\")\r\n            .then(res => res.json())\r\n            .then(res => { console.log(res) })\r\n            .catch(err => err.message)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"executed\", category)\r\n        if (state.indexes[category] && state.indexes[category][subCategory]) {\r\n            console.log(state.indexes[category][subCategory], \"pota\")\r\n            fetch(`http://localhost:8001/indexes/constituents/${category}`, {\r\n                body: JSON.stringify({ ticker: state.indexes[category][subCategory].constituents }),\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => { setConstituents(res.data) })\r\n                .catch(err => { console.log(err.message) })\r\n            // .then(res=>{res.json()})\r\n            // .then(res=>{setConstituents(res )})\r\n        }\r\n    }, [state.indexes, category, debounce])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>}\r\n            {/* {datos.constituents && datos.constituents.length > 0 && datos.constituents.map(item => <p>{JSON.stringify(item, null, 2)}</p>)} */}\r\n            { constituents && (<Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                       <TableCell>ticker</TableCell>\r\n                       <TableCell>open</TableCell>\r\n                       <TableCell>close</TableCell>\r\n                       <TableCell>high</TableCell>\r\n                       <TableCell>low</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {constituents.map(item => <TableRow>\r\n                        <TableCell>{item.ticker}</TableCell>\r\n                        <TableCell>{item.open}</TableCell>\r\n                        <TableCell>{item.close}</TableCell>\r\n                        <TableCell>{item.high}</TableCell>\r\n                        <TableCell>{item.low}</TableCell>\r\n                    </TableRow>)}\r\n                </TableBody>\r\n            </Table>)\r\n            }\r\n            {/* {constituents && constituents.map(item => <ul>{Object.keys(item).map(fieldname => <li>{item[fieldname]}</li>)}</ul>)} */}\r\n        </>\r\n    )\r\n\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\principal.js",["496","497","498","499","500"],"C:\\Users\\gonza\\finance-app\\src\\Personas\\PeopleRouter.tsx",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\FinancialStatements\\IncomeStatement.js",["501","502","503","504","505"],"C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\Likes.tsx",["506","507"],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\DetailsSquare.js",["508","509"],"C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\Sectors.js",[],"C:\\Users\\gonza\\finance-app\\src\\components\\Cell.js",[],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\useCompaniesChange.js",["510","511"],"C:\\Users\\gonza\\finance-app\\src\\components\\Sidebar.js",["512","513","514","515"],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\ControllerCompany.js",["516","517"],"C:\\Users\\gonza\\finance-app\\src\\utils\\useMesure.js",["518"],"C:\\Users\\gonza\\finance-app\\src\\components\\Multioption.js",["519","520","521"],"C:\\Users\\gonza\\finance-app\\src\\utils\\useMountApproval.js",["522","523"],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\FinancialOptions.js",["524","525","526"],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\PeersSquare.js",["527","528","529","530","531","532","533","534"],"C:\\Users\\gonza\\finance-app\\src\\views\\covid\\Sliders.js",["535","536","537"],{"ruleId":"538","severity":1,"message":"539","line":1,"column":21,"nodeType":"540","messageId":"541","endLine":1,"endColumn":27},{"ruleId":"538","severity":1,"message":"542","line":3,"column":34,"nodeType":"540","messageId":"541","endLine":3,"endColumn":59},{"ruleId":"538","severity":1,"message":"543","line":195,"column":11,"nodeType":"540","messageId":"541","endLine":195,"endColumn":35},{"ruleId":"538","severity":1,"message":"544","line":467,"column":17,"nodeType":"540","messageId":"541","endLine":467,"endColumn":21},{"ruleId":"545","severity":1,"message":"546","line":512,"column":8,"nodeType":"547","endLine":512,"endColumn":53,"suggestions":"548"},{"ruleId":"549","replacedBy":"550"},{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","severity":1,"message":"554","line":19,"column":11,"nodeType":"540","messageId":"541","endLine":19,"endColumn":20},{"ruleId":"549","replacedBy":"555"},{"ruleId":"551","replacedBy":"556"},{"ruleId":"549","replacedBy":"557"},{"ruleId":"551","replacedBy":"558"},{"ruleId":"545","severity":1,"message":"559","line":98,"column":6,"nodeType":"547","endLine":98,"endColumn":17,"suggestions":"560"},{"ruleId":"549","replacedBy":"561"},{"ruleId":"551","replacedBy":"562"},{"ruleId":"538","severity":1,"message":"563","line":5,"column":8,"nodeType":"540","messageId":"541","endLine":5,"endColumn":15},{"ruleId":"545","severity":1,"message":"564","line":102,"column":8,"nodeType":"547","endLine":102,"endColumn":42,"suggestions":"565"},{"ruleId":"538","severity":1,"message":"566","line":1,"column":16,"nodeType":"540","messageId":"541","endLine":1,"endColumn":20},{"ruleId":"538","severity":1,"message":"567","line":1,"column":22,"nodeType":"540","messageId":"541","endLine":1,"endColumn":30},{"ruleId":"538","severity":1,"message":"568","line":1,"column":32,"nodeType":"540","messageId":"541","endLine":1,"endColumn":44},{"ruleId":"538","severity":1,"message":"569","line":14,"column":10,"nodeType":"540","messageId":"541","endLine":14,"endColumn":15},{"ruleId":"538","severity":1,"message":"570","line":15,"column":10,"nodeType":"540","messageId":"541","endLine":15,"endColumn":17},{"ruleId":"545","severity":1,"message":"571","line":35,"column":10,"nodeType":"547","endLine":35,"endColumn":17,"suggestions":"572"},{"ruleId":"545","severity":1,"message":"573","line":40,"column":10,"nodeType":"547","endLine":40,"endColumn":16,"suggestions":"574"},{"ruleId":"545","severity":1,"message":"575","line":47,"column":8,"nodeType":"547","endLine":47,"endColumn":14,"suggestions":"576"},{"ruleId":"577","severity":1,"message":"578","line":26,"column":31,"nodeType":"579","messageId":"580","endLine":26,"endColumn":67,"fix":"581"},{"ruleId":"545","severity":1,"message":"582","line":52,"column":8,"nodeType":"547","endLine":52,"endColumn":46,"suggestions":"583"},{"ruleId":"584","severity":1,"message":"585","line":30,"column":13,"nodeType":"586","messageId":"587","endLine":30,"endColumn":28},{"ruleId":"538","severity":1,"message":"568","line":5,"column":8,"nodeType":"540","messageId":"541","endLine":5,"endColumn":20},{"ruleId":"538","severity":1,"message":"567","line":6,"column":8,"nodeType":"540","messageId":"541","endLine":6,"endColumn":16},{"ruleId":"538","severity":1,"message":"566","line":7,"column":8,"nodeType":"540","messageId":"541","endLine":7,"endColumn":12},{"ruleId":"538","severity":1,"message":"588","line":8,"column":8,"nodeType":"540","messageId":"541","endLine":8,"endColumn":15},{"ruleId":"538","severity":1,"message":"589","line":34,"column":9,"nodeType":"540","messageId":"541","endLine":34,"endColumn":24},{"ruleId":"545","severity":1,"message":"590","line":46,"column":8,"nodeType":"547","endLine":46,"endColumn":30,"suggestions":"591"},{"ruleId":"545","severity":1,"message":"592","line":71,"column":8,"nodeType":"547","endLine":71,"endColumn":33,"suggestions":"593"},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"538","severity":1,"message":"595","line":7,"column":24,"nodeType":"540","messageId":"541","endLine":7,"endColumn":36},{"ruleId":"545","severity":1,"message":"596","line":26,"column":8,"nodeType":"547","endLine":26,"endColumn":10,"suggestions":"597"},{"ruleId":"538","severity":1,"message":"570","line":30,"column":12,"nodeType":"540","messageId":"541","endLine":30,"endColumn":19},{"ruleId":"545","severity":1,"message":"598","line":67,"column":8,"nodeType":"547","endLine":67,"endColumn":10,"suggestions":"599"},{"ruleId":"538","severity":1,"message":"600","line":1,"column":10,"nodeType":"540","messageId":"541","endLine":1,"endColumn":15},{"ruleId":"538","severity":1,"message":"601","line":2,"column":17,"nodeType":"540","messageId":"541","endLine":2,"endColumn":26},{"ruleId":"538","severity":1,"message":"602","line":10,"column":10,"nodeType":"540","messageId":"541","endLine":10,"endColumn":24},{"ruleId":"538","severity":1,"message":"603","line":11,"column":10,"nodeType":"540","messageId":"541","endLine":11,"endColumn":19},{"ruleId":"538","severity":1,"message":"604","line":17,"column":11,"nodeType":"540","messageId":"541","endLine":17,"endColumn":20},{"ruleId":"538","severity":1,"message":"605","line":21,"column":12,"nodeType":"540","messageId":"541","endLine":21,"endColumn":21},{"ruleId":"538","severity":1,"message":"606","line":21,"column":23,"nodeType":"540","messageId":"541","endLine":21,"endColumn":35},{"ruleId":"538","severity":1,"message":"539","line":1,"column":38,"nodeType":"540","messageId":"541","endLine":1,"endColumn":44},{"ruleId":"538","severity":1,"message":"607","line":13,"column":10,"nodeType":"540","messageId":"541","endLine":13,"endColumn":25},{"ruleId":"538","severity":1,"message":"608","line":16,"column":10,"nodeType":"540","messageId":"541","endLine":16,"endColumn":20},{"ruleId":"538","severity":1,"message":"609","line":18,"column":10,"nodeType":"540","messageId":"541","endLine":18,"endColumn":24},{"ruleId":"538","severity":1,"message":"610","line":24,"column":10,"nodeType":"540","messageId":"541","endLine":24,"endColumn":21},{"ruleId":"538","severity":1,"message":"611","line":25,"column":10,"nodeType":"540","messageId":"541","endLine":25,"endColumn":32},{"ruleId":"538","severity":1,"message":"563","line":26,"column":8,"nodeType":"540","messageId":"541","endLine":26,"endColumn":15},{"ruleId":"538","severity":1,"message":"612","line":32,"column":10,"nodeType":"540","messageId":"541","endLine":32,"endColumn":22},{"ruleId":"545","severity":1,"message":"613","line":118,"column":6,"nodeType":"547","endLine":118,"endColumn":33,"suggestions":"614"},{"ruleId":"538","severity":1,"message":"615","line":131,"column":10,"nodeType":"540","messageId":"541","endLine":131,"endColumn":14},{"ruleId":"538","severity":1,"message":"616","line":138,"column":10,"nodeType":"540","messageId":"541","endLine":138,"endColumn":15},{"ruleId":"538","severity":1,"message":"617","line":138,"column":17,"nodeType":"540","messageId":"541","endLine":138,"endColumn":25},{"ruleId":"545","severity":1,"message":"618","line":160,"column":6,"nodeType":"547","endLine":160,"endColumn":17,"suggestions":"619"},{"ruleId":"545","severity":1,"message":"620","line":172,"column":6,"nodeType":"547","endLine":172,"endColumn":28,"suggestions":"621"},{"ruleId":"538","severity":1,"message":"622","line":10,"column":10,"nodeType":"540","messageId":"541","endLine":10,"endColumn":14},{"ruleId":"538","severity":1,"message":"623","line":10,"column":16,"nodeType":"540","messageId":"541","endLine":10,"endColumn":19},{"ruleId":"538","severity":1,"message":"624","line":10,"column":21,"nodeType":"540","messageId":"541","endLine":10,"endColumn":25},{"ruleId":"538","severity":1,"message":"625","line":10,"column":27,"nodeType":"540","messageId":"541","endLine":10,"endColumn":35},{"ruleId":"538","severity":1,"message":"626","line":14,"column":10,"nodeType":"540","messageId":"541","endLine":14,"endColumn":19},{"ruleId":"538","severity":1,"message":"627","line":15,"column":10,"nodeType":"540","messageId":"541","endLine":15,"endColumn":19},{"ruleId":"538","severity":1,"message":"628","line":16,"column":10,"nodeType":"540","messageId":"541","endLine":16,"endColumn":20},{"ruleId":"538","severity":1,"message":"610","line":18,"column":10,"nodeType":"540","messageId":"541","endLine":18,"endColumn":21},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"538","severity":1,"message":"629","line":1,"column":36,"nodeType":"540","messageId":"541","endLine":1,"endColumn":44},{"ruleId":"538","severity":1,"message":"630","line":4,"column":10,"nodeType":"540","messageId":"541","endLine":4,"endColumn":28},{"ruleId":"538","severity":1,"message":"631","line":10,"column":11,"nodeType":"540","messageId":"541","endLine":10,"endColumn":24},{"ruleId":"538","severity":1,"message":"632","line":22,"column":11,"nodeType":"540","messageId":"541","endLine":22,"endColumn":28},{"ruleId":"538","severity":1,"message":"633","line":154,"column":11,"nodeType":"540","messageId":"541","endLine":154,"endColumn":23},{"ruleId":"538","severity":1,"message":"634","line":159,"column":13,"nodeType":"540","messageId":"541","endLine":159,"endColumn":19},{"ruleId":"538","severity":1,"message":"635","line":159,"column":21,"nodeType":"540","messageId":"541","endLine":159,"endColumn":29},{"ruleId":"538","severity":1,"message":"636","line":159,"column":31,"nodeType":"540","messageId":"541","endLine":159,"endColumn":41},{"ruleId":"545","severity":1,"message":"637","line":279,"column":8,"nodeType":"547","endLine":279,"endColumn":49,"suggestions":"638"},{"ruleId":"538","severity":1,"message":"639","line":5,"column":8,"nodeType":"540","messageId":"541","endLine":5,"endColumn":11},{"ruleId":"538","severity":1,"message":"640","line":7,"column":25,"nodeType":"540","messageId":"541","endLine":7,"endColumn":30},{"ruleId":"641","severity":1,"message":"642","line":29,"column":1,"nodeType":"643","messageId":"644","endLine":29,"endColumn":20},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"538","severity":1,"message":"645","line":8,"column":11,"nodeType":"540","messageId":"541","endLine":8,"endColumn":20},{"ruleId":"545","severity":1,"message":"620","line":33,"column":8,"nodeType":"547","endLine":33,"endColumn":28,"suggestions":"646"},{"ruleId":"538","severity":1,"message":"594","line":2,"column":8,"nodeType":"540","messageId":"541","endLine":2,"endColumn":13},{"ruleId":"538","severity":1,"message":"629","line":2,"column":17,"nodeType":"540","messageId":"541","endLine":2,"endColumn":25},{"ruleId":"545","severity":1,"message":"647","line":23,"column":6,"nodeType":"547","endLine":23,"endColumn":30,"suggestions":"648"},{"ruleId":"538","severity":1,"message":"649","line":1,"column":17,"nodeType":"540","messageId":"541","endLine":1,"endColumn":27},{"ruleId":"538","severity":1,"message":"650","line":2,"column":10,"nodeType":"540","messageId":"541","endLine":2,"endColumn":17},{"ruleId":"538","severity":1,"message":"651","line":78,"column":11,"nodeType":"540","messageId":"541","endLine":78,"endColumn":24},{"ruleId":"538","severity":1,"message":"539","line":1,"column":28,"nodeType":"540","messageId":"541","endLine":1,"endColumn":34},{"ruleId":"538","severity":1,"message":"601","line":1,"column":17,"nodeType":"540","messageId":"541","endLine":1,"endColumn":26},{"ruleId":"538","severity":1,"message":"652","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":16},{"ruleId":"538","severity":1,"message":"653","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":15},{"ruleId":"538","severity":1,"message":"654","line":1,"column":10,"nodeType":"540","messageId":"541","endLine":1,"endColumn":18},{"ruleId":"545","severity":1,"message":"655","line":32,"column":8,"nodeType":"547","endLine":32,"endColumn":22,"suggestions":"656"},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"538","severity":1,"message":"657","line":2,"column":22,"nodeType":"540","messageId":"541","endLine":2,"endColumn":27},{"ruleId":"545","severity":1,"message":"658","line":49,"column":8,"nodeType":"547","endLine":49,"endColumn":15,"suggestions":"659"},{"ruleId":"538","severity":1,"message":"570","line":10,"column":39,"nodeType":"540","messageId":"541","endLine":10,"endColumn":46},{"ruleId":"538","severity":1,"message":"660","line":101,"column":19,"nodeType":"540","messageId":"541","endLine":101,"endColumn":29},{"ruleId":"538","severity":1,"message":"629","line":1,"column":17,"nodeType":"540","messageId":"541","endLine":1,"endColumn":25},{"ruleId":"538","severity":1,"message":"601","line":1,"column":27,"nodeType":"540","messageId":"541","endLine":1,"endColumn":36},{"ruleId":"538","severity":1,"message":"661","line":1,"column":46,"nodeType":"540","messageId":"541","endLine":1,"endColumn":61},{"ruleId":"538","severity":1,"message":"662","line":4,"column":10,"nodeType":"540","messageId":"541","endLine":4,"endColumn":20},{"ruleId":"545","severity":1,"message":"658","line":23,"column":8,"nodeType":"547","endLine":23,"endColumn":15,"suggestions":"663"},{"ruleId":"538","severity":1,"message":"664","line":45,"column":13,"nodeType":"540","messageId":"541","endLine":45,"endColumn":18},{"ruleId":"538","severity":1,"message":"665","line":46,"column":13,"nodeType":"540","messageId":"541","endLine":46,"endColumn":19},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"545","severity":1,"message":"666","line":53,"column":6,"nodeType":"547","endLine":53,"endColumn":13,"suggestions":"667"},{"ruleId":"545","severity":1,"message":"668","line":73,"column":6,"nodeType":"547","endLine":73,"endColumn":21,"suggestions":"669"},{"ruleId":"538","severity":1,"message":"670","line":8,"column":5,"nodeType":"540","messageId":"541","endLine":8,"endColumn":19},{"ruleId":"538","severity":1,"message":"671","line":9,"column":5,"nodeType":"540","messageId":"541","endLine":9,"endColumn":14},{"ruleId":"538","severity":1,"message":"601","line":13,"column":17,"nodeType":"540","messageId":"541","endLine":13,"endColumn":26},{"ruleId":"538","severity":1,"message":"539","line":13,"column":28,"nodeType":"540","messageId":"541","endLine":13,"endColumn":34},{"ruleId":"538","severity":1,"message":"629","line":1,"column":36,"nodeType":"540","messageId":"541","endLine":1,"endColumn":44},{"ruleId":"672","severity":1,"message":"673","line":10,"column":5,"nodeType":"674","messageId":"675","endLine":12,"endColumn":6},{"ruleId":"641","severity":1,"message":"676","line":115,"column":9,"nodeType":"643","messageId":"677","endLine":115,"endColumn":71},{"ruleId":"545","severity":1,"message":"678","line":208,"column":8,"nodeType":"547","endLine":208,"endColumn":10,"suggestions":"679"},{"ruleId":"538","severity":1,"message":"680","line":248,"column":7,"nodeType":"540","messageId":"541","endLine":248,"endColumn":11},{"ruleId":"538","severity":1,"message":"601","line":1,"column":17,"nodeType":"540","messageId":"541","endLine":1,"endColumn":26},{"ruleId":"538","severity":1,"message":"662","line":3,"column":10,"nodeType":"540","messageId":"541","endLine":3,"endColumn":20},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"538","severity":1,"message":"539","line":1,"column":28,"nodeType":"540","messageId":"541","endLine":1,"endColumn":34},{"ruleId":"538","severity":1,"message":"629","line":1,"column":36,"nodeType":"540","messageId":"541","endLine":1,"endColumn":44},{"ruleId":"538","severity":1,"message":"681","line":3,"column":10,"nodeType":"540","messageId":"541","endLine":3,"endColumn":32},{"ruleId":"538","severity":1,"message":"682","line":18,"column":13,"nodeType":"540","messageId":"541","endLine":18,"endColumn":26},{"ruleId":"545","severity":1,"message":"683","line":152,"column":8,"nodeType":"547","endLine":152,"endColumn":30,"suggestions":"684"},{"ruleId":"538","severity":1,"message":"681","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":32},{"ruleId":"538","severity":1,"message":"630","line":5,"column":34,"nodeType":"540","messageId":"541","endLine":5,"endColumn":52},{"ruleId":"538","severity":1,"message":"685","line":5,"column":54,"nodeType":"540","messageId":"541","endLine":5,"endColumn":72},{"ruleId":"538","severity":1,"message":"686","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":17},{"ruleId":"538","severity":1,"message":"687","line":12,"column":20,"nodeType":"540","messageId":"541","endLine":12,"endColumn":28},{"ruleId":"538","severity":1,"message":"688","line":14,"column":11,"nodeType":"540","messageId":"541","endLine":14,"endColumn":16},{"ruleId":"538","severity":1,"message":"689","line":15,"column":11,"nodeType":"540","messageId":"541","endLine":15,"endColumn":16},{"ruleId":"545","severity":1,"message":"690","line":42,"column":8,"nodeType":"547","endLine":42,"endColumn":19,"suggestions":"691"},{"ruleId":"538","severity":1,"message":"539","line":1,"column":38,"nodeType":"540","messageId":"541","endLine":1,"endColumn":44},{"ruleId":"538","severity":1,"message":"630","line":5,"column":34,"nodeType":"540","messageId":"541","endLine":5,"endColumn":52},{"ruleId":"538","severity":1,"message":"685","line":5,"column":54,"nodeType":"540","messageId":"541","endLine":5,"endColumn":72},{"ruleId":"545","severity":1,"message":"692","line":82,"column":8,"nodeType":"547","endLine":82,"endColumn":48,"suggestions":"693"},{"ruleId":"538","severity":1,"message":"694","line":4,"column":38,"nodeType":"540","messageId":"541","endLine":4,"endColumn":47},{"ruleId":"538","severity":1,"message":"695","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":16},{"ruleId":"538","severity":1,"message":"696","line":9,"column":10,"nodeType":"540","messageId":"541","endLine":9,"endColumn":18},{"ruleId":"538","severity":1,"message":"569","line":44,"column":21,"nodeType":"540","messageId":"541","endLine":44,"endColumn":26},{"ruleId":"545","severity":1,"message":"697","line":92,"column":8,"nodeType":"547","endLine":92,"endColumn":46,"suggestions":"698"},{"ruleId":"538","severity":1,"message":"699","line":124,"column":11,"nodeType":"540","messageId":"541","endLine":124,"endColumn":24},{"ruleId":"545","severity":1,"message":"700","line":164,"column":8,"nodeType":"547","endLine":164,"endColumn":15,"suggestions":"701"},{"ruleId":"538","severity":1,"message":"702","line":8,"column":7,"nodeType":"540","messageId":"541","endLine":8,"endColumn":16},{"ruleId":"538","severity":1,"message":"703","line":14,"column":12,"nodeType":"540","messageId":"541","endLine":14,"endColumn":20},{"ruleId":"704","severity":1,"message":"705","line":46,"column":38,"nodeType":"706","endLine":46,"endColumn":91},{"ruleId":"538","severity":1,"message":"707","line":136,"column":7,"nodeType":"540","messageId":"541","endLine":136,"endColumn":16},{"ruleId":"549","replacedBy":"557"},{"ruleId":"551","replacedBy":"558"},{"ruleId":"538","severity":1,"message":"708","line":3,"column":10,"nodeType":"540","messageId":"541","endLine":3,"endColumn":18},{"ruleId":"545","severity":1,"message":"709","line":18,"column":8,"nodeType":"547","endLine":18,"endColumn":38,"suggestions":"710"},{"ruleId":"538","severity":1,"message":"711","line":3,"column":10,"nodeType":"540","messageId":"541","endLine":3,"endColumn":26},{"ruleId":"538","severity":1,"message":"712","line":5,"column":37,"nodeType":"540","messageId":"541","endLine":5,"endColumn":49},{"ruleId":"538","severity":1,"message":"713","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":36},{"ruleId":"538","severity":1,"message":"714","line":29,"column":11,"nodeType":"540","messageId":"541","endLine":29,"endColumn":24},{"ruleId":"538","severity":1,"message":"715","line":50,"column":12,"nodeType":"540","messageId":"541","endLine":50,"endColumn":28},{"ruleId":"538","severity":1,"message":"716","line":50,"column":30,"nodeType":"540","messageId":"541","endLine":50,"endColumn":48},{"ruleId":"545","severity":1,"message":"717","line":57,"column":29,"nodeType":"718","endLine":60,"endColumn":20},{"ruleId":"538","severity":1,"message":"661","line":1,"column":46,"nodeType":"540","messageId":"541","endLine":1,"endColumn":61},{"ruleId":"538","severity":1,"message":"626","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":19},{"ruleId":"538","severity":1,"message":"719","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":26},{"ruleId":"538","severity":1,"message":"720","line":6,"column":28,"nodeType":"540","messageId":"541","endLine":6,"endColumn":42},{"ruleId":"538","severity":1,"message":"600","line":6,"column":44,"nodeType":"540","messageId":"541","endLine":6,"endColumn":49},{"ruleId":"538","severity":1,"message":"721","line":6,"column":51,"nodeType":"540","messageId":"541","endLine":6,"endColumn":61},{"ruleId":"538","severity":1,"message":"722","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":17},{"ruleId":"538","severity":1,"message":"723","line":8,"column":10,"nodeType":"540","messageId":"541","endLine":8,"endColumn":20},{"ruleId":"538","severity":1,"message":"724","line":18,"column":13,"nodeType":"540","messageId":"541","endLine":18,"endColumn":18},{"ruleId":"538","severity":1,"message":"687","line":18,"column":20,"nodeType":"540","messageId":"541","endLine":18,"endColumn":28},{"ruleId":"538","severity":1,"message":"725","line":21,"column":12,"nodeType":"540","messageId":"541","endLine":21,"endColumn":22},{"ruleId":"538","severity":1,"message":"569","line":26,"column":29,"nodeType":"540","messageId":"541","endLine":26,"endColumn":34},{"ruleId":"538","severity":1,"message":"665","line":66,"column":13,"nodeType":"540","messageId":"541","endLine":66,"endColumn":19},{"ruleId":"538","severity":1,"message":"687","line":9,"column":20,"nodeType":"540","messageId":"541","endLine":9,"endColumn":28},{"ruleId":"538","severity":1,"message":"726","line":14,"column":13,"nodeType":"540","messageId":"541","endLine":14,"endColumn":18},{"ruleId":"538","severity":1,"message":"727","line":15,"column":11,"nodeType":"540","messageId":"541","endLine":15,"endColumn":23},{"ruleId":"538","severity":1,"message":"696","line":4,"column":10,"nodeType":"540","messageId":"541","endLine":4,"endColumn":18},{"ruleId":"538","severity":1,"message":"728","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":19},{"ruleId":"538","severity":1,"message":"729","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":25},{"ruleId":"538","severity":1,"message":"730","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":17},{"ruleId":"538","severity":1,"message":"731","line":8,"column":10,"nodeType":"540","messageId":"541","endLine":8,"endColumn":14},{"ruleId":"538","severity":1,"message":"732","line":3,"column":5,"nodeType":"540","messageId":"541","endLine":3,"endColumn":13},{"ruleId":"538","severity":1,"message":"733","line":4,"column":5,"nodeType":"540","messageId":"541","endLine":4,"endColumn":15},{"ruleId":"538","severity":1,"message":"734","line":7,"column":5,"nodeType":"540","messageId":"541","endLine":7,"endColumn":14},{"ruleId":"538","severity":1,"message":"735","line":12,"column":5,"nodeType":"540","messageId":"541","endLine":12,"endColumn":15},{"ruleId":"538","severity":1,"message":"736","line":14,"column":61,"nodeType":"540","messageId":"541","endLine":14,"endColumn":82},{"ruleId":"553","severity":1,"message":"737","line":2,"column":8,"nodeType":"540","messageId":"541","endLine":2,"endColumn":22},{"ruleId":"553","severity":1,"message":"738","line":3,"column":8,"nodeType":"540","messageId":"541","endLine":3,"endColumn":24},{"ruleId":"545","severity":1,"message":"571","line":40,"column":6,"nodeType":"547","endLine":40,"endColumn":13,"suggestions":"739"},{"ruleId":"545","severity":1,"message":"573","line":46,"column":6,"nodeType":"547","endLine":46,"endColumn":12,"suggestions":"740"},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"545","severity":1,"message":"741","line":59,"column":8,"nodeType":"547","endLine":59,"endColumn":49,"suggestions":"742"},{"ruleId":"538","severity":1,"message":"743","line":4,"column":3,"nodeType":"540","messageId":"541","endLine":4,"endColumn":6},{"ruleId":"538","severity":1,"message":"601","line":14,"column":17,"nodeType":"540","messageId":"541","endLine":14,"endColumn":26},{"ruleId":"538","severity":1,"message":"744","line":20,"column":8,"nodeType":"540","messageId":"541","endLine":20,"endColumn":17},{"ruleId":"538","severity":1,"message":"745","line":22,"column":10,"nodeType":"540","messageId":"541","endLine":22,"endColumn":18},{"ruleId":"538","severity":1,"message":"746","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":23},{"ruleId":"538","severity":1,"message":"731","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":14},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"538","severity":1,"message":"747","line":1,"column":16,"nodeType":"540","messageId":"541","endLine":1,"endColumn":33},{"ruleId":"538","severity":1,"message":"748","line":3,"column":8,"nodeType":"540","messageId":"541","endLine":3,"endColumn":16},{"ruleId":"545","severity":1,"message":"749","line":57,"column":8,"nodeType":"547","endLine":57,"endColumn":20,"suggestions":"750"},{"ruleId":"538","severity":1,"message":"594","line":1,"column":8,"nodeType":"540","messageId":"541","endLine":1,"endColumn":13},{"ruleId":"545","severity":1,"message":"751","line":9,"column":8,"nodeType":"547","endLine":9,"endColumn":10,"suggestions":"752"},{"ruleId":"538","severity":1,"message":"753","line":1,"column":10,"nodeType":"540","messageId":"541","endLine":1,"endColumn":16},{"ruleId":"545","severity":1,"message":"754","line":52,"column":8,"nodeType":"547","endLine":52,"endColumn":15,"suggestions":"755"},{"ruleId":"641","severity":1,"message":"642","line":82,"column":1,"nodeType":"643","messageId":"644","endLine":94,"endColumn":11},{"ruleId":"538","severity":1,"message":"756","line":1,"column":10,"nodeType":"540","messageId":"541","endLine":1,"endColumn":18},{"ruleId":"538","severity":1,"message":"757","line":3,"column":10,"nodeType":"540","messageId":"541","endLine":3,"endColumn":32},{"ruleId":"538","severity":1,"message":"758","line":10,"column":27,"nodeType":"540","messageId":"541","endLine":10,"endColumn":35},{"ruleId":"538","severity":1,"message":"569","line":10,"column":37,"nodeType":"540","messageId":"541","endLine":10,"endColumn":42},{"ruleId":"538","severity":1,"message":"759","line":11,"column":25,"nodeType":"540","messageId":"541","endLine":11,"endColumn":34},{"ruleId":"538","severity":1,"message":"760","line":11,"column":36,"nodeType":"540","messageId":"541","endLine":11,"endColumn":42},{"ruleId":"545","severity":1,"message":"761","line":41,"column":8,"nodeType":"547","endLine":41,"endColumn":10,"suggestions":"762"},{"ruleId":"545","severity":1,"message":"763","line":73,"column":8,"nodeType":"547","endLine":73,"endColumn":21,"suggestions":"764"},{"ruleId":"545","severity":1,"message":"765","line":70,"column":8,"nodeType":"547","endLine":70,"endColumn":19,"suggestions":"766"},{"ruleId":"545","severity":1,"message":"767","line":76,"column":8,"nodeType":"547","endLine":76,"endColumn":15,"suggestions":"768"},{"ruleId":"545","severity":1,"message":"769","line":94,"column":8,"nodeType":"547","endLine":94,"endColumn":26,"suggestions":"770"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'convertHumanToUnixInitial' is defined but never used.","'generateSerieFromBeginin' is assigned a value but never used.","'koko' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state.userActivity'. Either include them or remove the dependency array.","ArrayExpression",["771"],"no-native-reassign",["772"],"no-negated-in-lhs",["773"],"@typescript-eslint/no-unused-vars","'StyledDiv' is assigned a value but never used.",["772"],["773"],["772"],["773"],"React Hook useEffect has a missing dependency: 'currentCompany.ticker'. Either include it or remove the dependency array.",["774"],["772"],["773"],"'useAuth' is defined but never used.","React Hook useEffect has a missing dependency: 'modalOpen'. Either include it or remove the dependency array.",["775"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ticker'. Either include it or remove the dependency array. If 'setData' needs the current value of 'ticker', you can also switch to useReducer instead of useState and read 'ticker' in the reducer.",["776"],"React Hook useEffect has missing dependencies: 'dispatch', 'state.keymetrics', and 'ticker'. Either include them or remove the dependency array.",["777"],"React Hook useEffect has a missing dependency: 'setListHeight'. Either include it or remove the dependency array. If 'setListHeight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["778"],"no-whitespace-before-property","Unexpected whitespace before property find.","MemberExpression","unexpectedWhitespace",{"range":"779","text":"780"},"React Hook useEffect has a missing dependency: 'getMarketValueByStock'. Either include it or remove the dependency array.",["781"],"no-dupe-keys","Duplicate key 'plotBorderWidth'.","ObjectExpression","unexpected","'Divider' is defined but never used.","'handleClickOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["782"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["783"],"'React' is defined but never used.","'userDispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userState.token'. Either include it or remove the dependency array.",["784"],"React Hook useEffect has missing dependencies: 'userDispatch' and 'userState.token'. Either include them or remove the dependency array.",["785"],"'Paper' is defined but never used.","'useEffect' is defined but never used.","'LateralSection' is defined but never used.","'Marcador2' is defined but never used.","'Component' is assigned a value but never used.","'dataReady' is assigned a value but never used.","'setDataReady' is assigned a value but never used.","'KeymetricsChart' is defined but never used.","'Financials' is defined but never used.","'CompanySection' is defined but never used.","'useOktaAuth' is defined but never used.","'useTemporaryPossesions' is defined but never used.","'PersonasList' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userState'. Either include them or remove the dependency array.",["786"],"'open' is assigned a value but never used.","'width' is assigned a value but never used.","'setWidth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["787"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["788"],"'Chip' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'useTheme' is defined but never used.","'useParams' is defined but never used.","'useMesure' is defined but never used.","'Transition' is defined but never used.","'useState' is defined but never used.","'convertUnixToHuman' is defined but never used.","'userRefreshed' is assigned a value but never used.","'getLastValidPrice' is assigned a value but never used.","'generateSeri' is assigned a value but never used.","'change' is defined but never used.","'lastDate' is defined but never used.","'lastIncome' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'generateSerie', and 'storePortfolioDB'. Either include them or remove the dependency array.",["789"],"'App' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'iteration' is assigned a value but never used.",["790"],"React Hook useEffect has a missing dependency: 'userDispatch'. Either include it or remove the dependency array.",["791"],"'useContext' is defined but never used.","'Context' is defined but never used.","'handleSubmita' is assigned a value but never used.","'Nasdaq' is defined but never used.","'SP500' is defined but never used.","'debounce' is defined but never used.","React Hook useEffect has missing dependencies: 'chunkCount', 'currentChunk', and 'isDataReadyScroll'. Either include them or remove the dependency array.",["792"],"'chart' is defined but never used.","React Hook useEffect has a missing dependency: 'prepareData'. Either include it or remove the dependency array.",["793"],"'created_at' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'useUILayer' is defined but never used.",["794"],"'ohlNA' is assigned a value but never used.","'volume' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'datos', 'dispatch', 'isInState', 'options.explicitUrl', 'state.indexes', 'ticker', and 'url'. Either include them or remove the dependency array. If 'setRequest' needs the current value of 'ticker', you can also switch to useReducer instead of useState and read 'ticker' in the reducer.",["795"],"React Hook useEffect has missing dependencies: 'field', 'state', and 'ticker'. Either include them or remove the dependency array. If 'setRequest' needs the current value of 'field', you can also switch to useReducer instead of useState and read 'field' in the reducer.",["796"],"'TableContainer' is defined but never used.","'TableHead' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Nested block is redundant.","redundantNestedBlock","React Hook useEffect has a missing dependency: 'timeline'. Either include it or remove the dependency array.",["797"],"'Koko' is assigned a value but never used.","'convertHumanToUnixInit' is defined but never used.","'missingTicker' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__init'. Either include it or remove the dependency array.",["798"],"'milisencondsInADay' is defined but never used.","'rounder' is defined but never used.","'dispatch' is assigned a value but never used.","'data1' is assigned a value but never used.","'data2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'companiesChange' and 'loading'. Either include them or remove the dependency array.",["799"],"React Hook useEffect has a missing dependency: 'prepareDataset'. Either include it or remove the dependency array.",["800"],"'TextField' is defined but never used.","'Search' is defined but never used.","'Searcher' is defined but never used.","React Hook useEffect has missing dependencies: 'getCompanyChange', 'logos', and 'state.currentPossesions.stocks'. Either include them or remove the dependency array.",["801"],"'backToInitial' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'readyState'. Either include it or remove the dependency array.",["802"],"'Container' is assigned a value but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormGroup' is assigned a value but never used.","'Marcador' is defined but never used.","React Hook useEffect has a missing dependency: 'state.currentPossesions'. Either include it or remove the dependency array.",["803"],"'useFetchWithCors' is defined but never used.","'NewsItemOver' is defined but never used.","'CompassCalibrationOutlined' is defined but never used.","'isLoadingImgs' is assigned a value but never used.","'showingSkeletong' is assigned a value but never used.","'setShowingSkeleton' is assigned a value but never used.","Assignments to the 'debounceTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'CircularProgress' is defined but never used.","'LinearProgress' is defined but never used.","'Typography' is defined but never used.","'TableUI' is defined but never used.","'KeyMetrics' is defined but never used.","'state' is assigned a value but never used.","'isBuilding' is assigned a value but never used.","'datos' is assigned a value but never used.","'readyTickers' is assigned a value but never used.","'Searcher2' is defined but never used.","'GainersCarousel' is defined but never used.","'Indices' is defined but never used.","'News' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'TableBody' is defined but never used.","'withStyles' is defined but never used.","'TableSubSubtitleChunk' is defined but never used.","'ThumbUpAltIcon' is defined but never used.","'ThumbDownAltIcon' is defined but never used.",["804"],["805"],"React Hook useEffect has missing dependencies: 'dispatch', 'generateSeries', and 'portfolioHistory'. Either include them or remove the dependency array.",["806"],"'Box' is defined but never used.","'InboxIcon' is defined but never used.","'TreeItem' is defined but never used.","'CovidSection2' is defined but never used.","'ClickAwayListener' is defined but never used.","'DoneIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'setChosenFields'. Either include it or remove the dependency array. If 'setChosenFields' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["807"],"React Hook useEffect has a missing dependency: 'setMountApproval'. Either include it or remove the dependency array.",["808"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'handleGetFieldData'. Either include it or remove the dependency array.",["809"],"'arrayMin' is defined but never used.","'CustomCircularProgress' is defined but never used.","'fetching' is assigned a value but never used.","'pfetching' is assigned a value but never used.","'perror' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.peers' and 'ticker'. Either include them or remove the dependency array. If 'setPeersData' needs the current value of 'ticker', you can also switch to useReducer instead of useState and read 'ticker' in the reducer.",["810"],"React Hook useEffect has missing dependencies: 'dispatch', 'state.peers', and 'ticker'. Either include them or remove the dependency array.",["811"],"React Hook useEffect has a missing dependency: 'recursivadorStyle'. Either include it or remove the dependency array.",["812"],"React Hook useEffect has a missing dependency: 'setMode'. Either include it or remove the dependency array. If 'setMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["813"],"React Hook useEffect has a missing dependency: 'setDate'. Either include it or remove the dependency array. If 'setDate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["814"],{"desc":"815","fix":"816"},"no-global-assign","no-unsafe-negation",{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},[1254,1256],".",{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"851","fix":"852"},{"desc":"851","fix":"853"},{"desc":"854","fix":"855"},{"desc":"856","fix":"857"},{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},{"desc":"862","fix":"863"},{"desc":"864","fix":"865"},{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"821","fix":"872"},{"desc":"823","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},"Update the dependencies array to be: [state.setPruebaReady, state.generatedSeries, state.userActivity, dispatch]",{"range":"892","text":"893"},"Update the dependencies array to be: [currentCompany.ticker, following]",{"range":"894","text":"895"},"Update the dependencies array to be: [modalOpen, state.currentPossesions.userCash]",{"range":"896","text":"897"},"Update the dependencies array to be: [state, ticker]",{"range":"898","text":"899"},"Update the dependencies array to be: [data, dispatch, state.keymetrics, ticker]",{"range":"900","text":"901"},"Update the dependencies array to be: [data, setListHeight]",{"range":"902","text":"903"},"Update the dependencies array to be: [stocks, state.areHistoricPricesReady, getMarketValueByStock]",{"range":"904","text":"905"},"Update the dependencies array to be: [debouncedQuery.email, email]",{"range":"906","text":"907"},"Update the dependencies array to be: [debouncedQuery.username, username]",{"range":"908","text":"909"},"Update the dependencies array to be: [userState.token]",{"range":"910","text":"911"},"Update the dependencies array to be: [userDispatch, userState.token]",{"range":"912","text":"913"},"Update the dependencies array to be: [dispatch, userState, userState.isAuthenticated]",{"range":"914","text":"915"},"Update the dependencies array to be: [dispatch, history, selection]",{"range":"916","text":"917"},"Update the dependencies array to be: [dispatch, state.currentCompany]",{"range":"918","text":"919"},"Update the dependencies array to be: [generatedSeries, areHistoricPricesReady, generateSerie, dispatch, storePortfolioDB]",{"range":"920","text":"921"},"Update the dependencies array to be: [dispatch, state.userActivity]",{"range":"922","text":"923"},"Update the dependencies array to be: [authState, authService, userDispatch]",{"range":"924","text":"925"},"Update the dependencies array to be: [chunkCount, currentChunk, intersection, isDataReadyScroll]",{"range":"926","text":"927"},"Update the dependencies array to be: [datos, prepareData]",{"range":"928","text":"929"},{"range":"930","text":"929"},"Update the dependencies array to be: [datos, dispatch, field, isInState, options.explicitUrl, state.indexes, ticker, url]",{"range":"931","text":"932"},"Update the dependencies array to be: [field, state, state.indexes, ticker]",{"range":"933","text":"934"},"Update the dependencies array to be: [timeline]",{"range":"935","text":"936"},"Update the dependencies array to be: [__init, state.setPruebaReady]",{"range":"937","text":"938"},"Update the dependencies array to be: [available, companiesChange, loading]",{"range":"939","text":"940"},"Update the dependencies array to be: [state.companiesImpact, generatedSeries, prepareDataset]",{"range":"941","text":"942"},"Update the dependencies array to be: [successLogo, quotes, companiesChange, state.currentPossesions.stocks, getCompanyChange, logos]",{"range":"943","text":"944"},"Update the dependencies array to be: [query, readyState]",{"range":"945","text":"946"},"Update the dependencies array to be: [state.areHistoricPricesReady, state.currentPossesions]",{"range":"947","text":"948"},{"range":"949","text":"899"},{"range":"950","text":"901"},"Update the dependencies array to be: [areHistoricPricesReady, dispatch, generateSeries, generatedSeries, portfolioHistory]",{"range":"951","text":"952"},"Update the dependencies array to be: [selections, setChosenFields]",{"range":"953","text":"954"},"Update the dependencies array to be: [setMountApproval]",{"range":"955","text":"956"},"Update the dependencies array to be: [field, handleGetFieldData]",{"range":"957","text":"958"},"Update the dependencies array to be: [state.peers, ticker]",{"range":"959","text":"960"},"Update the dependencies array to be: [dispatch, peerTickers, state.peers, ticker]",{"range":"961","text":"962"},"Update the dependencies array to be: [recursivadorStyle, sliderDay]",{"range":"963","text":"964"},"Update the dependencies array to be: [setMode, value]",{"range":"965","text":"966"},"Update the dependencies array to be: [month, day, year, setDate]",{"range":"967","text":"968"},[25726,25771],"[state.setPruebaReady, state.generatedSeries, state.userActivity, dispatch]",[2944,2955],"[currentCompany.ticker, following]",[3796,3830],"[modalOpen, state.currentPossesions.userCash]",[1296,1303],"[state, ticker]",[1503,1509],"[data, dispatch, state.keymetrics, ticker]",[1740,1746],"[data, setListHeight]",[2161,2199],"[stocks, state.areHistoricPricesReady, getMarketValueByStock]",[1694,1716],"[debouncedQuery.email, email]",[2550,2575],"[debouncedQuery.username, username]",[937,939],"[userState.token]",[2615,2617],"[userDispatch, userState.token]",[4356,4383],"[dispatch, userState, userState.isAuthenticated]",[5643,5654],"[dispatch, history, selection]",[5897,5919],"[dispatch, state.currentCompany]",[12499,12540],"[generatedSeries, areHistoricPricesReady, generateSerie, dispatch, storePortfolioDB]",[1228,1248],"[dispatch, state.userActivity]",[729,753],"[authState, authService, userDispatch]",[1246,1260],"[chunkCount, currentChunk, intersection, isDataReadyScroll]",[1646,1653],"[datos, prepareData]",[828,835],[1422,1429],"[datos, dispatch, field, isInState, options.explicitUrl, state.indexes, ticker, url]",[1938,1953],"[field, state, state.indexes, ticker]",[7429,7431],"[timeline]",[6285,6307],"[__init, state.setPruebaReady]",[1540,1551],"[available, companiesChange, loading]",[3095,3135],"[state.companiesImpact, generatedSeries, prepareDataset]",[3645,3683],"[successLogo, quotes, companiesChange, state.currentPossesions.stocks, getCompanyChange, logos]",[6049,6056],"[query, readyState]",[762,792],"[state.areHistoricPricesReady, state.currentPossesions]",[1466,1473],[1655,1661],[2532,2573],"[areHistoricPricesReady, dispatch, generateSeries, generatedSeries, portfolioHistory]",[1533,1545],"[selections, setChosenFields]",[240,242],"[setMountApproval]",[1894,1901],"[field, handleGetFieldData]",[1658,1660],"[state.peers, ticker]",[3168,3181],"[dispatch, peerTickers, state.peers, ticker]",[2150,2161],"[recursivadorStyle, sliderDay]",[2257,2264],"[setMode, value]",[2798,2816],"[month, day, year, setDate]"]