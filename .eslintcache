[{"C:\\Users\\gonza\\finance-app\\src\\UserContext.js":"1","C:\\Users\\gonza\\finance-app\\src\\portfolio\\logicPruebasConAdd.js":"2","C:\\Users\\gonza\\finance-app\\src\\Personas\\UserItem.tsx":"3","C:\\Users\\gonza\\finance-app\\src\\components\\components\\CustomCircularProgress.js":"4","C:\\Users\\gonza\\finance-app\\src\\components\\subNavigations\\CompanyNav.js":"5","C:\\Users\\gonza\\finance-app\\src\\portfolio\\StockShop.js":"6","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Nasdaq.js":"7","C:\\Users\\gonza\\finance-app\\src\\views\\company\\KeyMetrics.js":"8","C:\\Users\\gonza\\finance-app\\src\\dashboard\\AssetStructure.js":"9","C:\\Users\\gonza\\finance-app\\src\\charts\\linechart.js":"10","C:\\Users\\gonza\\finance-app\\src\\components\\TransitionComponent.js":"11","C:\\Users\\gonza\\finance-app\\src\\Auth\\Register.js":"12","C:\\Users\\gonza\\finance-app\\src\\Auth\\useIAuth.js":"13","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Middleware2.js":"14","C:\\Users\\gonza\\finance-app\\src\\App.js":"15","C:\\Users\\gonza\\finance-app\\src\\components\\Navbar.js":"16","C:\\Users\\gonza\\finance-app\\src\\portfolio\\portfolioGenerator2.js":"17","C:\\Users\\gonza\\finance-app\\src\\index.js":"18","C:\\Users\\gonza\\finance-app\\src\\useTemporaryPossesions.js":"19","C:\\Users\\gonza\\finance-app\\src\\useAuth.js":"20","C:\\Users\\gonza\\finance-app\\src\\SignIn2.js":"21","C:\\Users\\gonza\\finance-app\\src\\SignIn.js":"22","C:\\Users\\gonza\\finance-app\\src\\RegistrationForm.js":"23","C:\\Users\\gonza\\finance-app\\src\\components\\Overlay.js":"24","C:\\Users\\gonza\\finance-app\\src\\charts\\KeymetricsChart.js":"25","C:\\Users\\gonza\\finance-app\\src\\Auth\\ProtectedRoute.js":"26","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\IndexesController.js":"27","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\PopulateOnScroll.js":"28","C:\\Users\\gonza\\finance-app\\src\\SignInForm.js":"29","C:\\Users\\gonza\\finance-app\\src\\utils\\useViewport.js":"30","C:\\Users\\gonza\\finance-app\\src\\portfolio\\PortfolioPriceChart.js":"31","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Marcador.js":"32","C:\\Users\\gonza\\finance-app\\src\\components\\Searcher2.js":"33","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\Post.js":"34","C:\\Users\\gonza\\finance-app\\src\\charts\\DonutChart.js":"35","C:\\Users\\gonza\\finance-app\\src\\utils\\Pipes.js":"36","C:\\Users\\gonza\\finance-app\\src\\charts\\indexesChart2.js":"37","C:\\Users\\gonza\\finance-app\\src\\utils\\useFatch.js":"38","C:\\Users\\gonza\\finance-app\\src\\components\\NewsItem.js":"39","C:\\Users\\gonza\\finance-app\\src\\views\\company\\Rows.js":"40","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\FollowingDispatcher.js":"41","C:\\Users\\gonza\\finance-app\\src\\Auth\\Login.js":"42","C:\\Users\\gonza\\finance-app\\src\\Context.js":"43","C:\\Users\\gonza\\finance-app\\src\\portfolio\\Engine.js":"44","C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructure.js":"45","C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructureB.js":"46","C:\\Users\\gonza\\finance-app\\src\\dashboard\\Positions.js":"47","C:\\Users\\gonza\\finance-app\\src\\Auth\\ContactDetails.js":"48","C:\\Users\\gonza\\finance-app\\src\\serviceWorker.ts":"49","C:\\Users\\gonza\\finance-app\\src\\dashboard\\UserMain.js":"50","C:\\Users\\gonza\\finance-app\\src\\utils\\financeCalculations.js":"51","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\News.js":"52","C:\\Users\\gonza\\finance-app\\src\\dashboard\\LateralSection.js":"53","C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\TickerBar2.js":"54","C:\\Users\\gonza\\finance-app\\src\\views\\company\\CompanyChart.js":"55","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Constituents.js":"56"},{"size":1483,"mtime":1613995380467,"results":"57","hashOfConfig":"58"},{"size":28872,"mtime":1614006255499,"results":"59","hashOfConfig":"58"},{"size":1294,"mtime":1613663688226,"results":"60","hashOfConfig":"58"},{"size":1618,"mtime":1610291129685,"results":"61","hashOfConfig":"58"},{"size":4609,"mtime":1614015075409,"results":"62","hashOfConfig":"58"},{"size":5820,"mtime":1614007748839,"results":"63","hashOfConfig":"58"},{"size":156,"mtime":1605711412858,"results":"64","hashOfConfig":"58"},{"size":2334,"mtime":1608561129906,"results":"65","hashOfConfig":"58"},{"size":2319,"mtime":1613663688238,"results":"66","hashOfConfig":"58"},{"size":2531,"mtime":1606594527518,"results":"67","hashOfConfig":"58"},{"size":1989,"mtime":1607005895516,"results":"68","hashOfConfig":"58"},{"size":5645,"mtime":1613924425251,"results":"69","hashOfConfig":"58"},{"size":3795,"mtime":1613993234800,"results":"70","hashOfConfig":"58"},{"size":1956,"mtime":1613997627744,"results":"71","hashOfConfig":"58"},{"size":9314,"mtime":1614012937857,"results":"72","hashOfConfig":"58"},{"size":4572,"mtime":1613995520837,"results":"73","hashOfConfig":"58"},{"size":12546,"mtime":1614006382809,"results":"74","hashOfConfig":"58"},{"size":1040,"mtime":1608322106668,"results":"75","hashOfConfig":"58"},{"size":1562,"mtime":1608225605796,"results":"76","hashOfConfig":"58"},{"size":819,"mtime":1613917552080,"results":"77","hashOfConfig":"58"},{"size":5522,"mtime":1610907455690,"results":"78","hashOfConfig":"58"},{"size":455,"mtime":1608059587651,"results":"79","hashOfConfig":"58"},{"size":4124,"mtime":1613663688229,"results":"80","hashOfConfig":"58"},{"size":1018,"mtime":1613663688232,"results":"81","hashOfConfig":"58"},{"size":4724,"mtime":1611333256765,"results":"82","hashOfConfig":"58"},{"size":668,"mtime":1613663688204,"results":"83","hashOfConfig":"58"},{"size":628,"mtime":1605723505412,"results":"84","hashOfConfig":"58"},{"size":1672,"mtime":1613917552085,"results":"85","hashOfConfig":"58"},{"size":1868,"mtime":1608404101490,"results":"86","hashOfConfig":"58"},{"size":463,"mtime":1606078800550,"results":"87","hashOfConfig":"58"},{"size":3273,"mtime":1613663688260,"results":"88","hashOfConfig":"58"},{"size":637,"mtime":1608646319792,"results":"89","hashOfConfig":"58"},{"size":1735,"mtime":1609867251793,"results":"90","hashOfConfig":"58"},{"size":5227,"mtime":1613917552086,"results":"91","hashOfConfig":"58"},{"size":1234,"mtime":1609248574030,"results":"92","hashOfConfig":"58"},{"size":90,"mtime":1608554488394,"results":"93","hashOfConfig":"58"},{"size":4178,"mtime":1606997931817,"results":"94","hashOfConfig":"58"},{"size":2424,"mtime":1605785592357,"results":"95","hashOfConfig":"58"},{"size":2707,"mtime":1610903187173,"results":"96","hashOfConfig":"58"},{"size":7221,"mtime":1610571434742,"results":"97","hashOfConfig":"58"},{"size":8528,"mtime":1614020596212,"results":"98","hashOfConfig":"58"},{"size":2516,"mtime":1613996139149,"results":"99","hashOfConfig":"58"},{"size":12604,"mtime":1614002133924,"results":"100","hashOfConfig":"58"},{"size":7079,"mtime":1613663688258,"results":"101","hashOfConfig":"58"},{"size":6747,"mtime":1614000222807,"results":"102","hashOfConfig":"58"},{"size":4494,"mtime":1614001284394,"results":"103","hashOfConfig":"58"},{"size":8873,"mtime":1614002843011,"results":"104","hashOfConfig":"58"},{"size":6426,"mtime":1614081151096,"results":"105","hashOfConfig":"58"},{"size":5295,"mtime":1595505397461,"results":"106","hashOfConfig":"58"},{"size":2255,"mtime":1608643927125,"results":"107","hashOfConfig":"58"},{"size":220,"mtime":1613663688291,"results":"108","hashOfConfig":"58"},{"size":3785,"mtime":1613917552083,"results":"109","hashOfConfig":"58"},{"size":308,"mtime":1608661645022,"results":"110","hashOfConfig":"58"},{"size":1591,"mtime":1613663688307,"results":"111","hashOfConfig":"58"},{"size":5559,"mtime":1609434787599,"results":"112","hashOfConfig":"58"},{"size":4156,"mtime":1605891857388,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tz5z4e",{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"138","usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"119"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"119"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gonza\\finance-app\\src\\UserContext.js",[],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\logicPruebasConAdd.js",["238","239","240","241","242"],"import { useEffect, useRef } from \"react\";\r\nimport { useDataLayer } from \"../Context\";\r\nimport { convertHumanToUnixInit, convertHumanToUnixInitial, convertUnixToHuman, milisencondsInADay } from \"../utils/datesUtils\";\r\nimport { usePortfolioGenerator } from \"./portfolioGenerator2\";\r\n//we lost lot of time by not realising .map() mutate object, so each time we were changing th eamount of one date we were change all the amount of the past dates as well kind of magically. That is because each date is an array of objects, and this objects are references from the previous object as we generate the the series from the objects of the date before. So everytime we were fining the updatedInfo, we were using the same object (as they werre pointing to he same memory dir), instead of a copy..\r\n\r\n\r\n//we are injecting this from App.js\r\n\r\n\r\n\r\n//let initialTimeUnix = 0\r\n//gastamos 12.000 en acciones de amzn\r\n//vendemos 10 acciones a 3000, ingresando 30.000, ganamos 12.000\r\n\r\nconst findFirstDate = (userActivity) => {\r\n    let valu\r\n    userActivity.forEach(operation => {\r\n        if (operation.isFirstOperation) {\r\n           // console.log(operation.date)\r\n            valu = convertHumanToUnixInit(operation.date)\r\n        }\r\n    })\r\n    return valu\r\n}\r\n\r\n\r\n\r\nconst getTotalDaysElapsed = (initialTime) => {\r\n    //const initialTime = findFirstDate()\r\n    const date = convertUnixToHuman(Date.now())\r\n    //console.log(date, \"duuuu\")\r\n    const todayUnix00 = convertHumanToUnixInit(date)\r\n\r\n    //console.log(todayUnix00,\"duuu2\", initialTime)\r\n    const totalMilisecons = todayUnix00 - initialTime\r\n    if (totalMilisecons > 0) {\r\n        return totalMilisecons / milisencondsInADay\r\n    } else {\r\n        //this will only run in the day 0 \r\n        return 1\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const useLogicPruebas = () => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n\r\n    const createTimelaspse = (initialTime) => {\r\n        const firstDate = convertUnixToHuman(initialTime)\r\n        let timelapse = [firstDate]\r\n        let lastDate= initialTime\r\n        //let initialTime = findFirstDate(state.userActivity)\r\n        const range = getTotalDaysElapsed(initialTime)\r\n        //let unixDate = initialTimeUnix.current\r\n        //console.log(range, \"raaango\")\r\n        //console.log(initialTime, \"ostiatime\")\r\n        Array.from(Array(range).keys()).forEach(_ => {\r\n            lastDate += milisencondsInADay\r\n            timelapse = [...timelapse, convertUnixToHuman(lastDate)]\r\n        })\r\n        return timelapse\r\n    }\r\n\r\n    const handleSell = (costMeanXud, amountSold, priceSold) => {\r\n        const income = (priceSold * amountSold) - (costMeanXud * amountSold)\r\n        return { income }\r\n    }\r\n\r\n    // const addToGeneratedSeries = (newOperation, cb) => {\r\n    //     //we could save the first date in database intead of calculating everytime\r\n    //     console.log(\"queee hostiaaaaaaa\")\r\n    //     let today;\r\n    //     const { unitaryCost, ticker, amount } = newOperation.details\r\n    //     const currentGeneratedSerie = state.generatedSeries\r\n    //     //we need to get today's serie last key\r\n    //     console.log(JSON.parse(JSON.stringify(currentGeneratedSerie)), \"quepaso1\")\r\n    //     if (newOperation.isFirstOperation) {\r\n    //         //the generated serie won't have any date\r\n    //         today = convertUnixToHuman(Date.now())\r\n    //         const updatedSeries = {\r\n    //             ...state.generatedSeries,\r\n    //             dates: {\r\n    //                 [today]: {\r\n    //                     income: 0,\r\n    //                     positions: [\r\n    //                         {ticker, amount, unitaryCost}\r\n    //                     ]\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         cb(updatedSeries)\r\n    //         return\r\n    //         //we leave the function here\r\n    //     }\r\n    //     //realmente ya tenemos la date de hoy en newOperation\r\n    //     today = Object.keys(currentGeneratedSerie.dates)[Object.keys(currentGeneratedSerie.dates).length - 1]\r\n\r\n    //     console.log(state.generatedSeries, \"repuuuuta\")\r\n    //     console.log(JSON.parse(JSON.stringify(today)), \"quepaso2\")\r\n    //     let todayRegister = currentGeneratedSerie.dates[today]\r\n    //     console.log(todayRegister, \"registro de hoy\")\r\n\r\n    //     let alreadyInPortfolio = todayRegister.positions.find(asset => asset.ticker === ticker)\r\n    //     if (alreadyInPortfolio) {\r\n    //         if (newOperation.operationType === \"buy\") {\r\n    //             const newAmount = alreadyInPortfolio.amount + amount\r\n    //             const unitaryCostMean =\r\n    //                 (alreadyInPortfolio.unitaryCost * alreadyInPortfolio.amount) /\r\n    //                 (alreadyInPortfolio.amount + amount)\r\n    //                 +\r\n    //                 (unitaryCost * amount) /\r\n    //                 (alreadyInPortfolio.amount + amount)\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio\r\n    //             }\r\n    //             const readyUnitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n    //             const otherPositions = todayRegister.positions.filter(asset => asset.ticker !== ticker)\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio,\r\n    //                 amount: newAmount,\r\n    //                 unitaryCost: readyUnitaryCost\r\n    //             }\r\n    //             todayRegister = {\r\n    //                 ...todayRegister,\r\n    //                 positions: [\r\n    //                     ...otherPositions,\r\n\r\n    //                 ]\r\n    //             }\r\n    //         } else {\r\n    //             //sell\r\n    //             const newAmount = alreadyInPortfolio.amount - amount\r\n    //             const { income } = handleSell(alreadyInPortfolio.unitaryCost, amount, newOperation.details.priceSold)\r\n    //             //we need to check if there was income for this ticker (if was sold anytime before)\r\n    //             const newIncome = alreadyInPortfolio.income ? alreadyInPortfolio.income + income : income\r\n    //             alreadyInPortfolio = {\r\n    //                 ...alreadyInPortfolio,\r\n    //                 income: newIncome,\r\n    //                 amount: newAmount\r\n    //             }\r\n    //             const otherPositions = todayRegister.positions.filter(asset => asset.ticker !== ticker)\r\n    //             if (newAmount > 0) {\r\n    //                 todayRegister = {\r\n    //                     ...todayRegister,\r\n    //                     positions: [\r\n    //                         ...otherPositions,\r\n    //                         alreadyInPortfolio\r\n    //                     ],\r\n    //                     income: todayRegister.income + income\r\n    //                 }\r\n    //             } else {\r\n    //                 const updatedPositions = todayRegister.positions.filter(asset => asset.ticker === ticker)\r\n    //                 todayRegister = {\r\n    //                     ...todayRegister,\r\n    //                     positions: updatedPositions,\r\n    //                     income: todayRegister.income + income\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //     } else {\r\n    //         if (newOperation.operationType === \"buy\") {\r\n    //             todayRegister = {\r\n    //                 ...todayRegister,\r\n    //                 positions: [...todayRegister.positions,\r\n    //                 { ticker, amount, unitaryCost }]\r\n    //             }\r\n    //         } else {\r\n    //             throw new Error(ticker, amount, \"can't sell stock that don't have\")\r\n    //         }\r\n    //     }\r\n    //     const updatedSeries = {\r\n    //         ...state.generatedSeries,\r\n    //         dates: {\r\n    //             ...state.generatedSeries.dates,\r\n    //             [today]: todayRegister\r\n    //         }\r\n    //     }\r\n    //     console.log(updatedSeries, \"repuuuuta2\")\r\n    //     cb(updatedSeries)\r\n    // }\r\n\r\n    const generateSerieFromBegining = (userActivity, cb) =>{\r\n        const worker = new Worker(\"/worker2.js\")\r\n        worker.postMessage(userActivity)\r\n        worker.onmessage=(e)=>{\r\n            console.log(e.data, \"posesions generated\")\r\n            const possesionGenerated = e.data\r\n            cb(possesionGenerated)\r\n        }\r\n    }\r\n    const generateSerieFromBeginin = (userActivity, cb) => {\r\n \r\n       // console.log(userActivity, \"actividad usuario\")\r\n        const initialTime = findFirstDate(userActivity)\r\n       // console.log(initialTime, \"tiempooo\")\r\n        //console.log(convertUnixToHuman(initialTime), \"crazyy\")\r\n        const timelapse = createTimelaspse(initialTime)\r\n       \r\n        let masterHistory;\r\n        let koko = 0\r\n        masterHistory = {\r\n            income: 0\r\n        }\r\n        //console.log(timelapse, \"timelapse\")\r\n        if (!timelapse.length) {\r\n            masterHistory = {\r\n                ...masterHistory,\r\n                dates: {\r\n                }\r\n            }\r\n        }\r\n        timelapse.forEach(date => {\r\n            masterHistory = {\r\n                ...masterHistory,\r\n                dates: {\r\n                    ...masterHistory.dates,\r\n                    [date]: []\r\n                }\r\n            }\r\n        })\r\n\r\n        //here we initialize an empty array for each date\r\n        console.log(masterHistory, \"maastar\")\r\n        console.log(timelapse, \"timelapse\")\r\n        timelapse.forEach((date, index) => {\r\n            let hasMadeOperationThatDate = false\r\n            userActivity.forEach(operation => {\r\n                //console.log(typeof operation.date,typeof date,date, \"kostia\")\r\n                //console.log(operation.date, date, \"kostia\")\r\n                if (date === operation.date) {\r\n                    //console.log(index, \"iiii\")\r\n                    //console.log(\"hola\")\r\n                    //console.log(date, \"first date\")\r\n                    hasMadeOperationThatDate = true\r\n                    let ticker = operation.details.ticker\r\n                    let amount = operation.details.amount\r\n                    let unitaryCost = operation.details.unitaryCost\r\n                    let priceSold = operation.details.priceSold\r\n\r\n                    //tenemos que comprobar si teniamos alguna cantidad previamente de ese ticker\r\n                    let lastAmount = 0\r\n                    //console.log(JSON.parse(JSON.stringify(masterHistory)), JSON.parse(JSON.stringify(masterHistory.dates)), masterHistory.dates[date], date, \"wata\")\r\n                    const hasAlreadyOperatedThatDay = masterHistory[\"dates\"][date].positions\r\n                    if (hasAlreadyOperatedThatDay) {\r\n                        //console.log(ticker, \"operated twice that day\")\r\n                        const alreadyInPortfolio = masterHistory.dates[date].positions.find(item => item.ticker === ticker)\r\n                        if (alreadyInPortfolio) {\r\n                            lastAmount = alreadyInPortfolio.amount\r\n                            const newAmount =\r\n                                operation.operationType === \"buy\" ?\r\n                                    lastAmount + amount : lastAmount - amount\r\n                            if (operation.operationType === \"buy\") {\r\n                                const updatedInfo = masterHistory.dates[date].positions.map(({ ...posesions }) => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        posesions.amount = newAmount\r\n                                        const unitaryCostMean =\r\n                                            (posesions.unitaryCost * posesions.amount) /\r\n                                            (posesions.amount + amount)\r\n                                            +\r\n                                            (unitaryCost * amount) /\r\n                                            (posesions.amount + amount)\r\n\r\n                                        posesions.unitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n                                    }\r\n                                    return posesions\r\n                                })\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[date],\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            else if (operation.operationType === \"sell\") {\r\n                                let dateIncome, operationIncome;\r\n                                masterHistory.dates[date].positions.forEach(posesions => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        if (index === 0) {\r\n                                           // console.log(posesions.unitaryCost,\r\n                                             //   amount, priceSold, \"incomeee\")\r\n                                        }\r\n                                        const { income } = handleSell(posesions.unitaryCost, amount, priceSold)\r\n                                        if (index === 0) {\r\n                                            //console.log(JSON.parse(JSON.stringify(income, \"incomeee\")))\r\n                                        }\r\n                                        operationIncome = income\r\n\r\n                                        dateIncome = masterHistory.dates[date].income + income\r\n                                    }\r\n                                })\r\n                                let updatedInfo = newAmount !== 0 ?\r\n                                    //if we don't use spreed operatior we will be mutating the original object\r\n                                    masterHistory.dates[date].positions.map(({ ...posesions }) => {\r\n                                        if (posesions.ticker === ticker) {\r\n                                            posesions.amount = newAmount\r\n                                            posesions[\"income\"] = operationIncome\r\n                                        }\r\n                                        return posesions\r\n                                    })\r\n                                    :\r\n                                    masterHistory.dates[date].positions.filter(item => item.ticker !== ticker)\r\n\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: dateIncome,\r\n                                            positions: updatedInfo\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            masterHistory = {\r\n                                ...masterHistory,\r\n                                dates: {\r\n                                    ...masterHistory.dates,\r\n                                    [date]: {\r\n                                        ...masterHistory.dates[date],\r\n                                        positions: [\r\n                                            ...masterHistory.dates[date].positions,\r\n                                            {\r\n                                                ticker,\r\n                                                amount,\r\n                                                unitaryCost\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //if is the first iteration we now this is the initial operation so there're weren stocks before.\r\n                    else {\r\n                        const alreadyInPortfolio = index === 0 ? false : masterHistory.dates[timelapse[index - 1]].positions.find(item => item.ticker === ticker)\r\n                       // console.log(alreadyInPortfolio, \"que concho\")\r\n                        if (alreadyInPortfolio) {\r\n                            lastAmount = alreadyInPortfolio.amount\r\n                            const newAmount =\r\n                                operation.operationType === \"buy\" ?\r\n                                    lastAmount + amount : lastAmount - amount\r\n                            if (operation.operationType === \"buy\") {\r\n                                const updatedInfo = masterHistory.dates[timelapse[index - 1]].positions.map(({ ...posesions }) => {\r\n                         //           console.log(posesions, \"cojones\")\r\n                                    if (posesions.ticker === ticker) {\r\n                                        posesions.amount = newAmount\r\n                                        const unitaryCostMean =\r\n                                            (posesions.unitaryCost * posesions.amount) /\r\n                                            (posesions.amount + amount)\r\n                                            +\r\n                                            (unitaryCost * amount) /\r\n                                            (posesions.amount + amount)\r\n\r\n                                        posesions.unitaryCost = Math.round(unitaryCostMean * 100) / 100\r\n                                    }\r\n                                    return posesions\r\n                                })\r\n\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[timelapse[index - 1]],\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            else if (operation.operationType === \"sell\") {\r\n                                // console.log(JSON.parse(JSON.stringify(masterHistory)), \"antes\", ticker, date, timelapse[index - 1])\r\n                                //let newIncome;\r\n                                let operationIncome;\r\n                                let dateIncome;\r\n                                masterHistory.dates[timelapse[index - 1]].positions.forEach(posesions => {\r\n                                    if (posesions.ticker === ticker) {\r\n                                        const { income } = handleSell(posesions.unitaryCost, amount, priceSold)\r\n                                        operationIncome = income\r\n                                        dateIncome = masterHistory.dates[timelapse[index - 1]].income + income\r\n                                    }\r\n                                })\r\n                                let updatedInfo = newAmount !== 0 ?\r\n                                    masterHistory.dates[timelapse[index - 1]].positions.map(({ ...posesions }) => {\r\n                                        if (posesions.ticker === ticker) {\r\n                                            posesions.amount = newAmount\r\n                                            posesions[\"income\"] = operationIncome\r\n                                        }\r\n                                        return posesions\r\n                                    })\r\n                                    :\r\n                                    masterHistory.dates[timelapse[index - 1]].positions.filter(item => item.ticker !== ticker)\r\n                                // console.log(JSON.parse(JSON.stringify(masterHistory)), \"despues\", ticker, date, timelapse[index - 1])\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: dateIncome,\r\n                                            positions: updatedInfo\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            //si opera varias en un dia, el codigo no debe pasar x aqui\r\n                            const info = {\r\n                                ticker,\r\n                                amount,\r\n                                unitaryCost\r\n                            }\r\n\r\n                            if (index === 0) {\r\n                                //console.log(info, \"info\")\r\n                                //aunque sea el primer dia\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            income: 0,\r\n                                            positions: [\r\n                                                info\r\n                                            ]\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n\r\n                            } else {\r\n                                masterHistory = {\r\n                                    ...masterHistory,\r\n                                    dates: {\r\n                                        ...masterHistory.dates,\r\n                                        [date]: {\r\n                                            ...masterHistory.dates[timelapse[index - 1]],\r\n                                            positions: [\r\n                                                ...masterHistory.dates[timelapse[index - 1]].positions,\r\n                                                info\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                   // console.log(\"noooooooooo\")\r\n                }\r\n            })\r\n            if (!hasMadeOperationThatDate) {\r\n                //si no hemos operado copiaremos el contenido del dia anterior\r\n                //console.log(\"no operation that day\")\r\n                koko++\r\n                //console.log(koko, \"recuento\")\r\n                const lastInfo = masterHistory.dates[timelapse[index - 1]]\r\n                //console.log(lastInfo)\r\n                masterHistory = {\r\n                    ...masterHistory,\r\n                    dates: {\r\n                        ...masterHistory.dates,\r\n                        [date]: lastInfo\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        console.log(masterHistory, \"aveeer nena\")\r\n        cb(masterHistory)\r\n    }\r\n    //solo se recalcularan las series cuando el ususario haya echo una nueva operacion y o cuando haya entrado en portolio dashboard\r\n    usePortfolioGenerator()\r\n    useEffect(() => {\r\n        //this needs to fire either when initialState is ready and everytime we add new operation (user activity changes), as we need this to calculate the changes in AssetStructure chart\r\n        console.log(state.userActivity, state.setPruebaReady, state.generatedSeries.ready, \"actu\")\r\n        //setPruebaReady creo que es redundante aqui ya que cuando generatedSeries.status es falso significa que hemos realizado una nueva operacion (deberiamos impedir realizar nueva operacion hasta que no generatedSeries.status sea true again)\r\n        if (state.userActivity.length > 0 && state.setPruebaReady && !state.generatedSeries.ready) {\r\n            console.log(\"exxecutao\")\r\n            //if no userActivity we wont run any code\r\n                generateSerieFromBegining(state.userActivity, (generatedSerie) => {\r\n                    console.log(\"exxecutao2\")\r\n                    dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie })\r\n                })\r\n            //  else {\r\n            //     const newOperation = state.userActivity[state.userActivity.length - 1]\r\n            //     dispatch({ type: \"SET_ARE_GENERATED_SERIES_READY\", payload: false })\r\n            //     addToGeneratedSeries(newOperation, (generatedSerie) => {\r\n            //         dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie })\r\n            //         dispatch({ type: \"SET_ARE_GENERATED_SERIES_READY\", payload: true })\r\n            //         //userRefreshed.current will be alredy false\r\n            //     })\r\n            // }\r\n            \r\n        }\r\n        \r\n       \r\n        // if (state.userActivity.length > 0 && Object.keys(state.portfolioHistory).length > 0) {\r\n        //     generateSerieFromBegining(state.userActivity, (generatedSerie) => { dispatch({ type: \"STORE_GENERATED_SERIES\", payload: generatedSerie }) })\r\n        // }\r\n    }, [state.setPruebaReady, state.generatedSeries])\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//console.log(createTimelaspse(), \"yea\")\r\n\r\n\r\n\r\n\r\n//makeIt()\r\n//console.log(findFirstDate(), \"aqui\")\r\n\r\n\r\nexport const userActivity = [\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"amzn\",\r\n            amount: 40,\r\n            unitaryCost: 300\r\n\r\n        },\r\n        isFirstOperation: true,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 60,\r\n            unitaryCost: 300\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-15\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 40,\r\n            priceSold: 300\r\n\r\n        },\r\n        isFirstOperation: false,\r\n    },\r\n    {\r\n        date: \"2020-06-16\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 40,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-06-22\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 30,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n    },\r\n    {\r\n        date: \"2020-06-25\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"aa\",\r\n            amount: 30,\r\n            unitaryCost: 14\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-07-18\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"aapl\",\r\n            amount: 10,\r\n            priceSold: 315\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 100,\r\n            unitaryCost: 10\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 20,\r\n            unitaryCost: 10\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-08-21\",\r\n        operationType: \"buy\",\r\n        details: {\r\n            ticker: \"tef\",\r\n            amount: 80,\r\n            unitaryCost: 7\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-09-24\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"fb\",\r\n            amount: 120,\r\n            priceSold: 20\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n\r\n    },\r\n    {\r\n        date: \"2020-09-21\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"tef\",\r\n            amount: 45,\r\n            priceSold: 3\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    },\r\n    {\r\n        date: \"2020-10-26\",\r\n        operationType: \"sell\",\r\n        details: {\r\n            ticker: \"amzn\",\r\n            amount: 10,\r\n            priceSold: 3000\r\n\r\n        },\r\n        isFirstOperation: false,\r\n\r\n    }\r\n]",["243","244"],"C:\\Users\\gonza\\finance-app\\src\\Personas\\UserItem.tsx",["245"],"import React, { ReactNode } from 'react'\r\nimport { PortfolioPriceChart } from '../portfolio/PortfolioPriceChart'\r\nimport { PeopleItem } from './interfaces'\r\nimport styled from \"styled-components\"\r\nimport { makeStyles, Paper } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface IProps {\r\n    person: PeopleItem\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"350px\"\r\n    }\r\n})\r\nexport const UserItem: React.FC<IProps> = ({ person }) => {\r\n    const { user, portfolio } = person\r\n\r\n    const StyledDiv = styled.div`\r\n        width: 200px\r\n    `\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper\r\n            classes={{ root: classes.root }}\r\n        >\r\n            <UserInfo>\r\n                <Link to={`/people/${user.userId}`}>\r\n                    <h3>{user.firstName}</h3>\r\n                </Link>\r\n                <h6>{user.lastName}</h6>\r\n            </UserInfo>\r\n            <Portfolio>\r\n                <PortfolioPriceChart datos={portfolio} title={`${user.firstName} Portfolio`} />\r\n            </Portfolio>\r\n        </Paper>\r\n    )\r\n}\r\n\r\ninterface ICProps {\r\n    children: ReactNode\r\n}\r\nconst UserInfo: React.FC<ICProps> = ({ children }) => <>{children}</>\r\nconst Portfolio: React.FC<ICProps> = ({ children }) => <>{children}</>",["246","247"],"C:\\Users\\gonza\\finance-app\\src\\components\\components\\CustomCircularProgress.js",[],"C:\\Users\\gonza\\finance-app\\src\\components\\subNavigations\\CompanyNav.js",["248"],"import { AppBar, Button, Chip, makeStyles, Tab, Tabs } from '@material-ui/core';\r\nimport React, { forwardRef, useEffect, useState } from 'react'\r\nimport { Transition } from 'react-transition-group';\r\nimport { useMesure } from '../../utils/useMesure';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport { useDataLayer } from '../../Context';\r\nimport { useUILayer } from '../../ContextUI';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { useUserLayer } from '../../UserContext';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarCompany: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    transition: theme.transitions.create([\"top\", \"transform\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    transform: \"translateX(0px)\",\r\n  },\r\n  appBarCompanyShift: {\r\n    transform: `translateX(${drawerWidth}px)`\r\n  },\r\n  tab: {\r\n    marginLeft: \"60px\",\r\n  },\r\n  white: {\r\n    borderColor: \"white\"\r\n  },\r\n}));\r\n\r\nexport const CompanyNav = forwardRef(({ menuCompaniesOpen, topNavigation }) => {\r\n\r\n  const { state: { currentCompany, following }, dispatch } = useDataLayer()\r\n  const { sidebarOpen, setMountApproval } = useUILayer()\r\n  const { userState: { info } } = useUserLayer()\r\n  const { height } = useMesure(topNavigation)\r\n  const history = useHistory()\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  console.log(currentCompany, following, \"muuuuwwww\")\r\n\r\n  const menu2transitions = {\r\n    entering: {\r\n      top: `${height}px`,\r\n    },\r\n    entered: {\r\n      top: `${height}px`,\r\n    },\r\n    exiting: {\r\n      top: \"0px\",\r\n    },\r\n    exited: {\r\n      top: \"0px\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, val) => {\r\n    setTabValue(val)\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const navigate = (url) => {\r\n    history.push(`${url}/${currentCompany.ticker}`)\r\n  }\r\n\r\n  const handleFollow = () => {\r\n    fetch(`http://localhost:8001/api/v1/interests/interests?email=${info.email}&interest=${currentCompany.ticker}`)\r\n      .then(res => res.json())\r\n      .then(interest => {\r\n        if (typeof interest === \"string\") {\r\n          interest = [interest]\r\n        }\r\n        dispatch({ type: \"STORE_USER_INTEREST\", payload: interest })\r\n      })\r\n      .catch(err => { console.log(err.message, \"can't update interest\") })\r\n  }\r\n\r\n  const [isFollowing, setIsFollowing] = useState(false)\r\n  useEffect(() => {\r\n    if (!following.length) {\r\n      setIsFollowing(false)\r\n      return\r\n    }\r\n    //hay que tener en cuenta si esta logeao o no\r\n    const _isFollowing = following.find(tag => tag === currentCompany.ticker)\r\n    setIsFollowing(!!_isFollowing)\r\n\r\n  }, [following])\r\n  return (\r\n    <Transition\r\n      in={menuCompaniesOpen}\r\n      timeout={300}\r\n      // mountOnEnter\r\n      // unmountOnExit\r\n      onExited={() => { setMountApproval(true) }}\r\n    >\r\n      {animationState => (\r\n        <AppBar\r\n          className={clsx(classes.appBarCompany, {\r\n            [classes.appBarCompanyShift]: sidebarOpen\r\n          })}\r\n          style={menu2transitions[animationState]}\r\n        >\r\n          <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\"\r\n            classes={{ root: classes.tab }}\r\n          >\r\n            <Tab label=\"Overview\" {...a11yProps(0)} onClick={() => { navigate(\"/companies/overview/\") }} />\r\n            <Tab label=\"Financials\" {...a11yProps(1)} onClick={() => { navigate(\"/companies/financials/\") }} />\r\n            <Tab label=\"Key metrics\" {...a11yProps(2)} onClick={() => { navigate(\"/companies/keymetrics/\") }} />\r\n            <Tab label=\"News\" {...a11yProps(2)} onClick={() => { history.push(`/news/`) }} />\r\n          </Tabs>\r\n          <FollowingControl {...{ handleFollow, isFollowing }} />\r\n          <Chip label=\"not owned\" size=\"small\" variant=\"outlined\" style={{ color: \"white\" }}\r\n            classes={{\r\n              outlined: classes.white\r\n            }}\r\n          />\r\n        </AppBar>\r\n      )}\r\n    </Transition>\r\n  )\r\n})\r\n\r\nconst FollowingControl = ({ handleFollow, isFollowing }) => {\r\n  return isFollowing ?\r\n    <Button\r\n      startIcon={<LibraryAddCheckIcon />}\r\n      onClick={handleFollow}\r\n    >\r\n      Following\r\n    </Button>\r\n    :\r\n    <Button\r\n      startIcon={<BookmarksIcon />}\r\n      onClick={handleFollow}\r\n    >Follow</Button>\r\n\r\n}","C:\\Users\\gonza\\finance-app\\src\\portfolio\\StockShop.js",["249","250"],"import { Button, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CustomCircularProgress } from '../components/components/CustomCircularProgress'\r\nimport { useDataLayer } from '../Context'\r\nimport useAuth from '../useAuth'\r\nimport { useUserLayer } from '../UserContext'\r\nimport { convertUnixToHuman } from '../utils/datesUtils'\r\nimport { formatter } from '../utils/numFormatter'\r\nimport { PurchaseDialog } from \"./PurchaseDialog\"\r\nimport styled from \"styled-components\"\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst date = convertUnixToHuman(Date.now())\r\nexport const StockShop = ({ ticker, currentPrice, loading, error, assetType }) => {\r\n\r\n    const { state, dispatch } = useDataLayer()\r\n    const { setPruebaReady } = state\r\n\r\n    //const userInfo = useAuth()\r\n\r\n    const { userState } = useUserLayer()\r\n\r\n\r\n    console.log(currentPrice, \"preciooo\")\r\n    const [qty, setQty] = useState(1)\r\n    const [orderTotal, setOrderTotal] = useState(\"\")\r\n    const [modalOpen, setModalOpen] = React.useState(false);\r\n    const [operationType, setOperationType] = React.useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (currentPrice) {\r\n            setOrderTotal(currentPrice * qty)\r\n        }\r\n    }, [qty, currentPrice])\r\n\r\n    const submitOrder = () => {\r\n        if (userState.info.email) {\r\n            let isFirstOperation = state.userActivity.length > 0 ? false : true\r\n            fetch(\"http://localhost:8001/api/v1/operations/addoperation\", {\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    user: userState.info.email,\r\n                    order: {\r\n                        operationType,\r\n                        ticker,\r\n                        amount: qty,\r\n                        price: currentPrice,\r\n                        date,\r\n                        isFirstOperation,\r\n                        assetType\r\n                    }\r\n                })\r\n            })\r\n                .then(success => {\r\n                    //means we have stored it in database\r\n                    dispatch({\r\n                        type: \"ADD_PORTFOLIO_CURRENT_POSSESIONS\",\r\n                        payload: {\r\n                            ticker,\r\n                            amount: qty,\r\n                            operationType,\r\n                            cashNetOperation: orderTotal,\r\n                            date,\r\n                            unitaryPrice: currentPrice\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: \"ADD_UNIQUE_STOCKS\",\r\n                        payload: {\r\n                            ticker,\r\n                        }\r\n                    })\r\n                    dispatch({\r\n                        type: \"STOCK_OPERATION\",\r\n                        payload: {\r\n                            date,\r\n                            operationType,\r\n                            amount: qty,\r\n                            ticker,\r\n                            unitPrice: currentPrice\r\n                        }\r\n                    })\r\n                    dispatch({ type: \"RESTART_GENERATED_SERIES\" })\r\n\r\n                })\r\n                .catch(err => { console.log(err, \"pputa falló\") })\r\n        } else {\r\n            alert(\"please log in\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //when users buys and its balance change we close firstModal\r\n        console.log(\"moneychange\")\r\n        modalOpen && setModalOpen(false)\r\n        //after that we could add a success modal or animation\r\n    }, [state.currentPossesions.userCash])\r\n\r\n    const LoginMessage = styled.div({\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    })\r\n    if (!userState.isAuthenticated) {\r\n        return (\r\n            <LoginMessage>\r\n                <p style={{ marginBottom: \"10px\" }}>\r\n                    <Link to=\"/pruebaLogin\">\r\n                        Login</Link> to invest</p>\r\n                <LockIcon />\r\n            </LoginMessage>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"stock-shop\">\r\n            {loading && <CustomCircularProgress />}\r\n            {error && <p>{error}</p>}\r\n            {/* prueba momentanea */}\r\n            { !setPruebaReady ? <div>Loading initial data...</div>\r\n                : currentPrice &&\r\n                <div>\r\n                    <p>{formatter.format((currentPrice))}</p>\r\n                    <TextField\r\n                        type=\"number\"\r\n                        value={qty}\r\n                        onChange={(e) => { setQty(parseInt(e.target.value)) }}\r\n                    />\r\n                    <div\r\n                        className=\"total-price\">\r\n                        {formatter.format(orderTotal)}\r\n                    </div>\r\n                    {[\"buy\", \"sell\"].map(type => (\r\n                        <Button\r\n                            onClick={() => {\r\n                                setOperationType(type)\r\n                                setModalOpen(true)\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            {type}\r\n                        </Button>\r\n                    ))}\r\n\r\n\r\n                    <PurchaseDialog\r\n                        {...{ modalOpen, setModalOpen, qty, orderTotal, ticker, submitOrder, operationType }}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Nasdaq.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\KeyMetrics.js",["251","252","253","254","255","256","257","258"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\AssetStructure.js",["259","260"],"import { Paper } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { DonutChart } from '../charts/DonutChart'\r\nimport { useDataLayer } from '../Context'\r\n\r\nexport const AssetStructure = () => {\r\n    const { state } = useDataLayer()\r\n    const { stocks } = state.currentPossesions\r\n    const [readyData, setReadyData] = useState(\"\")\r\n    const getMarketValueByStock = () => {\r\n        let arrByCompany = []\r\n        let totalMarketVal = 0\r\n        console.log(stocks, \"staaacks\")\r\n        stocks.forEach(poss => {\r\n            console.log(state.portfolioHistoryByCompany)\r\n            const stockHistory = state.portfolioHistoryByCompany[poss.ticker]\r\n            console.log(stockHistory, \"hastory\")\r\n            let marketVal;\r\n            if(stockHistory && stockHistory.length > 0){\r\n                const lastRegister = stockHistory[stockHistory.length - 1]\r\n                const lastRegisterClosePrice = lastRegister[2]\r\n                marketVal = lastRegisterClosePrice * poss.amount\r\n                \r\n            }else{\r\n                //here means that this is a new stock, and as we just update daily, the market value will be equal to its cost\r\n                const asset = state.currentPossesions.stocks. find(asset=>asset.ticker === poss.ticker)\r\n                marketVal = asset.amount * asset.unitaryCost\r\n            }\r\n            totalMarketVal += marketVal\r\n                arrByCompany = [...arrByCompany,\r\n                {\r\n                    ticker: poss.ticker,\r\n                    marketVal\r\n                }]\r\n        })\r\n        console.log(arrByCompany, \"elmarketall\")\r\n        return arrByCompany.map(item => {\r\n            item[\"proportion\"] = (item.marketVal / totalMarketVal) * 100\r\n            return item\r\n        })\r\n    }\r\n    const prepareData =(data, cb)=>{\r\n        cb(data.map(item=>[item.ticker, item.proportion]))\r\n    }\r\n    useEffect(() => {\r\n        if (stocks.length > 0 && state.areHistoricPricesReady) {\r\n            const data = getMarketValueByStock()\r\n            prepareData(data, (result)=>{\r\n                setReadyData(result)\r\n            })\r\n        }\r\n    }, [stocks, state.areHistoricPricesReady])\r\n    return (\r\n        <Paper>\r\n       { readyData.length && <DonutChart data={readyData}/>}\r\n    </Paper>\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\charts\\linechart.js",["261"],"import React from 'react'\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nexport const Linechart = ({ data }) => {\r\n\r\n    console.log(data, \"poooooooooota\")\r\n    const options = {\r\n        // title: {\r\n        //     text: 'Solar Employment Growth by Sector, 2010-2016'\r\n        // },     \r\n        \r\n        series: [{\r\n            data: data.map(item=>item.close),\r\n            // data: [50, 40, 40, 30, 15, 12, 8, 22,40],\r\n            marker: {\r\n                enabled: false\r\n            },\r\n            animation: false,\r\n        }],\r\n        chart: {\r\n            type: 'line',\r\n            backgroundColor: 'black',\r\n            plotBorderWidth: null,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            plotShadow: false,\r\n            borderWidth: 0,\r\n            plotBorderWidth: 0,\r\n            marginRight: 0\r\n        },\r\n        tooltip: {\r\n            userHTML: true,\r\n            style: {\r\n                padding: 0,\r\n                width: 0,\r\n                height: 0,\r\n            },\r\n            formatter: function () {\r\n                return this.point.residents;\r\n            },\r\n        },\r\n        title: {\r\n            text: ''\r\n        },\r\n        xAxis: {\r\n            enabled: false,\r\n            showEmpty: false,\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: ''\r\n            },\r\n            showEmpty: false,\r\n            enabled: false\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            line: {\r\n                lineWidth: 1.5,\r\n            },\r\n            showInLegend: false,\r\n            tooltip: {}\r\n        },\r\n        \r\n\r\n\r\n        // responsive: {\r\n        //     rules: [{\r\n        //         condition: {\r\n        //             maxWidth: 500\r\n        //         },\r\n        //         chartOptions: {\r\n        //             legend: {\r\n        //                 layout: 'vertical',\r\n        //                 align: 'center',\r\n        //                 verticalAlign: 'bottom'\r\n        //             }\r\n        //         }\r\n        //     }]\r\n        // }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { data && <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n                containerProps={{ style: { height: \"100%\" } }}\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\gonza\\finance-app\\src\\components\\TransitionComponent.js",["262","263","264","265","266"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport function TransitionComponent({children, open, setOpenChartModal}) {\r\n  const classes = useStyles();\r\n  //const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n      return\r\n    //setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      return\r\n    //setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={()=>{setOpenChartModal(false)}} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {children}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\gonza\\finance-app\\src\\Auth\\Register.js",["267","268"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\useIAuth.js",["269","270","271","272","273"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\Middleware2.js",["274","275","276","277","278","279"],"C:\\Users\\gonza\\finance-app\\src\\App.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"C:\\Users\\gonza\\finance-app\\src\\components\\Navbar.js",["294","295","296","297","298","299","300","301"],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\portfolioGenerator2.js",["302","303","304","305","306","307","308","309","310","311"],"C:\\Users\\gonza\\finance-app\\src\\index.js",["312","313","314"],"C:\\Users\\gonza\\finance-app\\src\\useTemporaryPossesions.js",["315","316","317"],"C:\\Users\\gonza\\finance-app\\src\\useAuth.js",["318","319","320"],"C:\\Users\\gonza\\finance-app\\src\\SignIn2.js",["321","322","323"],"C:\\Users\\gonza\\finance-app\\src\\SignIn.js",[],"C:\\Users\\gonza\\finance-app\\src\\RegistrationForm.js",[],"C:\\Users\\gonza\\finance-app\\src\\components\\Overlay.js",[],"C:\\Users\\gonza\\finance-app\\src\\charts\\KeymetricsChart.js",["324"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\ProtectedRoute.js",["325"],"C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\IndexesController.js",["326","327"],"import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { BigIndex } from './BigIndex'\r\nimport { IndexesGeneral } from './IndexesGeneral'\r\nimport { Nasdaq } from './Nasdaq'\r\nimport { SP500 } from './SP500'\r\n\r\n//queda pendiente poner el registro completo con csv \r\nexport const IndexesController = () => {\r\n    const { field } = useParams()\r\n    const bigIndexes = [\"sp500\", \"nasdaq\", \"dowjones\"]\r\n    console.log(field, \"campu\")\r\n    return (\r\n        <>\r\n            {bigIndexes.includes(field) ?\r\n                <BigIndex index={field}/>\r\n                : <IndexesGeneral />}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\PopulateOnScroll.js",["328","329"],"C:\\Users\\gonza\\finance-app\\src\\SignInForm.js",[],"C:\\Users\\gonza\\finance-app\\src\\utils\\useViewport.js",["330"],"import React, { useEffect, useState } from 'react'\r\n\r\nexport const useViewport = () => {\r\n    const [viewport, setViewport] = useState(window.innerWidth)\r\n    const updateViewport = () => {\r\n        setViewport(window.innerWidth)\r\n    }\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"resize\", updateViewport)\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateViewport)\r\n        }\r\n    }, [])\r\n    return { viewport }\r\n}\r\n","C:\\Users\\gonza\\finance-app\\src\\portfolio\\PortfolioPriceChart.js",["331","332"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\Marcador.js",[],"C:\\Users\\gonza\\finance-app\\src\\components\\Searcher2.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\Post.js",["333","334"],"C:\\Users\\gonza\\finance-app\\src\\charts\\DonutChart.js",["335","336"],"C:\\Users\\gonza\\finance-app\\src\\utils\\Pipes.js",[],"C:\\Users\\gonza\\finance-app\\src\\charts\\indexesChart2.js",["337","338","339","340","341"],"C:\\Users\\gonza\\finance-app\\src\\utils\\useFatch.js",["342","343","344"],"C:\\Users\\gonza\\finance-app\\src\\components\\NewsItem.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\Rows.js",["345","346","347","348"],"import {\r\n    Collapse,\r\n    IconButton,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { formatter } from \"../../utils/numFormatter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        background: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        // [theme.breakpoints.up(\"sm\")]: {\r\n        //     width: \"700px\"\r\n        // },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"1000px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"1250px\"\r\n        }\r\n    },\r\n    tableConatiner: {\r\n\r\n    },\r\n\r\n    iconButton: {\r\n        padding: 0\r\n    },\r\n\r\n    cell: {\r\n        borderBottom: \"none\"\r\n    },\r\n    sectionTitleCell: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            // paddingLeft: 0, paddingRight: 0\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n\r\n            // paddingLeft: 0, paddingRight: \"35px\"\r\n        }\r\n    },\r\n    subtitles: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            // maxWidth: \"130px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            // maxWidth: \"none\",\r\n            // width: \"200px\"\r\n        },\r\n        // maxWidth: \"none\"\r\n    }\r\n}))\r\n\r\n\r\nconst TableCellSmall = withStyles({\r\n    root: {\r\n        transform: \"translateX(1.5rem)\",\r\n        // whiteSpace: \"nowrap\"\r\n    }\r\n})(TableCell)\r\nconst TableCellXSmall = withStyles({\r\n    root: {\r\n        transform: \"translateX(3rem)\",\r\n        // whiteSpace: \"nowrap\"\r\n    }\r\n})(TableCell)\r\n\r\nconst makeShortInt = (item) => formatter.format(parseInt(item) / 1000000).replace(\".00\", \"\")\r\nexport const TableSectionChunk = ({ title, data, lookupKey, open, setOpen }) => {\r\n    const classes = useStyles()\r\n    console.log(data, \"la datona\")\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n            style={{padding: \"0.5rem\", width: \"40px\", textAlign: \"center\"}}\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    onClick={() => { setOpen(prev => !prev) }}\r\n                >\r\n                    {open ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell\r\n                classes={{ root: classes.sectionTitleCell }}\r\n                colSpan={2}\r\n                >\r\n                <p\r\n                //style={{width: \"120px\"}}\r\n                \r\n                >{title}</p></TableCell>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                >\r\n                    {makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\nexport const TableSubtitleChunk = ({ title, data, lookupKey, hackWidth }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                classes={{ root: classes.cell }}\r\n                style={{padding: \"0.5rem\", width: \"40px\", textAlign: \"center\"}}\r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    <KeyboardArrowUpIcon />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCellSmall\r\n                classes={{ root: classes.cell }}\r\n                colSpan={2}>\r\n                <p\r\n                    className={classes.subtitles}\r\n                >{title}</p>\r\n            </TableCellSmall>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                    style={{ width: hackWidth + \"px\" }}\r\n                    classes={{ root: classes.cell }}\r\n                >{makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\nexport const TableSubSubtitleChunk = ({ title, data, lookupKey, hackWidth }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell\r\n                classes={{ root: classes.cell }}\r\n                \r\n            >\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    <KeyboardArrowUpIcon />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCellXSmall\r\n                classes={{ root: classes.cell }}\r\n\r\n                colSpan={2}>\r\n                <p\r\n                    className={classes.subtitles}\r\n                >{title}</p>\r\n            </TableCellXSmall>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                    classes={{ root: classes.cell }}\r\n                    style={{ width: hackWidth + \"px\" }}\r\n                >{makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport const Collapsible = ({ children, renderTitleSection }) => {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <TableBody>\r\n            {renderTitleSection(open, setOpen)}\r\n            <TableRow\r\n            //  style={{...defaultStyles, ...transitionStyles[state]}}\r\n            >\r\n                <TableCell colSpan={8} className=\"nested-cell\">\r\n                    <Collapse\r\n                        in={open}\r\n                        mountOnEnter\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                    >\r\n                        <Table >\r\n                            <TableBody>\r\n                                {children}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport const TableSectionAlone = ({ title, data, lookupKey }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <TableRow\r\n        >\r\n            <TableCell>\r\n                <IconButton\r\n                    classes={{ root: classes.iconButton }}\r\n                    style={{ visibility: \"hidden\" }}\r\n                >\r\n                    {<KeyboardArrowDownIcon />}\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell\r\n                classes={{ root: classes.sectionTitleCell }}\r\n                colSpan={2}\r\n               >\r\n                <p\r\n                //style={{width: \"120px\"}}\r\n                >{title}</p></TableCell>\r\n            {data && Object.keys(data[lookupKey]).map(date =>\r\n                <TableCell\r\n                    align=\"right\"\r\n                >\r\n                    {makeShortInt(data[lookupKey][date])}</TableCell>)\r\n            }\r\n        </TableRow>\r\n    )\r\n}","C:\\Users\\gonza\\finance-app\\src\\views\\seguidores\\FollowingDispatcher.js",["349","350","351","352","353"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\Login.js",["354","355"],"C:\\Users\\gonza\\finance-app\\src\\Context.js",[],"C:\\Users\\gonza\\finance-app\\src\\portfolio\\Engine.js",["356","357","358","359","360","361"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructure.js",["362","363","364","365","366","367"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\PerformanceStructureB.js",["368","369","370","371"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\Positions.js",["372","373","374","375","376","377","378"],"C:\\Users\\gonza\\finance-app\\src\\Auth\\ContactDetails.js",["379","380","381","382"],"C:\\Users\\gonza\\finance-app\\src\\serviceWorker.ts",[],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\UserMain.js",["383","384"],"C:\\Users\\gonza\\finance-app\\src\\utils\\financeCalculations.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\News.js",["385","386","387","388","389","390","391"],"C:\\Users\\gonza\\finance-app\\src\\dashboard\\LateralSection.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\principal\\elements\\TickerBar2.js",[],"C:\\Users\\gonza\\finance-app\\src\\views\\company\\CompanyChart.js",["392","393","394","395","396","397","398","399","400","401","402","403","404"],"C:\\Users\\gonza\\finance-app\\src\\views\\indexes\\Constituents.js",["405","406","407"],{"ruleId":"408","severity":1,"message":"409","line":1,"column":21,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"408","severity":1,"message":"412","line":3,"column":34,"nodeType":"410","messageId":"411","endLine":3,"endColumn":59},{"ruleId":"408","severity":1,"message":"413","line":195,"column":11,"nodeType":"410","messageId":"411","endLine":195,"endColumn":35},{"ruleId":"408","severity":1,"message":"414","line":467,"column":17,"nodeType":"410","messageId":"411","endLine":467,"endColumn":21},{"ruleId":"415","severity":1,"message":"416","line":512,"column":8,"nodeType":"417","endLine":512,"endColumn":53,"suggestions":"418"},{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","severity":1,"message":"424","line":19,"column":11,"nodeType":"410","messageId":"411","endLine":19,"endColumn":20},{"ruleId":"419","replacedBy":"425"},{"ruleId":"421","replacedBy":"426"},{"ruleId":"415","severity":1,"message":"427","line":98,"column":6,"nodeType":"417","endLine":98,"endColumn":17,"suggestions":"428"},{"ruleId":"408","severity":1,"message":"429","line":5,"column":8,"nodeType":"410","messageId":"411","endLine":5,"endColumn":15},{"ruleId":"415","severity":1,"message":"430","line":102,"column":8,"nodeType":"417","endLine":102,"endColumn":42,"suggestions":"431"},{"ruleId":"408","severity":1,"message":"432","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":20},{"ruleId":"408","severity":1,"message":"433","line":1,"column":22,"nodeType":"410","messageId":"411","endLine":1,"endColumn":30},{"ruleId":"408","severity":1,"message":"434","line":1,"column":32,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"408","severity":1,"message":"435","line":14,"column":10,"nodeType":"410","messageId":"411","endLine":14,"endColumn":15},{"ruleId":"408","severity":1,"message":"436","line":15,"column":10,"nodeType":"410","messageId":"411","endLine":15,"endColumn":17},{"ruleId":"415","severity":1,"message":"437","line":35,"column":10,"nodeType":"417","endLine":35,"endColumn":17,"suggestions":"438"},{"ruleId":"415","severity":1,"message":"439","line":40,"column":10,"nodeType":"417","endLine":40,"endColumn":16,"suggestions":"440"},{"ruleId":"415","severity":1,"message":"441","line":47,"column":8,"nodeType":"417","endLine":47,"endColumn":14,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":26,"column":31,"nodeType":"445","messageId":"446","endLine":26,"endColumn":67,"fix":"447"},{"ruleId":"415","severity":1,"message":"448","line":52,"column":8,"nodeType":"417","endLine":52,"endColumn":46,"suggestions":"449"},{"ruleId":"450","severity":1,"message":"451","line":30,"column":13,"nodeType":"452","messageId":"453","endLine":30,"endColumn":28},{"ruleId":"408","severity":1,"message":"434","line":5,"column":8,"nodeType":"410","messageId":"411","endLine":5,"endColumn":20},{"ruleId":"408","severity":1,"message":"433","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":16},{"ruleId":"408","severity":1,"message":"432","line":7,"column":8,"nodeType":"410","messageId":"411","endLine":7,"endColumn":12},{"ruleId":"408","severity":1,"message":"454","line":8,"column":8,"nodeType":"410","messageId":"411","endLine":8,"endColumn":15},{"ruleId":"408","severity":1,"message":"455","line":34,"column":9,"nodeType":"410","messageId":"411","endLine":34,"endColumn":24},{"ruleId":"415","severity":1,"message":"456","line":46,"column":8,"nodeType":"417","endLine":46,"endColumn":30,"suggestions":"457"},{"ruleId":"415","severity":1,"message":"458","line":71,"column":8,"nodeType":"417","endLine":71,"endColumn":33,"suggestions":"459"},{"ruleId":"408","severity":1,"message":"460","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"461","line":7,"column":24,"nodeType":"410","messageId":"411","endLine":7,"endColumn":36},{"ruleId":"415","severity":1,"message":"462","line":26,"column":8,"nodeType":"417","endLine":26,"endColumn":10,"suggestions":"463"},{"ruleId":"408","severity":1,"message":"436","line":30,"column":12,"nodeType":"410","messageId":"411","endLine":30,"endColumn":19},{"ruleId":"415","severity":1,"message":"464","line":67,"column":8,"nodeType":"417","endLine":67,"endColumn":10,"suggestions":"465"},{"ruleId":"408","severity":1,"message":"466","line":1,"column":10,"nodeType":"410","messageId":"411","endLine":1,"endColumn":15},{"ruleId":"408","severity":1,"message":"467","line":2,"column":17,"nodeType":"410","messageId":"411","endLine":2,"endColumn":26},{"ruleId":"408","severity":1,"message":"468","line":2,"column":28,"nodeType":"410","messageId":"411","endLine":2,"endColumn":36},{"ruleId":"408","severity":1,"message":"469","line":9,"column":10,"nodeType":"410","messageId":"411","endLine":9,"endColumn":24},{"ruleId":"408","severity":1,"message":"470","line":10,"column":10,"nodeType":"410","messageId":"411","endLine":10,"endColumn":19},{"ruleId":"408","severity":1,"message":"471","line":16,"column":11,"nodeType":"410","messageId":"411","endLine":16,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":1,"column":38,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"408","severity":1,"message":"472","line":13,"column":10,"nodeType":"410","messageId":"411","endLine":13,"endColumn":25},{"ruleId":"408","severity":1,"message":"473","line":16,"column":10,"nodeType":"410","messageId":"411","endLine":16,"endColumn":20},{"ruleId":"408","severity":1,"message":"474","line":18,"column":10,"nodeType":"410","messageId":"411","endLine":18,"endColumn":24},{"ruleId":"408","severity":1,"message":"475","line":24,"column":10,"nodeType":"410","messageId":"411","endLine":24,"endColumn":21},{"ruleId":"408","severity":1,"message":"476","line":25,"column":10,"nodeType":"410","messageId":"411","endLine":25,"endColumn":32},{"ruleId":"408","severity":1,"message":"429","line":26,"column":8,"nodeType":"410","messageId":"411","endLine":26,"endColumn":15},{"ruleId":"408","severity":1,"message":"477","line":32,"column":10,"nodeType":"410","messageId":"411","endLine":32,"endColumn":22},{"ruleId":"415","severity":1,"message":"478","line":118,"column":6,"nodeType":"417","endLine":118,"endColumn":33,"suggestions":"479"},{"ruleId":"408","severity":1,"message":"480","line":131,"column":10,"nodeType":"410","messageId":"411","endLine":131,"endColumn":14},{"ruleId":"408","severity":1,"message":"481","line":138,"column":10,"nodeType":"410","messageId":"411","endLine":138,"endColumn":15},{"ruleId":"408","severity":1,"message":"482","line":138,"column":17,"nodeType":"410","messageId":"411","endLine":138,"endColumn":25},{"ruleId":"415","severity":1,"message":"483","line":160,"column":6,"nodeType":"417","endLine":160,"endColumn":17,"suggestions":"484"},{"ruleId":"415","severity":1,"message":"485","line":172,"column":6,"nodeType":"417","endLine":172,"endColumn":28,"suggestions":"486"},{"ruleId":"408","severity":1,"message":"487","line":10,"column":10,"nodeType":"410","messageId":"411","endLine":10,"endColumn":14},{"ruleId":"408","severity":1,"message":"488","line":10,"column":16,"nodeType":"410","messageId":"411","endLine":10,"endColumn":19},{"ruleId":"408","severity":1,"message":"489","line":10,"column":21,"nodeType":"410","messageId":"411","endLine":10,"endColumn":25},{"ruleId":"408","severity":1,"message":"490","line":10,"column":27,"nodeType":"410","messageId":"411","endLine":10,"endColumn":35},{"ruleId":"408","severity":1,"message":"491","line":14,"column":10,"nodeType":"410","messageId":"411","endLine":14,"endColumn":19},{"ruleId":"408","severity":1,"message":"492","line":15,"column":10,"nodeType":"410","messageId":"411","endLine":15,"endColumn":19},{"ruleId":"408","severity":1,"message":"493","line":16,"column":10,"nodeType":"410","messageId":"411","endLine":16,"endColumn":20},{"ruleId":"408","severity":1,"message":"475","line":18,"column":10,"nodeType":"410","messageId":"411","endLine":18,"endColumn":21},{"ruleId":"408","severity":1,"message":"460","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"468","line":1,"column":36,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"408","severity":1,"message":"494","line":4,"column":10,"nodeType":"410","messageId":"411","endLine":4,"endColumn":28},{"ruleId":"408","severity":1,"message":"495","line":10,"column":11,"nodeType":"410","messageId":"411","endLine":10,"endColumn":24},{"ruleId":"408","severity":1,"message":"496","line":22,"column":11,"nodeType":"410","messageId":"411","endLine":22,"endColumn":28},{"ruleId":"408","severity":1,"message":"497","line":154,"column":11,"nodeType":"410","messageId":"411","endLine":154,"endColumn":23},{"ruleId":"408","severity":1,"message":"498","line":159,"column":13,"nodeType":"410","messageId":"411","endLine":159,"endColumn":19},{"ruleId":"408","severity":1,"message":"499","line":159,"column":21,"nodeType":"410","messageId":"411","endLine":159,"endColumn":29},{"ruleId":"408","severity":1,"message":"500","line":159,"column":31,"nodeType":"410","messageId":"411","endLine":159,"endColumn":41},{"ruleId":"415","severity":1,"message":"501","line":279,"column":8,"nodeType":"417","endLine":279,"endColumn":49,"suggestions":"502"},{"ruleId":"408","severity":1,"message":"503","line":5,"column":8,"nodeType":"410","messageId":"411","endLine":5,"endColumn":11},{"ruleId":"408","severity":1,"message":"504","line":7,"column":25,"nodeType":"410","messageId":"411","endLine":7,"endColumn":30},{"ruleId":"505","severity":1,"message":"506","line":29,"column":1,"nodeType":"507","messageId":"508","endLine":29,"endColumn":20},{"ruleId":"408","severity":1,"message":"460","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"509","line":8,"column":11,"nodeType":"410","messageId":"411","endLine":8,"endColumn":20},{"ruleId":"415","severity":1,"message":"485","line":33,"column":8,"nodeType":"417","endLine":33,"endColumn":28,"suggestions":"510"},{"ruleId":"408","severity":1,"message":"460","line":2,"column":8,"nodeType":"410","messageId":"411","endLine":2,"endColumn":13},{"ruleId":"408","severity":1,"message":"468","line":2,"column":17,"nodeType":"410","messageId":"411","endLine":2,"endColumn":25},{"ruleId":"415","severity":1,"message":"511","line":23,"column":6,"nodeType":"417","endLine":23,"endColumn":30,"suggestions":"512"},{"ruleId":"408","severity":1,"message":"513","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"408","severity":1,"message":"514","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":17},{"ruleId":"408","severity":1,"message":"515","line":78,"column":11,"nodeType":"410","messageId":"411","endLine":78,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":1,"column":28,"nodeType":"410","messageId":"411","endLine":1,"endColumn":34},{"ruleId":"408","severity":1,"message":"467","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},{"ruleId":"408","severity":1,"message":"516","line":5,"column":10,"nodeType":"410","messageId":"411","endLine":5,"endColumn":16},{"ruleId":"408","severity":1,"message":"517","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":15},{"ruleId":"408","severity":1,"message":"518","line":1,"column":10,"nodeType":"410","messageId":"411","endLine":1,"endColumn":18},{"ruleId":"415","severity":1,"message":"519","line":32,"column":8,"nodeType":"417","endLine":32,"endColumn":22,"suggestions":"520"},{"ruleId":"408","severity":1,"message":"460","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"521","line":2,"column":22,"nodeType":"410","messageId":"411","endLine":2,"endColumn":27},{"ruleId":"415","severity":1,"message":"522","line":46,"column":8,"nodeType":"417","endLine":46,"endColumn":15,"suggestions":"523"},{"ruleId":"408","severity":1,"message":"436","line":10,"column":39,"nodeType":"410","messageId":"411","endLine":10,"endColumn":46},{"ruleId":"408","severity":1,"message":"524","line":101,"column":19,"nodeType":"410","messageId":"411","endLine":101,"endColumn":29},{"ruleId":"408","severity":1,"message":"468","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"467","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"525","line":1,"column":46,"nodeType":"410","messageId":"411","endLine":1,"endColumn":61},{"ruleId":"408","severity":1,"message":"526","line":4,"column":10,"nodeType":"410","messageId":"411","endLine":4,"endColumn":20},{"ruleId":"415","severity":1,"message":"522","line":23,"column":8,"nodeType":"417","endLine":23,"endColumn":15,"suggestions":"527"},{"ruleId":"408","severity":1,"message":"528","line":45,"column":13,"nodeType":"410","messageId":"411","endLine":45,"endColumn":18},{"ruleId":"408","severity":1,"message":"529","line":46,"column":13,"nodeType":"410","messageId":"411","endLine":46,"endColumn":19},{"ruleId":"408","severity":1,"message":"460","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"415","severity":1,"message":"530","line":53,"column":6,"nodeType":"417","endLine":53,"endColumn":13,"suggestions":"531"},{"ruleId":"415","severity":1,"message":"532","line":73,"column":6,"nodeType":"417","endLine":73,"endColumn":21,"suggestions":"533"},{"ruleId":"408","severity":1,"message":"534","line":8,"column":5,"nodeType":"410","messageId":"411","endLine":8,"endColumn":19},{"ruleId":"408","severity":1,"message":"535","line":9,"column":5,"nodeType":"410","messageId":"411","endLine":9,"endColumn":14},{"ruleId":"408","severity":1,"message":"467","line":13,"column":17,"nodeType":"410","messageId":"411","endLine":13,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":13,"column":28,"nodeType":"410","messageId":"411","endLine":13,"endColumn":34},{"ruleId":"408","severity":1,"message":"468","line":1,"column":36,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"536","severity":1,"message":"537","line":10,"column":5,"nodeType":"538","messageId":"539","endLine":12,"endColumn":6},{"ruleId":"505","severity":1,"message":"540","line":115,"column":9,"nodeType":"507","messageId":"541","endLine":115,"endColumn":71},{"ruleId":"415","severity":1,"message":"542","line":208,"column":8,"nodeType":"417","endLine":208,"endColumn":10,"suggestions":"543"},{"ruleId":"408","severity":1,"message":"544","line":248,"column":7,"nodeType":"410","messageId":"411","endLine":248,"endColumn":11},{"ruleId":"408","severity":1,"message":"467","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},{"ruleId":"408","severity":1,"message":"526","line":3,"column":10,"nodeType":"410","messageId":"411","endLine":3,"endColumn":20},{"ruleId":"408","severity":1,"message":"460","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"409","line":1,"column":28,"nodeType":"410","messageId":"411","endLine":1,"endColumn":34},{"ruleId":"408","severity":1,"message":"468","line":1,"column":36,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"408","severity":1,"message":"545","line":3,"column":10,"nodeType":"410","messageId":"411","endLine":3,"endColumn":32},{"ruleId":"408","severity":1,"message":"546","line":18,"column":13,"nodeType":"410","messageId":"411","endLine":18,"endColumn":26},{"ruleId":"415","severity":1,"message":"547","line":152,"column":8,"nodeType":"417","endLine":152,"endColumn":30,"suggestions":"548"},{"ruleId":"408","severity":1,"message":"494","line":5,"column":34,"nodeType":"410","messageId":"411","endLine":5,"endColumn":52},{"ruleId":"408","severity":1,"message":"549","line":5,"column":54,"nodeType":"410","messageId":"411","endLine":5,"endColumn":72},{"ruleId":"408","severity":1,"message":"550","line":13,"column":54,"nodeType":"410","messageId":"411","endLine":13,"endColumn":69},{"ruleId":"408","severity":1,"message":"551","line":15,"column":11,"nodeType":"410","messageId":"411","endLine":15,"endColumn":16},{"ruleId":"408","severity":1,"message":"552","line":16,"column":11,"nodeType":"410","messageId":"411","endLine":16,"endColumn":16},{"ruleId":"415","severity":1,"message":"553","line":103,"column":8,"nodeType":"417","endLine":103,"endColumn":49,"suggestions":"554"},{"ruleId":"408","severity":1,"message":"409","line":1,"column":38,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"408","severity":1,"message":"494","line":5,"column":34,"nodeType":"410","messageId":"411","endLine":5,"endColumn":52},{"ruleId":"408","severity":1,"message":"549","line":5,"column":54,"nodeType":"410","messageId":"411","endLine":5,"endColumn":72},{"ruleId":"415","severity":1,"message":"555","line":81,"column":8,"nodeType":"417","endLine":81,"endColumn":48,"suggestions":"556"},{"ruleId":"408","severity":1,"message":"557","line":4,"column":38,"nodeType":"410","messageId":"411","endLine":4,"endColumn":47},{"ruleId":"408","severity":1,"message":"558","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":16},{"ruleId":"408","severity":1,"message":"559","line":9,"column":10,"nodeType":"410","messageId":"411","endLine":9,"endColumn":18},{"ruleId":"408","severity":1,"message":"435","line":44,"column":21,"nodeType":"410","messageId":"411","endLine":44,"endColumn":26},{"ruleId":"415","severity":1,"message":"560","line":92,"column":8,"nodeType":"417","endLine":92,"endColumn":46,"suggestions":"561"},{"ruleId":"408","severity":1,"message":"562","line":124,"column":11,"nodeType":"410","messageId":"411","endLine":124,"endColumn":24},{"ruleId":"415","severity":1,"message":"563","line":164,"column":8,"nodeType":"417","endLine":164,"endColumn":15,"suggestions":"564"},{"ruleId":"408","severity":1,"message":"565","line":8,"column":7,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"408","severity":1,"message":"566","line":14,"column":12,"nodeType":"410","messageId":"411","endLine":14,"endColumn":20},{"ruleId":"567","severity":1,"message":"568","line":46,"column":38,"nodeType":"569","endLine":46,"endColumn":91},{"ruleId":"408","severity":1,"message":"570","line":136,"column":7,"nodeType":"410","messageId":"411","endLine":136,"endColumn":16},{"ruleId":"408","severity":1,"message":"571","line":3,"column":10,"nodeType":"410","messageId":"411","endLine":3,"endColumn":18},{"ruleId":"415","severity":1,"message":"572","line":18,"column":8,"nodeType":"417","endLine":18,"endColumn":38,"suggestions":"573"},{"ruleId":"408","severity":1,"message":"574","line":3,"column":10,"nodeType":"410","messageId":"411","endLine":3,"endColumn":26},{"ruleId":"408","severity":1,"message":"575","line":5,"column":37,"nodeType":"410","messageId":"411","endLine":5,"endColumn":49},{"ruleId":"408","severity":1,"message":"576","line":7,"column":10,"nodeType":"410","messageId":"411","endLine":7,"endColumn":36},{"ruleId":"408","severity":1,"message":"577","line":29,"column":11,"nodeType":"410","messageId":"411","endLine":29,"endColumn":24},{"ruleId":"408","severity":1,"message":"578","line":50,"column":12,"nodeType":"410","messageId":"411","endLine":50,"endColumn":28},{"ruleId":"408","severity":1,"message":"579","line":50,"column":30,"nodeType":"410","messageId":"411","endLine":50,"endColumn":48},{"ruleId":"415","severity":1,"message":"580","line":57,"column":29,"nodeType":"581","endLine":60,"endColumn":20},{"ruleId":"408","severity":1,"message":"525","line":1,"column":46,"nodeType":"410","messageId":"411","endLine":1,"endColumn":61},{"ruleId":"408","severity":1,"message":"491","line":5,"column":10,"nodeType":"410","messageId":"411","endLine":5,"endColumn":19},{"ruleId":"408","severity":1,"message":"582","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":26},{"ruleId":"408","severity":1,"message":"583","line":6,"column":28,"nodeType":"410","messageId":"411","endLine":6,"endColumn":42},{"ruleId":"408","severity":1,"message":"466","line":6,"column":44,"nodeType":"410","messageId":"411","endLine":6,"endColumn":49},{"ruleId":"408","severity":1,"message":"584","line":6,"column":51,"nodeType":"410","messageId":"411","endLine":6,"endColumn":61},{"ruleId":"408","severity":1,"message":"585","line":7,"column":10,"nodeType":"410","messageId":"411","endLine":7,"endColumn":17},{"ruleId":"408","severity":1,"message":"586","line":8,"column":10,"nodeType":"410","messageId":"411","endLine":8,"endColumn":20},{"ruleId":"408","severity":1,"message":"587","line":18,"column":13,"nodeType":"410","messageId":"411","endLine":18,"endColumn":18},{"ruleId":"408","severity":1,"message":"588","line":18,"column":20,"nodeType":"410","messageId":"411","endLine":18,"endColumn":28},{"ruleId":"408","severity":1,"message":"589","line":21,"column":12,"nodeType":"410","messageId":"411","endLine":21,"endColumn":22},{"ruleId":"408","severity":1,"message":"435","line":26,"column":29,"nodeType":"410","messageId":"411","endLine":26,"endColumn":34},{"ruleId":"408","severity":1,"message":"529","line":66,"column":13,"nodeType":"410","messageId":"411","endLine":66,"endColumn":19},{"ruleId":"408","severity":1,"message":"588","line":9,"column":20,"nodeType":"410","messageId":"411","endLine":9,"endColumn":28},{"ruleId":"408","severity":1,"message":"590","line":14,"column":13,"nodeType":"410","messageId":"411","endLine":14,"endColumn":18},{"ruleId":"408","severity":1,"message":"591","line":15,"column":11,"nodeType":"410","messageId":"411","endLine":15,"endColumn":23},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'convertHumanToUnixInitial' is defined but never used.","'generateSerieFromBeginin' is assigned a value but never used.","'koko' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state.userActivity'. Either include them or remove the dependency array.","ArrayExpression",["592"],"no-native-reassign",["593"],"no-negated-in-lhs",["594"],"@typescript-eslint/no-unused-vars","'StyledDiv' is assigned a value but never used.",["593"],["594"],"React Hook useEffect has a missing dependency: 'currentCompany.ticker'. Either include it or remove the dependency array.",["595"],"'useAuth' is defined but never used.","React Hook useEffect has a missing dependency: 'modalOpen'. Either include it or remove the dependency array.",["596"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ticker'. Either include it or remove the dependency array. If 'setData' needs the current value of 'ticker', you can also switch to useReducer instead of useState and read 'ticker' in the reducer.",["597"],"React Hook useEffect has missing dependencies: 'dispatch', 'state.keymetrics', and 'ticker'. Either include them or remove the dependency array.",["598"],"React Hook useEffect has a missing dependency: 'setListHeight'. Either include it or remove the dependency array. If 'setListHeight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["599"],"no-whitespace-before-property","Unexpected whitespace before property find.","MemberExpression","unexpectedWhitespace",{"range":"600","text":"601"},"React Hook useEffect has a missing dependency: 'getMarketValueByStock'. Either include it or remove the dependency array.",["602"],"no-dupe-keys","Duplicate key 'plotBorderWidth'.","ObjectExpression","unexpected","'Divider' is defined but never used.","'handleClickOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["603"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["604"],"'React' is defined but never used.","'userDispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userState.token'. Either include it or remove the dependency array.",["605"],"React Hook useEffect has missing dependencies: 'userDispatch' and 'userState.token'. Either include them or remove the dependency array.",["606"],"'Paper' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'LateralSection' is defined but never used.","'Marcador2' is defined but never used.","'Component' is assigned a value but never used.","'KeymetricsChart' is defined but never used.","'Financials' is defined but never used.","'CompanySection' is defined but never used.","'useOktaAuth' is defined but never used.","'useTemporaryPossesions' is defined but never used.","'PersonasList' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userState'. Either include them or remove the dependency array.",["607"],"'open' is assigned a value but never used.","'width' is assigned a value but never used.","'setWidth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["608"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["609"],"'Chip' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'useTheme' is defined but never used.","'useParams' is defined but never used.","'useMesure' is defined but never used.","'Transition' is defined but never used.","'convertUnixToHuman' is defined but never used.","'userRefreshed' is assigned a value but never used.","'getLastValidPrice' is assigned a value but never used.","'generateSeri' is assigned a value but never used.","'change' is defined but never used.","'lastDate' is defined but never used.","'lastIncome' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'generateSerie', and 'storePortfolioDB'. Either include them or remove the dependency array.",["610"],"'App' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'iteration' is assigned a value but never used.",["611"],"React Hook useEffect has a missing dependency: 'userDispatch'. Either include it or remove the dependency array.",["612"],"'useContext' is defined but never used.","'Context' is defined but never used.","'handleSubmita' is assigned a value but never used.","'Nasdaq' is defined but never used.","'SP500' is defined but never used.","'debounce' is defined but never used.","React Hook useEffect has missing dependencies: 'chunkCount', 'currentChunk', and 'isDataReadyScroll'. Either include them or remove the dependency array.",["613"],"'chart' is defined but never used.","React Hook useEffect has a missing dependency: 'prepareData'. Either include it or remove the dependency array.",["614"],"'created_at' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'useUILayer' is defined but never used.",["615"],"'ohlNA' is assigned a value but never used.","'volume' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'datos', 'dispatch', 'isInState', 'options.explicitUrl', 'state.indexes', 'ticker', and 'url'. Either include them or remove the dependency array. If 'setRequest' needs the current value of 'ticker', you can also switch to useReducer instead of useState and read 'ticker' in the reducer.",["616"],"React Hook useEffect has missing dependencies: 'field', 'state', and 'ticker'. Either include them or remove the dependency array. If 'setRequest' needs the current value of 'field', you can also switch to useReducer instead of useState and read 'field' in the reducer.",["617"],"'TableContainer' is defined but never used.","'TableHead' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Nested block is redundant.","redundantNestedBlock","React Hook useEffect has a missing dependency: 'timeline'. Either include it or remove the dependency array.",["618"],"'Koko' is assigned a value but never used.","'convertHumanToUnixInit' is defined but never used.","'missingTicker' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__init'. Either include it or remove the dependency array.",["619"],"'milisencondsInADay' is defined but never used.","'companiesChange' is assigned a value but never used.","'data1' is assigned a value but never used.","'data2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'state.currentPossesions.stocks', 'state.generatedSeries.data.dates', and 'state.portfolioHistory'. Either include them or remove the dependency array.",["620"],"React Hook useEffect has a missing dependency: 'prepareDataset'. Either include it or remove the dependency array.",["621"],"'TextField' is defined but never used.","'Search' is defined but never used.","'Searcher' is defined but never used.","React Hook useEffect has missing dependencies: 'getCompanyChange', 'logos', and 'state.currentPossesions.stocks'. Either include them or remove the dependency array.",["622"],"'backToInitial' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'readyState'. Either include it or remove the dependency array.",["623"],"'Container' is assigned a value but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormGroup' is assigned a value but never used.","'Marcador' is defined but never used.","React Hook useEffect has a missing dependency: 'state.currentPossesions'. Either include it or remove the dependency array.",["624"],"'useFetchWithCors' is defined but never used.","'NewsItemOver' is defined but never used.","'CompassCalibrationOutlined' is defined but never used.","'isLoadingImgs' is assigned a value but never used.","'showingSkeletong' is assigned a value but never used.","'setShowingSkeleton' is assigned a value but never used.","Assignments to the 'debounceTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'CircularProgress' is defined but never used.","'LinearProgress' is defined but never used.","'Typography' is defined but never used.","'TableUI' is defined but never used.","'KeyMetrics' is defined but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'isBuilding' is assigned a value but never used.","'datos' is assigned a value but never used.","'readyTickers' is assigned a value but never used.",{"desc":"625","fix":"626"},"no-global-assign","no-unsafe-negation",{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},[1254,1256],".",{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"661","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},"Update the dependencies array to be: [state.setPruebaReady, state.generatedSeries, state.userActivity, dispatch]",{"range":"682","text":"683"},"Update the dependencies array to be: [currentCompany.ticker, following]",{"range":"684","text":"685"},"Update the dependencies array to be: [modalOpen, state.currentPossesions.userCash]",{"range":"686","text":"687"},"Update the dependencies array to be: [state, ticker]",{"range":"688","text":"689"},"Update the dependencies array to be: [data, dispatch, state.keymetrics, ticker]",{"range":"690","text":"691"},"Update the dependencies array to be: [data, setListHeight]",{"range":"692","text":"693"},"Update the dependencies array to be: [stocks, state.areHistoricPricesReady, getMarketValueByStock]",{"range":"694","text":"695"},"Update the dependencies array to be: [debouncedQuery.email, email]",{"range":"696","text":"697"},"Update the dependencies array to be: [debouncedQuery.username, username]",{"range":"698","text":"699"},"Update the dependencies array to be: [userState.token]",{"range":"700","text":"701"},"Update the dependencies array to be: [userDispatch, userState.token]",{"range":"702","text":"703"},"Update the dependencies array to be: [dispatch, userState, userState.isAuthenticated]",{"range":"704","text":"705"},"Update the dependencies array to be: [dispatch, history, selection]",{"range":"706","text":"707"},"Update the dependencies array to be: [dispatch, state.currentCompany]",{"range":"708","text":"709"},"Update the dependencies array to be: [generatedSeries, areHistoricPricesReady, generateSerie, dispatch, storePortfolioDB]",{"range":"710","text":"711"},"Update the dependencies array to be: [dispatch, state.userActivity]",{"range":"712","text":"713"},"Update the dependencies array to be: [authState, authService, userDispatch]",{"range":"714","text":"715"},"Update the dependencies array to be: [chunkCount, currentChunk, intersection, isDataReadyScroll]",{"range":"716","text":"717"},"Update the dependencies array to be: [datos, prepareData]",{"range":"718","text":"719"},{"range":"720","text":"719"},"Update the dependencies array to be: [datos, dispatch, field, isInState, options.explicitUrl, state.indexes, ticker, url]",{"range":"721","text":"722"},"Update the dependencies array to be: [field, state, state.indexes, ticker]",{"range":"723","text":"724"},"Update the dependencies array to be: [timeline]",{"range":"725","text":"726"},"Update the dependencies array to be: [__init, state.setPruebaReady]",{"range":"727","text":"728"},"Update the dependencies array to be: [areHistoricPricesReady, dispatch, generatedSeries, state.currentPossesions.stocks, state.generatedSeries.data.dates, state.portfolioHistory]",{"range":"729","text":"730"},"Update the dependencies array to be: [state.companiesImpact, generatedSeries, prepareDataset]",{"range":"731","text":"732"},"Update the dependencies array to be: [successLogo, quotes, companiesChange, state.currentPossesions.stocks, getCompanyChange, logos]",{"range":"733","text":"734"},"Update the dependencies array to be: [query, readyState]",{"range":"735","text":"736"},"Update the dependencies array to be: [state.areHistoricPricesReady, state.currentPossesions]",{"range":"737","text":"738"},[25726,25771],"[state.setPruebaReady, state.generatedSeries, state.userActivity, dispatch]",[2944,2955],"[currentCompany.ticker, following]",[3796,3830],"[modalOpen, state.currentPossesions.userCash]",[1296,1303],"[state, ticker]",[1503,1509],"[data, dispatch, state.keymetrics, ticker]",[1740,1746],"[data, setListHeight]",[2161,2199],"[stocks, state.areHistoricPricesReady, getMarketValueByStock]",[1694,1716],"[debouncedQuery.email, email]",[2550,2575],"[debouncedQuery.username, username]",[937,939],"[userState.token]",[2615,2617],"[userDispatch, userState.token]",[4356,4383],"[dispatch, userState, userState.isAuthenticated]",[5643,5654],"[dispatch, history, selection]",[5897,5919],"[dispatch, state.currentCompany]",[12499,12540],"[generatedSeries, areHistoricPricesReady, generateSerie, dispatch, storePortfolioDB]",[1228,1248],"[dispatch, state.userActivity]",[729,753],"[authState, authService, userDispatch]",[1246,1260],"[chunkCount, currentChunk, intersection, isDataReadyScroll]",[1524,1531],"[datos, prepareData]",[828,835],[1422,1429],"[datos, dispatch, field, isInState, options.explicitUrl, state.indexes, ticker, url]",[1938,1953],"[field, state, state.indexes, ticker]",[7429,7431],"[timeline]",[6284,6306],"[__init, state.setPruebaReady]",[4740,4781],"[areHistoricPricesReady, dispatch, generatedSeries, state.currentPossesions.stocks, state.generatedSeries.data.dates, state.portfolioHistory]",[3010,3050],"[state.companiesImpact, generatedSeries, prepareDataset]",[3645,3683],"[successLogo, quotes, companiesChange, state.currentPossesions.stocks, getCompanyChange, logos]",[6049,6056],"[query, readyState]",[762,792],"[state.areHistoricPricesReady, state.currentPossesions]"]